{
    "com.cocay.sicecd.model.Estado": {
        "full_name": "com.cocay.sicecd.model.Estado",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 55,
        "short_name": "Estado",
        "src": "com.cocay.sicecd.model.Estado",
        "annotations": [
            "@Entity",
            "@Table(name = \"Estado\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_estado\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_estado",
                "lineBegin": 19,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 50, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 24,
                "lineEnd": 25
            },
            {
                "annotations": [
                    "@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "type": "List<Profesor>",
                "variable": "profesores",
                "lineBegin": 27,
                "lineEnd": 28
            }
        ],
        "methods": {
            "getPk_id_estado": {
                "name": "getPk_id_estado",
                "lineBegin": 30,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 38,
                "lineEnd": 40,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 42,
                "lineEnd": 44,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_estado": {
                "name": "setPk_id_estado",
                "lineBegin": 34,
                "lineEnd": 36,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_estado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_estado = pk_id_estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.CascadeType",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getPk_id_estado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_estado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_estado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_estado = pk_id_estado;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Profesor": {
        "full_name": "com.cocay.sicecd.model.Profesor",
        "constructor": [
            "public Profesor() {\r\n}",
            "public Profesor(String nombre, String apellido_paterno, String apellido_materno, String correo, String rfc) {\r\n    this.nombre = nombre;\r\n    this.apellido_paterno = apellido_paterno;\r\n    this.apellido_materno = apellido_materno;\r\n    this.correo = correo;\r\n    this.rfc = rfc;\r\n}"
        ],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 370,
        "short_name": "Profesor",
        "src": "com.cocay.sicecd.model.Profesor",
        "annotations": [
            "@Entity",
            "@Table(name = \"Profesor\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_profesor\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_profesor",
                "lineBegin": 25,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Column(name = \"apellido_paterno\", nullable = false, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "apellido_paterno",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Column(name = \"apellido_materno\", nullable = true, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "apellido_materno",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Column(name = \"rfc\", nullable = true, length = 13, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "rfc",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@Column(name = \"curp\", nullable = true, length = 18, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curp",
                "lineBegin": 42,
                "lineEnd": 43
            },
            {
                "annotations": [
                    "@Column(name = \"correo\", nullable = false, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "correo",
                "lineBegin": 45,
                "lineEnd": 46
            },
            {
                "annotations": [
                    "@Column(name = \"telefono\", nullable = true, length = 20)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "telefono",
                "lineBegin": 48,
                "lineEnd": 49
            },
            {
                "annotations": [
                    "@Column(name = \"fecha_nac\", nullable = true)",
                    "@DateTimeFormat(pattern = \"dd-MM-yyyy\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Date",
                "variable": "fechaNac",
                "lineBegin": 51,
                "lineEnd": 53
            },
            {
                "annotations": [
                    "@Column(name = \"ciudad_localidad\", nullable = true, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "ciudad_localidad",
                "lineBegin": 55,
                "lineEnd": 56
            },
            {
                "annotations": [
                    "@Column(name = \"comprobante_doc\", nullable = true, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "comprobante_doc",
                "lineBegin": 58,
                "lineEnd": 59
            },
            {
                "annotations": [
                    "@Column(name = \"curp_doc\", nullable = true, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curp_doc",
                "lineBegin": 61,
                "lineEnd": 62
            },
            {
                "annotations": [
                    "@Column(name = \"rfc_doc\", nullable = true, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "rfc_doc",
                "lineBegin": 64,
                "lineEnd": 65
            },
            {
                "annotations": [
                    "@Column(name = \"certificado_doc\", nullable = true, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "certificado_doc",
                "lineBegin": 67,
                "lineEnd": 68
            },
            {
                "annotations": [
                    "@Column(name = \"ocupacion\", nullable = true, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "ocupacion",
                "lineBegin": 70,
                "lineEnd": 71
            },
            {
                "annotations": [
                    "@Column(name = \"plantel\", nullable = true, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "plantel",
                "lineBegin": 73,
                "lineEnd": 74
            },
            {
                "annotations": [
                    "@Column(name = \"clave_plantel\", nullable = true, length = 20)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "clave_plantel",
                "lineBegin": 76,
                "lineEnd": 77
            },
            {
                "annotations": [
                    "@Column(name = \"tempEstado\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempEstado",
                "lineBegin": 79,
                "lineEnd": 80
            },
            {
                "annotations": [
                    "@Column(name = \"tempGenero\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempGenero",
                "lineBegin": 82,
                "lineEnd": 83
            },
            {
                "annotations": [
                    "@Column(name = \"tempTurno\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempTurno",
                "lineBegin": 85,
                "lineEnd": 86
            },
            {
                "annotations": [
                    "@Column(name = \"tempGradoP\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempGradoP",
                "lineBegin": 88,
                "lineEnd": 89
            },
            {
                "annotations": [
                    "@Column(name = \"stTabla\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Integer",
                "variable": "stTabla",
                "lineBegin": 91,
                "lineEnd": 92
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Turno.class, optional = true)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_turno\", referencedColumnName = \"pk_id_turno\", insertable = true, updatable = true, nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Turno",
                "variable": "fk_id_turno",
                "lineBegin": 94,
                "lineEnd": 97
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Genero.class, optional = true)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"id_genero\", referencedColumnName = \"pk_id_genero\", insertable = true, updatable = true, nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Genero",
                "variable": "id_genero",
                "lineBegin": 99,
                "lineEnd": 102
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Grado_profesor.class, optional = true)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_grado_profesor\", referencedColumnName = \"pk_id_grado_profesor\", insertable = true, updatable = true, nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesor",
                "variable": "fk_id_grado_profesor",
                "lineBegin": 104,
                "lineEnd": 107
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_profesor\", targetEntity = Inscripcion.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "type": "List<Inscripcion>",
                "variable": "inscripciones",
                "lineBegin": 109,
                "lineEnd": 111
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_profesor\", targetEntity = Certificado.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "type": "List<Certificado>",
                "variable": "certificados",
                "lineBegin": 113,
                "lineEnd": 115
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Estado.class, optional = true)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_estado\", referencedColumnName = \"pk_id_estado\", insertable = true, updatable = true, nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Estado",
                "variable": "fk_id_estado",
                "lineBegin": 117,
                "lineEnd": 120
            }
        ],
        "methods": {
            "getCertificado_doc": {
                "name": "getCertificado_doc",
                "lineBegin": 317,
                "lineEnd": 319,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return certificado_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setApellido_materno": {
                "name": "setApellido_materno",
                "lineBegin": 160,
                "lineEnd": 162,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.apellido_materno = apellido_materno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getApellido_paterno": {
                "name": "getApellido_paterno",
                "lineBegin": 148,
                "lineEnd": 150,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return apellido_paterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setOcupacion": {
                "name": "setOcupacion",
                "lineBegin": 265,
                "lineEnd": 267,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ocupacion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.ocupacion = ocupacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_grado_profesor": {
                "name": "setFk_id_grado_profesor",
                "lineBegin": 257,
                "lineEnd": 259,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Grado_profesor",
                        "variable": "fk_id_grado_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_grado_profesor = fk_id_grado_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTelefono": {
                "name": "setTelefono",
                "lineBegin": 200,
                "lineEnd": 202,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.telefono = telefono;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getApellido_materno": {
                "name": "getApellido_materno",
                "lineBegin": 156,
                "lineEnd": 158,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return apellido_materno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCorreo": {
                "name": "getCorreo",
                "lineBegin": 180,
                "lineEnd": 182,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_turno": {
                "name": "setFk_id_turno",
                "lineBegin": 249,
                "lineEnd": 251,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Turno",
                        "variable": "fk_id_turno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_turno = fk_id_turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurp_doc": {
                "name": "setCurp_doc",
                "lineBegin": 305,
                "lineEnd": 307,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curp_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curp_doc = curp_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getGenero": {
                "name": "getGenero",
                "lineBegin": 184,
                "lineEnd": 186,
                "annotations": [],
                "returnDataType": [
                    "Genero"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc_doc": {
                "name": "setRfc_doc",
                "lineBegin": 313,
                "lineEnd": 315,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc_doc = rfc_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurp_doc": {
                "name": "getCurp_doc",
                "lineBegin": 301,
                "lineEnd": 303,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curp_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 144,
                "lineEnd": 146,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCertificados": {
                "name": "setCertificados",
                "lineBegin": 289,
                "lineEnd": 291,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.certificados = certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFechaNac": {
                "name": "setFechaNac",
                "lineBegin": 281,
                "lineEnd": 283,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fechaNac",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fechaNac = fechaNac;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCertificados": {
                "name": "getCertificados",
                "lineBegin": 285,
                "lineEnd": 287,
                "annotations": [],
                "returnDataType": [
                    "List<Certificado>"
                ],
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCertificado_doc": {
                "name": "setCertificado_doc",
                "lineBegin": 321,
                "lineEnd": 323,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "certificado_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.certificado_doc = certificado_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 140,
                "lineEnd": 142,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_estado": {
                "name": "setFk_id_estado",
                "lineBegin": 209,
                "lineEnd": 211,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Estado",
                        "variable": "fk_id_estado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_estado = fk_id_estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCiudad_localidad": {
                "name": "setCiudad_localidad",
                "lineBegin": 217,
                "lineEnd": 219,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.ciudad_localidad = ciudad_localidad;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_profesor": {
                "name": "setPk_id_profesor",
                "lineBegin": 136,
                "lineEnd": 138,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_profesor = pk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTelefono": {
                "name": "getTelefono",
                "lineBegin": 196,
                "lineEnd": 198,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return telefono;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempTurno": {
                "name": "getTempTurno",
                "lineBegin": 351,
                "lineEnd": 353,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempTurno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setApellido_paterno": {
                "name": "setApellido_paterno",
                "lineBegin": 152,
                "lineEnd": 154,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.apellido_paterno = apellido_paterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_profesor": {
                "name": "getPk_id_profesor",
                "lineBegin": 132,
                "lineEnd": 134,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempGenero": {
                "name": "setTempGenero",
                "lineBegin": 347,
                "lineEnd": 349,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempGenero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempGenero = tempGenero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave_plantel": {
                "name": "getClave_plantel",
                "lineBegin": 237,
                "lineEnd": 239,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave_plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempEstado": {
                "name": "getTempEstado",
                "lineBegin": 335,
                "lineEnd": 337,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPlantel": {
                "name": "getPlantel",
                "lineBegin": 229,
                "lineEnd": 231,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_grado_profesor": {
                "name": "getFk_id_grado_profesor",
                "lineBegin": 253,
                "lineEnd": 255,
                "annotations": [],
                "returnDataType": [
                    "Grado_profesor"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_grado_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempGradoP": {
                "name": "getTempGradoP",
                "lineBegin": 359,
                "lineEnd": 361,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempGradoP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setGenero": {
                "name": "setGenero",
                "lineBegin": 188,
                "lineEnd": 190,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Genero",
                        "variable": "id_genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.id_genero = id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setId_genero": {
                "name": "setId_genero",
                "lineBegin": 225,
                "lineEnd": 227,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Genero",
                        "variable": "id_genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.id_genero = id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getStTabla": {
                "name": "getStTabla",
                "lineBegin": 325,
                "lineEnd": 327,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempTurno": {
                "name": "setTempTurno",
                "lineBegin": 355,
                "lineEnd": 357,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempTurno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempTurno = tempTurno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setStTabla": {
                "name": "setStTabla",
                "lineBegin": 329,
                "lineEnd": 331,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.stTabla = stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getInscripciones": {
                "name": "getInscripciones",
                "lineBegin": 269,
                "lineEnd": 271,
                "annotations": [],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return inscripciones;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getComprobante_doc": {
                "name": "getComprobante_doc",
                "lineBegin": 293,
                "lineEnd": 295,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return comprobante_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setInscripciones": {
                "name": "setInscripciones",
                "lineBegin": 273,
                "lineEnd": 275,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "inscripciones",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.inscripciones = inscripciones;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempEstado": {
                "name": "setTempEstado",
                "lineBegin": 339,
                "lineEnd": 341,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempEstado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempEstado = tempEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCorreo": {
                "name": "setCorreo",
                "lineBegin": 192,
                "lineEnd": 194,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.correo = correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurp": {
                "name": "getCurp",
                "lineBegin": 172,
                "lineEnd": 174,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCiudad_localidad": {
                "name": "getCiudad_localidad",
                "lineBegin": 213,
                "lineEnd": 215,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return ciudad_localidad;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPlantel": {
                "name": "setPlantel",
                "lineBegin": 233,
                "lineEnd": 235,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.plantel = plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setComprobante_doc": {
                "name": "setComprobante_doc",
                "lineBegin": 297,
                "lineEnd": 299,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "comprobante_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.comprobante_doc = comprobante_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempGradoP": {
                "name": "setTempGradoP",
                "lineBegin": 363,
                "lineEnd": 365,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempGradoP",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempGradoP = tempGradoP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getId_genero": {
                "name": "getId_genero",
                "lineBegin": 221,
                "lineEnd": 223,
                "annotations": [],
                "returnDataType": [
                    "Genero"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getOcupacion": {
                "name": "getOcupacion",
                "lineBegin": 261,
                "lineEnd": 263,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return ocupacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_estado": {
                "name": "getFk_id_estado",
                "lineBegin": 204,
                "lineEnd": 206,
                "annotations": [],
                "returnDataType": [
                    "Estado"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave_plantel": {
                "name": "setClave_plantel",
                "lineBegin": 241,
                "lineEnd": 243,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave_plantel = clave_plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc": {
                "name": "setRfc",
                "lineBegin": 168,
                "lineEnd": 170,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc = rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempGenero": {
                "name": "getTempGenero",
                "lineBegin": 343,
                "lineEnd": 345,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempGenero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc": {
                "name": "getRfc",
                "lineBegin": 164,
                "lineEnd": 166,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc_doc": {
                "name": "getRfc_doc",
                "lineBegin": 309,
                "lineEnd": 311,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFechaNac": {
                "name": "getFechaNac",
                "lineBegin": 277,
                "lineEnd": 279,
                "annotations": [],
                "returnDataType": [
                    "Date"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fechaNac;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurp": {
                "name": "setCurp",
                "lineBegin": 176,
                "lineEnd": 178,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curp = curp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "toString": {
                "name": "toString",
                "lineBegin": 367,
                "lineEnd": 369,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return \"Nombre:\" + nombre + \", Apellido Paterno:\" + apellido_paterno + \", Apellido Materno:\" + apellido_materno + \", RFC: \" + rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_turno": {
                "name": "getFk_id_turno",
                "lineBegin": 245,
                "lineEnd": 247,
                "annotations": [],
                "returnDataType": [
                    "Turno"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption",
            "org.springframework.format.annotation.DateTimeFormat"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getCertificado_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return certificado_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setApellido_materno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.apellido_materno = apellido_materno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getApellido_paterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return apellido_paterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setOcupacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ocupacion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.ocupacion = ocupacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_grado_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Grado_profesor",
                        "variable": "fk_id_grado_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_grado_profesor = fk_id_grado_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTelefono",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.telefono = telefono;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getApellido_materno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return apellido_materno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_turno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Turno",
                        "variable": "fk_id_turno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_turno = fk_id_turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurp_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curp_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curp_doc = curp_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Genero",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return id_genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc_doc = rfc_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurp_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curp_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.certificados = certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFechaNac",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fechaNac",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fechaNac = fechaNac;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Certificado>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCertificado_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "certificado_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.certificado_doc = certificado_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_estado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Estado",
                        "variable": "fk_id_estado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_estado = fk_id_estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCiudad_localidad",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.ciudad_localidad = ciudad_localidad;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_profesor = pk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTelefono",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return telefono;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempTurno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setApellido_paterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.apellido_paterno = apellido_paterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempGenero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempGenero = tempGenero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave_plantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave_plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_grado_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Grado_profesor",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_grado_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempGradoP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempGradoP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Genero",
                        "variable": "id_genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.id_genero = id_genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setId_genero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Genero",
                        "variable": "id_genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.id_genero = id_genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempTurno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempTurno = tempTurno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.stTabla = stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getInscripciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return inscripciones;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getComprobante_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return comprobante_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setInscripciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "inscripciones",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.inscripciones = inscripciones;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempEstado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempEstado = tempEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.correo = correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCiudad_localidad",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return ciudad_localidad;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.plantel = plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setComprobante_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "comprobante_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.comprobante_doc = comprobante_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempGradoP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempGradoP",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempGradoP = tempGradoP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getId_genero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Genero",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return id_genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getOcupacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return ocupacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_estado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Estado",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave_plantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave_plantel = clave_plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc = rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempGenero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFechaNac",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Date",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fechaNac;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curp = curp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "toString",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return \"Nombre:\" + nombre + \", Apellido Paterno:\" + apellido_paterno + \", Apellido Materno:\" + apellido_materno + \", RFC: \" + rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_turno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Turno",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_turno;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.EstadoRep": {
        "full_name": "com.cocay.sicecd.repo.EstadoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 19,
        "short_name": "EstadoRep",
        "src": "com.cocay.sicecd.repo.EstadoRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 15,
                "lineEnd": 15,
                "annotations": [],
                "returnDataType": [
                    "List<Estado>"
                ],
                "identifier": [
                    "List",
                    "Estado"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombreEstado": {
                "name": "findByNombreEstado",
                "lineBegin": 17,
                "lineEnd": 18,
                "annotations": [
                    "@Query(\"SELECT c FROM Estado c where c.nombre = :nombre\")"
                ],
                "returnDataType": [
                    "Estado"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Estado, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Estado"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Estado>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombreEstado",
                "annotations": [
                    "@Query(\"SELECT c FROM Estado c where c.nombre = :nombre\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Estado",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ConsultaProfesorController": {
        "full_name": "com.cocay.sicecd.controller.ConsultaProfesorController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 307,
        "short_name": "ConsultaProfesorController",
        "src": "com.cocay.sicecd.controller.ConsultaProfesorController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ConsultaProfesorController",
                "variable": "controller",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesorRep",
                "lineBegin": 35,
                "lineEnd": 36
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 38,
                "lineEnd": 39
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CertificadoRep",
                "variable": "certRep",
                "lineBegin": 41,
                "lineEnd": 42
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 44,
                "lineEnd": 44
            }
        ],
        "methods": {
            "existeCertificado": {
                "name": "existeCertificado",
                "lineBegin": 267,
                "lineEnd": 276,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "boolean",
                        "variable": "res",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "certificado",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    boolean res = false;\r\n    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r\n    if (certificado != null) {\r\n        res = true;\r\n    }\r\n    return res;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "certRep",
                        "methodName": "findCertificado",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    }
                ],
                "exception": []
            },
            "fichaProfesor": {
                "name": "fichaProfesor",
                "lineBegin": 148,
                "lineEnd": 214,
                "annotations": [
                    "@RequestMapping(value = \"/ficha_profesor\", method = { RequestMethod.POST, RequestMethod.GET })"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "formatter",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "localidad",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Profesor p = profesorRep.findByID(id_profesor);\r\n    List<Grupo> grupos = grupoRep.findByIdAsesor(p.getPk_id_profesor());\r\n    String nombre = formatoCadena(p.getNombre(), 1);\r\n    String apellido_paterno = formatoCadena(p.getApellido_paterno(), 1);\r\n    String apellido_materno = formatoCadena(p.getApellido_materno(), 1);\r\n    model.addAttribute(\"id_profesor\", p.getPk_id_profesor());\r\n    model.addAttribute(\"nombre\", nombre);\r\n    model.addAttribute(\"apellido_paterno\", apellido_paterno);\r\n    model.addAttribute(\"apellido_materno\", apellido_materno);\r\n    if (p.getGenero() == null) {\r\n        model.addAttribute(\"genero\", \"\");\r\n    } else {\r\n        model.addAttribute(\"genero\", p.getGenero().getGenero());\r\n    }\r\n    if (p.getFechaNac() == null) {\r\n        model.addAttribute(\"fecha_nac\", \"\");\r\n    } else {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMMM yyyy\");\r\n        model.addAttribute(\"fecha_nac\", formatter.format(p.getFechaNac()));\r\n    }\r\n    String plantel = formatoCadena(p.getPlantel(), 1);\r\n    model.addAttribute(\"planel\", plantel);\r\n    model.addAttribute(\"clave_plantel\", formatoCadena(p.getClave_plantel(), 1));\r\n    model.addAttribute(\"curp\", formatoCadena(p.getCurp(), 2));\r\n    model.addAttribute(\"correo\", formatoCadena(p.getCorreo(), 3));\r\n    model.addAttribute(\"telefono\", p.getTelefono());\r\n    String localidad = \"\";\r\n    if (p.getCiudad_localidad() == null && p.getFk_id_estado() == null) {\r\n        localidad = \"\";\r\n    } else if (p.getCiudad_localidad() == null && p.getFk_id_estado() != null) {\r\n        localidad = p.getFk_id_estado().getNombre();\r\n    } else if (p.getCiudad_localidad() != null && p.getFk_id_estado() == null) {\r\n        localidad = formatoCadena(p.getCiudad_localidad(), 1);\r\n    } else {\r\n        localidad = formatoCadena(p.getCiudad_localidad(), 1) + \", \" + p.getFk_id_estado().getNombre();\r\n    }\r\n    model.addAttribute(\"localidad\", localidad);\r\n    model.addAttribute(\"rfc\", formatoCadena(p.getRfc(), 2));\r\n    if (p.getFk_id_grado_profesor() == null) {\r\n        model.addAttribute(\"escolaridad\", \"\");\r\n    } else {\r\n        model.addAttribute(\"escolaridad\", p.getFk_id_grado_profesor().getNombre());\r\n    }\r\n    if (p.getFk_id_turno() == null) {\r\n        model.addAttribute(\"turno\", \"\");\r\n    } else {\r\n        model.addAttribute(\"turno\", p.getFk_id_turno().getNombre());\r\n    }\r\n    model.put(\"grupo\", grupos);\r\n    model.put(\"ins\", p.getInscripciones());\r\n    model.put(\"controller\", controller);\r\n    return new ModelAndView(\"/ConsultarProfesor/ficha_profesor\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "grupoRep",
                        "methodName": "findByIdAsesor",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getGenero()",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "formatter",
                        "methodName": "format",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_estado()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estado"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_estado()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estado"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_grado_profesor()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_turno()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getInscripciones",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    }
                ],
                "exception": []
            },
            "formatoCadena": {
                "name": "formatoCadena",
                "lineBegin": 216,
                "lineEnd": 245,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "oracion",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "cadenas",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String oracion = \"\";\r\n    if (cadena == null) {\r\n        return oracion;\r\n    }\r\n    if (cadena.length() < 2) {\r\n        return cadena;\r\n    }\r\n    switch(tipo) {\r\n        case 1:\r\n            String[] cadenas = cadena.split(\" \");\r\n            for (int i = 0; i < cadenas.length - 1; i++) {\r\n                oracion += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r\n            }\r\n            oracion += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r\n            break;\r\n        case 2:\r\n            oracion = cadena.toUpperCase();\r\n            break;\r\n        case 3:\r\n            oracion = cadena.toLowerCase();\r\n            break;\r\n    }\r\n    return oracion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "normalizar": {
                "name": "normalizar",
                "lineBegin": 129,
                "lineEnd": 140,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    if (cadena == null) {\r\n        return \"\";\r\n    }\r\n    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r\n    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "existeDocumento": {
                "name": "existeDocumento",
                "lineBegin": 286,
                "lineEnd": 306,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "boolean",
                        "variable": "res",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    boolean res = false;\r\n    Profesor profesor = profesorRep.findByID(id_profesor);\r\n    switch(tipo) {\r\n        case 1:\r\n            if (profesor.getCurp_doc() != null)\r\n                res = true;\r\n            break;\r\n        case 2:\r\n            if (profesor.getRfc_doc() != null)\r\n                res = true;\r\n            break;\r\n        case 3:\r\n            if (profesor.getComprobante_doc() != null)\r\n                res = true;\r\n            break;\r\n    }\r\n    return res;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getComprobante_doc",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "consultaProfesor": {
                "name": "consultaProfesor",
                "lineBegin": 54,
                "lineEnd": 121,
                "annotations": [
                    "@RequestMapping(value = \"/consultaProfesor\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_estado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_turno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        String rfc = request.getParameter(\"rfc\").toUpperCase().trim();\r\n        String nombre = normalizar(request.getParameter(\"nombre\")).toUpperCase().trim();\r\n        String apellido_paterno = normalizar(request.getParameter(\"apellido_paterno\")).toUpperCase().trim();\r\n        String apellido_materno = normalizar(request.getParameter(\"apellido_materno\")).toUpperCase().trim();\r\n        Integer id_grado = Integer.parseInt(request.getParameter(\"grado_estudios\"));\r\n        Integer id_genero = Integer.parseInt(request.getParameter(\"genero\"));\r\n        Integer id_estado = Integer.parseInt(request.getParameter(\"estados\"));\r\n        Integer id_turno = Integer.parseInt(request.getParameter(\"turno\"));\r\n        List<Profesor> profesores = new ArrayList<Profesor>();\r\n        //List<Profesor> profesores2 = new ArrayList<Profesor>();\r\n        if (rfc == \"\" && nombre == \"\" && apellido_paterno == \"\" && apellido_materno == \"\" && id_estado == 33) {\r\n            profesores = profesorRep.findAll();\r\n        } else if (id_estado != 33) {\r\n            profesores = profesorRep.findByParams(rfc, nombre, apellido_paterno, apellido_materno, id_estado);\r\n        } else {\r\n            profesores = profesorRep.findByParams(rfc, nombre, apellido_paterno, apellido_materno);\r\n        }\r\n        List<Profesor> profesores2 = new ArrayList<Profesor>(profesores);\r\n        //Filtrando por grado de estudios\r\n        if (id_grado != 5) {\r\n            for (Profesor p : profesores2) {\r\n                if (p.getFk_id_grado_profesor() == null || p.getFk_id_grado_profesor().getPk_id_grado_profesor() != id_grado) {\r\n                    profesores.remove(p);\r\n                }\r\n            }\r\n        }\r\n        //Filtrando por g\u00ef\u00bf\u00bdnero\r\n        if (id_genero != 3) {\r\n            for (Profesor p : profesores2) {\r\n                if (p.getId_genero() == null || p.getId_genero().getPk_id_genero() != id_genero) {\r\n                    profesores.remove(p);\r\n                }\r\n            }\r\n        }\r\n        //Filtrando por turno\r\n        if (id_turno != 4) {\r\n            for (Profesor p : profesores2) {\r\n                if (p.getFk_id_turno() == null || p.getFk_id_turno().getPk_id_turno() != id_turno) {\r\n                    profesores.remove(p);\r\n                }\r\n            }\r\n        }\r\n        if (!profesores.isEmpty() || profesores.size() > 0) {\r\n            model.put(\"profesores\", profesores);\r\n            model.put(\"controller\", controller);\r\n            return new ModelAndView(\"/ConsultarProfesor/muestraListaProfesor\", model);\r\n        } else {\r\n            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r\n            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n        }\r\n    } catch (NullPointerException e) {\r\n        LOGGER.error(\"En la Tabla Profesor se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r\n        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_grado_profesor()",
                        "methodName": "getPk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getId_genero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getId_genero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getId_genero()",
                        "methodName": "getPk_id_genero",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_turno()",
                        "methodName": "getPk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    }
                ],
                "exception": []
            },
            "getCertificado": {
                "name": "getCertificado",
                "lineBegin": 254,
                "lineEnd": 257,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Certificado",
                        "variable": "certificado",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r\n    return certificado.getPk_id_certificado();\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "certRep",
                        "methodName": "findCertificado",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    },
                    {
                        "scopeName": "certificado",
                        "methodName": "getPk_id_certificado",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.text.Normalizer",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.ModelAttribute",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CertificadoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.ProfesorRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.ConsultaProfesorController"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_grado_profesor()",
                "methodName": "getPk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getId_genero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getId_genero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getId_genero()",
                "methodName": "getPk_id_genero",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_turno()",
                "methodName": "getPk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "grupoRep",
                "methodName": "findByIdAsesor",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getGenero()",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "p",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_estado()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estado"
            },
            {
                "scopeName": "p",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_estado()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estado"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_grado_profesor()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_turno()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "p",
                "methodName": "getInscripciones",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "certRep",
                "methodName": "findCertificado",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "certificado",
                "methodName": "getPk_id_certificado",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "certRep",
                "methodName": "findCertificado",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "existeCertificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    boolean res = false;\r",
                    "    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r",
                    "    if (certificado != null) {\r",
                    "        res = true;\r",
                    "    }\r",
                    "    return res;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "fichaProfesor",
                "annotations": [
                    "@RequestMapping(value = \"/ficha_profesor\", method = { RequestMethod.POST, RequestMethod.GET })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Profesor p = profesorRep.findByID(id_profesor);\r",
                    "    List<Grupo> grupos = grupoRep.findByIdAsesor(p.getPk_id_profesor());\r",
                    "    String nombre = formatoCadena(p.getNombre(), 1);\r",
                    "    String apellido_paterno = formatoCadena(p.getApellido_paterno(), 1);\r",
                    "    String apellido_materno = formatoCadena(p.getApellido_materno(), 1);\r",
                    "    model.addAttribute(\"id_profesor\", p.getPk_id_profesor());\r",
                    "    model.addAttribute(\"nombre\", nombre);\r",
                    "    model.addAttribute(\"apellido_paterno\", apellido_paterno);\r",
                    "    model.addAttribute(\"apellido_materno\", apellido_materno);\r",
                    "    if (p.getGenero() == null) {\r",
                    "        model.addAttribute(\"genero\", \"\");\r",
                    "    } else {\r",
                    "        model.addAttribute(\"genero\", p.getGenero().getGenero());\r",
                    "    }\r",
                    "    if (p.getFechaNac() == null) {\r",
                    "        model.addAttribute(\"fecha_nac\", \"\");\r",
                    "    } else {\r",
                    "        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMMM yyyy\");\r",
                    "        model.addAttribute(\"fecha_nac\", formatter.format(p.getFechaNac()));\r",
                    "    }\r",
                    "    String plantel = formatoCadena(p.getPlantel(), 1);\r",
                    "    model.addAttribute(\"planel\", plantel);\r",
                    "    model.addAttribute(\"clave_plantel\", formatoCadena(p.getClave_plantel(), 1));\r",
                    "    model.addAttribute(\"curp\", formatoCadena(p.getCurp(), 2));\r",
                    "    model.addAttribute(\"correo\", formatoCadena(p.getCorreo(), 3));\r",
                    "    model.addAttribute(\"telefono\", p.getTelefono());\r",
                    "    String localidad = \"\";\r",
                    "    if (p.getCiudad_localidad() == null && p.getFk_id_estado() == null) {\r",
                    "        localidad = \"\";\r",
                    "    } else if (p.getCiudad_localidad() == null && p.getFk_id_estado() != null) {\r",
                    "        localidad = p.getFk_id_estado().getNombre();\r",
                    "    } else if (p.getCiudad_localidad() != null && p.getFk_id_estado() == null) {\r",
                    "        localidad = formatoCadena(p.getCiudad_localidad(), 1);\r",
                    "    } else {\r",
                    "        localidad = formatoCadena(p.getCiudad_localidad(), 1) + \", \" + p.getFk_id_estado().getNombre();\r",
                    "    }\r",
                    "    model.addAttribute(\"localidad\", localidad);\r",
                    "    model.addAttribute(\"rfc\", formatoCadena(p.getRfc(), 2));\r",
                    "    if (p.getFk_id_grado_profesor() == null) {\r",
                    "        model.addAttribute(\"escolaridad\", \"\");\r",
                    "    } else {\r",
                    "        model.addAttribute(\"escolaridad\", p.getFk_id_grado_profesor().getNombre());\r",
                    "    }\r",
                    "    if (p.getFk_id_turno() == null) {\r",
                    "        model.addAttribute(\"turno\", \"\");\r",
                    "    } else {\r",
                    "        model.addAttribute(\"turno\", p.getFk_id_turno().getNombre());\r",
                    "    }\r",
                    "    model.put(\"grupo\", grupos);\r",
                    "    model.put(\"ins\", p.getInscripciones());\r",
                    "    model.put(\"controller\", controller);\r",
                    "    return new ModelAndView(\"/ConsultarProfesor/ficha_profesor\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formatoCadena",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String oracion = \"\";\r",
                    "    if (cadena == null) {\r",
                    "        return oracion;\r",
                    "    }\r",
                    "    if (cadena.length() < 2) {\r",
                    "        return cadena;\r",
                    "    }\r",
                    "    switch(tipo) {\r",
                    "        case 1:\r",
                    "            String[] cadenas = cadena.split(\" \");\r",
                    "            for (int i = 0; i < cadenas.length - 1; i++) {\r",
                    "                oracion += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r",
                    "            }\r",
                    "            oracion += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r",
                    "            break;\r",
                    "        case 2:\r",
                    "            oracion = cadena.toUpperCase();\r",
                    "            break;\r",
                    "        case 3:\r",
                    "            oracion = cadena.toLowerCase();\r",
                    "            break;\r",
                    "    }\r",
                    "    return oracion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "normalizar",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (cadena == null) {\r",
                    "        return \"\";\r",
                    "    }\r",
                    "    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r",
                    "    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "existeDocumento",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    boolean res = false;\r",
                    "    Profesor profesor = profesorRep.findByID(id_profesor);\r",
                    "    switch(tipo) {\r",
                    "        case 1:\r",
                    "            if (profesor.getCurp_doc() != null)\r",
                    "                res = true;\r",
                    "            break;\r",
                    "        case 2:\r",
                    "            if (profesor.getRfc_doc() != null)\r",
                    "                res = true;\r",
                    "            break;\r",
                    "        case 3:\r",
                    "            if (profesor.getComprobante_doc() != null)\r",
                    "                res = true;\r",
                    "            break;\r",
                    "    }\r",
                    "    return res;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultaProfesor",
                "annotations": [
                    "@RequestMapping(value = \"/consultaProfesor\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        String rfc = request.getParameter(\"rfc\").toUpperCase().trim();\r",
                    "        String nombre = normalizar(request.getParameter(\"nombre\")).toUpperCase().trim();\r",
                    "        String apellido_paterno = normalizar(request.getParameter(\"apellido_paterno\")).toUpperCase().trim();\r",
                    "        String apellido_materno = normalizar(request.getParameter(\"apellido_materno\")).toUpperCase().trim();\r",
                    "        Integer id_grado = Integer.parseInt(request.getParameter(\"grado_estudios\"));\r",
                    "        Integer id_genero = Integer.parseInt(request.getParameter(\"genero\"));\r",
                    "        Integer id_estado = Integer.parseInt(request.getParameter(\"estados\"));\r",
                    "        Integer id_turno = Integer.parseInt(request.getParameter(\"turno\"));\r",
                    "        List<Profesor> profesores = new ArrayList<Profesor>();\r",
                    "        //List<Profesor> profesores2 = new ArrayList<Profesor>();\r",
                    "        if (rfc == \"\" && nombre == \"\" && apellido_paterno == \"\" && apellido_materno == \"\" && id_estado == 33) {\r",
                    "            profesores = profesorRep.findAll();\r",
                    "        } else if (id_estado != 33) {\r",
                    "            profesores = profesorRep.findByParams(rfc, nombre, apellido_paterno, apellido_materno, id_estado);\r",
                    "        } else {\r",
                    "            profesores = profesorRep.findByParams(rfc, nombre, apellido_paterno, apellido_materno);\r",
                    "        }\r",
                    "        List<Profesor> profesores2 = new ArrayList<Profesor>(profesores);\r",
                    "        //Filtrando por grado de estudios\r",
                    "        if (id_grado != 5) {\r",
                    "            for (Profesor p : profesores2) {\r",
                    "                if (p.getFk_id_grado_profesor() == null || p.getFk_id_grado_profesor().getPk_id_grado_profesor() != id_grado) {\r",
                    "                    profesores.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        //Filtrando por g\u00ef\u00bf\u00bdnero\r",
                    "        if (id_genero != 3) {\r",
                    "            for (Profesor p : profesores2) {\r",
                    "                if (p.getId_genero() == null || p.getId_genero().getPk_id_genero() != id_genero) {\r",
                    "                    profesores.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        //Filtrando por turno\r",
                    "        if (id_turno != 4) {\r",
                    "            for (Profesor p : profesores2) {\r",
                    "                if (p.getFk_id_turno() == null || p.getFk_id_turno().getPk_id_turno() != id_turno) {\r",
                    "                    profesores.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        if (!profesores.isEmpty() || profesores.size() > 0) {\r",
                    "            model.put(\"profesores\", profesores);\r",
                    "            model.put(\"controller\", controller);\r",
                    "            return new ModelAndView(\"/ConsultarProfesor/muestraListaProfesor\", model);\r",
                    "        } else {\r",
                    "            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r",
                    "            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "        }\r",
                    "    } catch (NullPointerException e) {\r",
                    "        LOGGER.error(\"En la Tabla Profesor se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r",
                    "        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCertificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r",
                    "    return certificado.getPk_id_certificado();\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ProfesoresController": {
        "full_name": "com.cocay.sicecd.controller.ProfesoresController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 339,
        "short_name": "ProfesoresController",
        "src": "com.cocay.sicecd.controller.ProfesoresController",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionRegistroManual\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profRep",
                "lineBegin": 49,
                "lineEnd": 50
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 52,
                "lineEnd": 53
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 55,
                "lineEnd": 56
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tRep",
                "lineBegin": 58,
                "lineEnd": 59
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "gRep",
                "lineBegin": 61,
                "lineEnd": 62
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 64,
                "lineEnd": 65
            },
            {
                "annotations": [
                    "@Value(\"${path_constancia}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "ruta",
                "lineBegin": 67,
                "lineEnd": 68
            }
        ],
        "methods": {
            "agregarAs": {
                "name": "agregarAs",
                "lineBegin": 77,
                "lineEnd": 142,
                "annotations": [
                    "@RequestMapping(value = \"/registrarAsesor\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "ProfesorDto",
                        "variable": "prof",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "pro",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apaterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "amaterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Profesor pro = new Profesor();\r\n    String apaterno = prof.getaPaterno();\r\n    String amaterno = prof.getaMaterno();\r\n    String nombres = prof.getNombres();\r\n    String rfc = prof.getRfc();\r\n    String telefono = prof.getTelefono();\r\n    String correo = prof.getCorreo();\r\n    String fechaSt = prof.getfNacimiento();\r\n    Date fecha = null;\r\n    try {\r\n        fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n        pro.setFechaNac(fecha);\r\n    } catch (ParseException e) {\r\n        e.printStackTrace();\r\n        pro.setFechaNac(null);\r\n    }\r\n    pro.setApellido_paterno(apaterno);\r\n    pro.setApellido_materno(amaterno);\r\n    pro.setNombre(nombres);\r\n    pro.setRfc(rfc);\r\n    pro.setTelefono(telefono);\r\n    pro.setCorreo(correo);\r\n    /*------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------*/\r\n    /*Datos por default para la tabla*/\r\n    List<Estado> est = stRep.findByNombre(\"No definido\");\r\n    Optional<Turno> trn = tRep.findById(4);\r\n    Optional<Genero> gen = gRep.findById(Integer.parseInt(prof.getGenero()));\r\n    Optional<Grado_profesor> gr = gpRep.findById(5);\r\n    if (!est.isEmpty()) {\r\n        pro.setFk_id_estado(est.get(0));\r\n    }\r\n    pro.setFk_id_turno(trn.get());\r\n    pro.setGenero(gen.get());\r\n    pro.setFk_id_grado_profesor(gr.get());\r\n    log.setTrace(LogTypes.REGISTRAR_ASESOR);\r\n    /*------------------------------------------------------------------------------*/\r\n    profRep.save(pro);\r\n    return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"\u00ef\u00bf\u00bdAsesor agregado con exito!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarAsesor\\\"}\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "prof",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "stRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "tRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "gRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
                    },
                    {
                        "scopeName": "gpRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "registrarParticipantes": {
                "name": "registrarParticipantes",
                "lineBegin": 151,
                "lineEnd": 304,
                "annotations": [
                    "@RequestMapping(value = \"/registrarParticipante\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Locale",
                        "variable": "locale",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "prof",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "comprobante",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "rfc_pdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "curp_pdf",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "profe",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apaterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "amaterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "ultProfe",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "idPath",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName3",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName4",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "estado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cilo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "turno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cplantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "grado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ocupacion",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Profesor profe = new Profesor();\r\n    String apaterno = prof.getaPaterno();\r\n    System.out.println(\"Apellido paterno: \" + apaterno);\r\n    String amaterno = prof.getaMaterno();\r\n    System.out.println(\"Apellido materno\" + amaterno);\r\n    String nombres = prof.getNombres();\r\n    System.out.println(\"nombre: \" + nombres);\r\n    String curp = prof.getCurp();\r\n    profe.setCurp(curp);\r\n    List<Profesor> alt = profRep.findHigherID();\r\n    Profesor ultProfe = new Profesor();\r\n    if (!alt.isEmpty()) {\r\n        ultProfe = profRep.findHigherID().get(0);\r\n    } else {\r\n        ultProfe.setPk_id_profesor(0);\r\n    }\r\n    Integer idPath = ultProfe.getPk_id_profesor() + 1;\r\n    if (curp.equals(\"\")) {\r\n        profe.setCurp(\"No definido\" + idPath);\r\n    } else {\r\n        if (profRep.findByCurp(curp) != null) {\r\n            return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"Error: \u00ef\u00bf\u00bdCurp ya registrado!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarParticipante\\\"}\");\r\n        }\r\n    }\r\n    System.out.println(\"El curp: \" + curp);\r\n    String rfc = prof.getRfc();\r\n    System.out.println(\"El rfc: \" + rfc);\r\n    String correo = prof.getCorreo();\r\n    System.out.println(\"El correo es: \" + correo);\r\n    String telefono = prof.getTelefono();\r\n    System.out.println(\"El telefono es: \" + telefono);\r\n    if (constancia != null) {\r\n        String originalName = constancia.getOriginalFilename();\r\n        saveConstancia(constancia);\r\n        profe.setCertificado_doc(originalName);\r\n    }\r\n    if (comprobante != null) {\r\n        String originalName2 = comprobante.getOriginalFilename();\r\n        saveConstancia(comprobante);\r\n        profe.setComprobante_doc(originalName2);\r\n    }\r\n    if (rfc_pdf != null) {\r\n        String originalName3 = rfc_pdf.getOriginalFilename();\r\n        saveConstancia(rfc_pdf);\r\n        profe.setRfc_doc(originalName3);\r\n    }\r\n    if (curp_pdf != null) {\r\n        String originalName4 = curp_pdf.getOriginalFilename();\r\n        saveConstancia(curp_pdf);\r\n        profe.setCurp_doc(originalName4);\r\n    }\r\n    String fechaSt = prof.getfNacimiento();\r\n    if (!fechaSt.equals(\"\")) {\r\n        Date fecha = null;\r\n        try {\r\n            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n            profe.setFechaNac(fecha);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n            profe.setFechaNac(null);\r\n        }\r\n    }\r\n    //\t\t\t\t/*base*/\r\n    Integer estado = Integer.parseInt(prof.getEstado());\r\n    Optional<Estado> est = stRep.findById(estado);\r\n    String cilo = prof.getCilo();\r\n    /*base*/\r\n    Integer genero = Integer.parseInt(prof.getGenero());\r\n    Optional<Genero> gen = gRep.findById(genero);\r\n    String plantel = prof.getPlantel();\r\n    /*base*/\r\n    Integer turno = Integer.parseInt(prof.getTurno());\r\n    Optional<Turno> trn = tRep.findById(turno);\r\n    String cplantel = prof.getcPlantel();\r\n    /*base*/\r\n    Integer grado = Integer.parseInt(prof.getGrado());\r\n    Optional<Grado_profesor> gr = gpRep.findById(grado);\r\n    String ocupacion = prof.getOcupacion();\r\n    profe.setApellido_paterno(apaterno);\r\n    profe.setApellido_materno(amaterno);\r\n    profe.setNombre(nombres);\r\n    profe.setRfc(rfc);\r\n    profe.setCorreo(correo);\r\n    profe.setTelefono(telefono);\r\n    profe.setFk_id_estado(est.get());\r\n    profe.setCiudad_localidad(cilo);\r\n    profe.setGenero(gen.get());\r\n    profe.setPlantel(plantel);\r\n    profe.setFk_id_turno(trn.get());\r\n    profe.setClave_plantel(cplantel);\r\n    profe.setFk_id_grado_profesor(gr.get());\r\n    profe.setOcupacion(ocupacion);\r\n    log.setTrace(LogTypes.REGISTRAR_PARTICIPANTE);\r\n    profRep.save(profe);\r\n    return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"\u00ef\u00bf\u00bdParticipante agregado con exito!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarParticipante\\\"}\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "prof",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findHigherID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "ultProfe",
                        "methodName": "setPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findHigherID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profRep.findHigherID()",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "ultProfe",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "curp",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findByCurp",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "fechaSt",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "stRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "gRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "tRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getGrado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "gpRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "setOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "RegistrarParti": {
                "name": "RegistrarParti",
                "lineBegin": 145,
                "lineEnd": 148,
                "annotations": [
                    "@RequestMapping(value = \"/registrarParticipantes\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"ProfesoresController/registrarParticipante\";\r\n}",
                "methodInvocations": [],
                "exception": [
                    "ParseException"
                ]
            },
            "saveConstancia": {
                "name": "saveConstancia",
                "lineBegin": 306,
                "lineEnd": 338,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "ultProfe",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "idPath",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "folder",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "fos",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Profesor> alt = profRep.findHigherID();\r\n    Profesor ultProfe = new Profesor();\r\n    if (!alt.isEmpty()) {\r\n        ultProfe = profRep.findHigherID().get(0);\r\n    } else {\r\n        ultProfe.setPk_id_profesor(0);\r\n    }\r\n    Integer idPath = ultProfe.getPk_id_profesor() + 1;\r\n    String path = Integer.toString(idPath);\r\n    System.out.println(\"path: \" + path);\r\n    String originalName = constancia.getOriginalFilename();\r\n    System.out.println(\"FileName: \" + originalName);\r\n    String folder = ruta + path + \"/\";\r\n    try {\r\n        FileUtils.forceMkdir(new File(folder));\r\n        try (FileOutputStream fos = new FileOutputStream(new File(folder + originalName))) {\r\n            IOUtils.copy(constancia.getInputStream(), fos);\r\n        }\r\n    } catch (Exception e) {\r\n        // TODO Auto-generated catch block\r\n        e.printStackTrace();\r\n    }\r\n    return path;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profRep",
                        "methodName": "findHigherID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "ultProfe",
                        "methodName": "setPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findHigherID",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profRep.findHigherID()",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "ultProfe",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    }
                ],
                "exception": []
            },
            "RegistrarAsesores": {
                "name": "RegistrarAsesores",
                "lineBegin": 72,
                "lineEnd": 75,
                "annotations": [
                    "@RequestMapping(value = \"/registrarAsesor2\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"ProfesoresController/registrarAsesor\";\r\n}",
                "methodInvocations": [],
                "exception": [
                    "ParseException"
                ]
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "javax.servlet.http.HttpServletRequest",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.MediaType",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "prof",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "pro",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "stRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "tRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "gRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
            },
            {
                "scopeName": "gpRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "pro",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "profRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profe",
                "methodName": "setCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profRep",
                "methodName": "findHigherID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "ultProfe",
                "methodName": "setPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profRep",
                "methodName": "findHigherID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profRep.findHigherID()",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "ultProfe",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profRep",
                "methodName": "findByCurp",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profe",
                "methodName": "setCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profe",
                "methodName": "setCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profe",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "stRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "gRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "tRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "prof",
                "methodName": "getGrado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "gpRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "prof",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profe",
                "methodName": "setApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "setOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "profRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profRep",
                "methodName": "findHigherID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "ultProfe",
                "methodName": "setPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profRep",
                "methodName": "findHigherID",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profRep.findHigherID()",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "ultProfe",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "agregarAs",
                "annotations": [
                    "@RequestMapping(value = \"/registrarAsesor\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "ProfesorDto",
                        "variable": "prof",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Profesor pro = new Profesor();\r",
                    "    String apaterno = prof.getaPaterno();\r",
                    "    String amaterno = prof.getaMaterno();\r",
                    "    String nombres = prof.getNombres();\r",
                    "    String rfc = prof.getRfc();\r",
                    "    String telefono = prof.getTelefono();\r",
                    "    String correo = prof.getCorreo();\r",
                    "    String fechaSt = prof.getfNacimiento();\r",
                    "    Date fecha = null;\r",
                    "    try {\r",
                    "        fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "        pro.setFechaNac(fecha);\r",
                    "    } catch (ParseException e) {\r",
                    "        e.printStackTrace();\r",
                    "        pro.setFechaNac(null);\r",
                    "    }\r",
                    "    pro.setApellido_paterno(apaterno);\r",
                    "    pro.setApellido_materno(amaterno);\r",
                    "    pro.setNombre(nombres);\r",
                    "    pro.setRfc(rfc);\r",
                    "    pro.setTelefono(telefono);\r",
                    "    pro.setCorreo(correo);\r",
                    "    /*------------------------------------------------------------------------------*/\r",
                    "    /*------------------------------------------------------------------------------*/\r",
                    "    /*Datos por default para la tabla*/\r",
                    "    List<Estado> est = stRep.findByNombre(\"No definido\");\r",
                    "    Optional<Turno> trn = tRep.findById(4);\r",
                    "    Optional<Genero> gen = gRep.findById(Integer.parseInt(prof.getGenero()));\r",
                    "    Optional<Grado_profesor> gr = gpRep.findById(5);\r",
                    "    if (!est.isEmpty()) {\r",
                    "        pro.setFk_id_estado(est.get(0));\r",
                    "    }\r",
                    "    pro.setFk_id_turno(trn.get());\r",
                    "    pro.setGenero(gen.get());\r",
                    "    pro.setFk_id_grado_profesor(gr.get());\r",
                    "    log.setTrace(LogTypes.REGISTRAR_ASESOR);\r",
                    "    /*------------------------------------------------------------------------------*/\r",
                    "    profRep.save(pro);\r",
                    "    return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"\u00ef\u00bf\u00bdAsesor agregado con exito!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarAsesor\\\"}\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "registrarParticipantes",
                "annotations": [
                    "@RequestMapping(value = \"/registrarParticipante\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Locale",
                        "variable": "locale",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "prof",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "comprobante",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "rfc_pdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "curp_pdf",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Profesor profe = new Profesor();\r",
                    "    String apaterno = prof.getaPaterno();\r",
                    "    System.out.println(\"Apellido paterno: \" + apaterno);\r",
                    "    String amaterno = prof.getaMaterno();\r",
                    "    System.out.println(\"Apellido materno\" + amaterno);\r",
                    "    String nombres = prof.getNombres();\r",
                    "    System.out.println(\"nombre: \" + nombres);\r",
                    "    String curp = prof.getCurp();\r",
                    "    profe.setCurp(curp);\r",
                    "    List<Profesor> alt = profRep.findHigherID();\r",
                    "    Profesor ultProfe = new Profesor();\r",
                    "    if (!alt.isEmpty()) {\r",
                    "        ultProfe = profRep.findHigherID().get(0);\r",
                    "    } else {\r",
                    "        ultProfe.setPk_id_profesor(0);\r",
                    "    }\r",
                    "    Integer idPath = ultProfe.getPk_id_profesor() + 1;\r",
                    "    if (curp.equals(\"\")) {\r",
                    "        profe.setCurp(\"No definido\" + idPath);\r",
                    "    } else {\r",
                    "        if (profRep.findByCurp(curp) != null) {\r",
                    "            return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"Error: \u00ef\u00bf\u00bdCurp ya registrado!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarParticipante\\\"}\");\r",
                    "        }\r",
                    "    }\r",
                    "    System.out.println(\"El curp: \" + curp);\r",
                    "    String rfc = prof.getRfc();\r",
                    "    System.out.println(\"El rfc: \" + rfc);\r",
                    "    String correo = prof.getCorreo();\r",
                    "    System.out.println(\"El correo es: \" + correo);\r",
                    "    String telefono = prof.getTelefono();\r",
                    "    System.out.println(\"El telefono es: \" + telefono);\r",
                    "    if (constancia != null) {\r",
                    "        String originalName = constancia.getOriginalFilename();\r",
                    "        saveConstancia(constancia);\r",
                    "        profe.setCertificado_doc(originalName);\r",
                    "    }\r",
                    "    if (comprobante != null) {\r",
                    "        String originalName2 = comprobante.getOriginalFilename();\r",
                    "        saveConstancia(comprobante);\r",
                    "        profe.setComprobante_doc(originalName2);\r",
                    "    }\r",
                    "    if (rfc_pdf != null) {\r",
                    "        String originalName3 = rfc_pdf.getOriginalFilename();\r",
                    "        saveConstancia(rfc_pdf);\r",
                    "        profe.setRfc_doc(originalName3);\r",
                    "    }\r",
                    "    if (curp_pdf != null) {\r",
                    "        String originalName4 = curp_pdf.getOriginalFilename();\r",
                    "        saveConstancia(curp_pdf);\r",
                    "        profe.setCurp_doc(originalName4);\r",
                    "    }\r",
                    "    String fechaSt = prof.getfNacimiento();\r",
                    "    if (!fechaSt.equals(\"\")) {\r",
                    "        Date fecha = null;\r",
                    "        try {\r",
                    "            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "            profe.setFechaNac(fecha);\r",
                    "        } catch (ParseException e) {\r",
                    "            e.printStackTrace();\r",
                    "            profe.setFechaNac(null);\r",
                    "        }\r",
                    "    }\r",
                    "    //\t\t\t\t/*base*/\r",
                    "    Integer estado = Integer.parseInt(prof.getEstado());\r",
                    "    Optional<Estado> est = stRep.findById(estado);\r",
                    "    String cilo = prof.getCilo();\r",
                    "    /*base*/\r",
                    "    Integer genero = Integer.parseInt(prof.getGenero());\r",
                    "    Optional<Genero> gen = gRep.findById(genero);\r",
                    "    String plantel = prof.getPlantel();\r",
                    "    /*base*/\r",
                    "    Integer turno = Integer.parseInt(prof.getTurno());\r",
                    "    Optional<Turno> trn = tRep.findById(turno);\r",
                    "    String cplantel = prof.getcPlantel();\r",
                    "    /*base*/\r",
                    "    Integer grado = Integer.parseInt(prof.getGrado());\r",
                    "    Optional<Grado_profesor> gr = gpRep.findById(grado);\r",
                    "    String ocupacion = prof.getOcupacion();\r",
                    "    profe.setApellido_paterno(apaterno);\r",
                    "    profe.setApellido_materno(amaterno);\r",
                    "    profe.setNombre(nombres);\r",
                    "    profe.setRfc(rfc);\r",
                    "    profe.setCorreo(correo);\r",
                    "    profe.setTelefono(telefono);\r",
                    "    profe.setFk_id_estado(est.get());\r",
                    "    profe.setCiudad_localidad(cilo);\r",
                    "    profe.setGenero(gen.get());\r",
                    "    profe.setPlantel(plantel);\r",
                    "    profe.setFk_id_turno(trn.get());\r",
                    "    profe.setClave_plantel(cplantel);\r",
                    "    profe.setFk_id_grado_profesor(gr.get());\r",
                    "    profe.setOcupacion(ocupacion);\r",
                    "    log.setTrace(LogTypes.REGISTRAR_PARTICIPANTE);\r",
                    "    profRep.save(profe);\r",
                    "    return ResponseEntity.ok(\"{\\\"status\\\":200,\\\"success \\\":\\\"Ok\\\",\\\"message\\\":\\\"\u00ef\u00bf\u00bdParticipante agregado con exito!\\\",\\\"path\\\":\\\"/AdministracionProfesores/registrarParticipante\\\"}\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "RegistrarParti",
                "annotations": [
                    "@RequestMapping(value = \"/registrarParticipantes\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"ProfesoresController/registrarParticipante\";\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "saveConstancia",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Profesor> alt = profRep.findHigherID();\r",
                    "    Profesor ultProfe = new Profesor();\r",
                    "    if (!alt.isEmpty()) {\r",
                    "        ultProfe = profRep.findHigherID().get(0);\r",
                    "    } else {\r",
                    "        ultProfe.setPk_id_profesor(0);\r",
                    "    }\r",
                    "    Integer idPath = ultProfe.getPk_id_profesor() + 1;\r",
                    "    String path = Integer.toString(idPath);\r",
                    "    System.out.println(\"path: \" + path);\r",
                    "    String originalName = constancia.getOriginalFilename();\r",
                    "    System.out.println(\"FileName: \" + originalName);\r",
                    "    String folder = ruta + path + \"/\";\r",
                    "    try {\r",
                    "        FileUtils.forceMkdir(new File(folder));\r",
                    "        try (FileOutputStream fos = new FileOutputStream(new File(folder + originalName))) {\r",
                    "            IOUtils.copy(constancia.getInputStream(), fos);\r",
                    "        }\r",
                    "    } catch (Exception e) {\r",
                    "        // TODO Auto-generated catch block\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return path;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "RegistrarAsesores",
                "annotations": [
                    "@RequestMapping(value = \"/registrarAsesor2\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"ProfesoresController/registrarAsesor\";\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ModificarProfesor": {
        "full_name": "com.cocay.sicecd.controller.ModificarProfesor",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 490,
        "short_name": "ModificarProfesor",
        "src": "com.cocay.sicecd.controller.ModificarProfesor",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionModificaciones\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "proRep",
                "lineBegin": 64,
                "lineEnd": 65
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 67,
                "lineEnd": 68
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grRep",
                "lineBegin": 70,
                "lineEnd": 71
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "crRep",
                "lineBegin": 73,
                "lineEnd": 74
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "genRep",
                "lineBegin": 76,
                "lineEnd": 77
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 79,
                "lineEnd": 80
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 82,
                "lineEnd": 83
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tcRep",
                "lineBegin": 85,
                "lineEnd": 86
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tnRep",
                "lineBegin": 88,
                "lineEnd": 89
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 91,
                "lineEnd": 92
            },
            {
                "annotations": [
                    "@Value(\"${path_constancia}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "ruta",
                "lineBegin": 94,
                "lineEnd": 95
            }
        ],
        "methods": {
            "editarProfesor": {
                "name": "editarProfesor",
                "lineBegin": 228,
                "lineEnd": 466,
                "annotations": [
                    "@PostMapping(value = \"/editarprofesor\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Locale",
                        "variable": "locale",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "comprobante",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "rfc_pdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "curp_pdf",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "mod",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "repetido",
                        "qualifedType": ""
                    },
                    {
                        "type": "Estado",
                        "variable": "st",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grado_profesor",
                        "variable": "gp",
                        "qualifedType": ""
                    },
                    {
                        "type": "Turno",
                        "variable": "turn",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Calendar",
                        "variable": "calendario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName2",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "here",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaActual",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaR",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "archivo_anterior",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName2",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "here",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaActual",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaR",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "archivo_anterior",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName2",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "here",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaActual",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaR",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "archivo_anterior",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName2",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "here",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaActual",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rutaR",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "archivo_anterior",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    int id = profesor.getIdProfesor();\r\n    Profesor mod = proRep.findById(id).get();\r\n    String cambios = \"\";\r\n    if (!mod.getRfc().equals(profesor.getRfc())) {\r\n        cambios += \"Rfc de \" + mod.getRfc() + \" a \" + profesor.getRfc() + \"\\n\";\r\n        mod.setRfc(profesor.getRfc());\r\n    }\r\n    if (!mod.getNombre().equals(profesor.getNombres())) {\r\n        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + profesor.getNombres() + \"\\n\";\r\n        mod.setNombre(profesor.getNombres());\r\n    }\r\n    if (!mod.getApellido_paterno().equals(profesor.getaPaterno())) {\r\n        cambios += \"Apellido Paterno de \" + mod.getApellido_paterno() + \" a \" + profesor.getaPaterno() + \"\\n\";\r\n        mod.setApellido_paterno(profesor.getaPaterno());\r\n    }\r\n    if (!mod.getApellido_materno().equals(profesor.getaMaterno())) {\r\n        cambios += \"Apellido Materno de \" + mod.getApellido_materno() + \" a \" + profesor.getaMaterno() + \"\\n\";\r\n        mod.setApellido_materno(profesor.getaMaterno());\r\n    }\r\n    if (mod.getCurp() != null) {\r\n        Profesor repetido = proRep.findByCurp(profesor.getCurp());\r\n        if (repetido != null && mod.getRfc() != repetido.getRfc() && !mod.getCurp().equals(\"\")) {\r\n            return ResponseEntity.ok(\"Error: curp ya registrada\");\r\n        } else {\r\n            if (!mod.getCurp().equals(profesor.getCurp())) {\r\n                cambios += \"Curp de \" + mod.getCurp() + \" a \" + profesor.getCurp() + \"\\n\";\r\n                mod.setCurp(profesor.getCurp());\r\n            }\r\n        }\r\n    }\r\n    if (!mod.getCorreo().equals(profesor.getCorreo())) {\r\n        cambios += \"Correo de \" + mod.getCorreo() + \" a \" + profesor.getCorreo() + \"\\n\";\r\n        mod.setCorreo(profesor.getCorreo());\r\n    }\r\n    if (mod.getTelefono() == null) {\r\n        cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r\n        mod.setTelefono(profesor.getTelefono());\r\n    } else {\r\n        if (!mod.getTelefono().equals(profesor.getTelefono())) {\r\n            cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r\n            mod.setTelefono(profesor.getTelefono());\r\n        }\r\n    }\r\n    if (mod.getCiudad_localidad() == null) {\r\n        cambios += \"Ciudad o localidad de \" + mod.getCiudad_localidad() + \" a \" + profesor.getCilo() + \"\\n\";\r\n        mod.setCiudad_localidad(profesor.getCilo());\r\n    } else {\r\n        if (!mod.getCiudad_localidad().equals(profesor.getCilo())) {\r\n            cambios += \"Ciudad o localidad de \" + mod.getCiudad_localidad() + \" a \" + profesor.getCilo() + \"\\n\";\r\n            mod.setCiudad_localidad(profesor.getCilo());\r\n        }\r\n    }\r\n    if (mod.getPlantel() == null) {\r\n        cambios += \"Plantel de \" + mod.getPlantel() + \" a \" + profesor.getPlantel() + \"\\n\";\r\n        mod.setPlantel(profesor.getPlantel());\r\n    } else {\r\n        if (!mod.getPlantel().equals(profesor.getPlantel())) {\r\n            cambios += \"Plantel de \" + mod.getPlantel() + \" a \" + profesor.getPlantel() + \"\\n\";\r\n            mod.setPlantel(profesor.getPlantel());\r\n        }\r\n    }\r\n    if (mod.getClave_plantel() == null) {\r\n        cambios += \"clave de Plantel de \" + mod.getClave_plantel() + \" a \" + profesor.getcPlantel() + \"\\n\";\r\n        mod.setClave_plantel(profesor.getcPlantel());\r\n    } else {\r\n        if (!mod.getClave_plantel().equals(profesor.getcPlantel())) {\r\n            cambios += \"clave de Plantel de \" + mod.getClave_plantel() + \" a \" + profesor.getcPlantel() + \"\\n\";\r\n            mod.setClave_plantel(profesor.getcPlantel());\r\n        }\r\n    }\r\n    if (mod.getOcupacion() == null) {\r\n        cambios += \"Ocupacion de \" + mod.getOcupacion() + \" a \" + profesor.getOcupacion() + \"\\n\";\r\n        mod.setOcupacion(profesor.getOcupacion());\r\n    } else {\r\n        if (!mod.getOcupacion().equals(profesor.getOcupacion())) {\r\n            cambios += \"Ocupacion de \" + mod.getOcupacion() + \" a \" + profesor.getOcupacion() + \"\\n\";\r\n            mod.setOcupacion(profesor.getOcupacion());\r\n        }\r\n    }\r\n    Estado st = stRep.findById(Integer.parseInt(profesor.getEstado())).get();\r\n    if (!Integer.toString(mod.getFk_id_estado().getPk_id_estado()).equals(profesor.getEstado())) {\r\n        mod.setFk_id_estado(st);\r\n    }\r\n    Grado_profesor gp = gpRep.findById(Integer.parseInt(profesor.getGrado())).get();\r\n    if (!Integer.toString(mod.getFk_id_grado_profesor().getPk_id_grado_profesor()).equals(profesor.getGrado())) {\r\n        mod.setFk_id_grado_profesor(gp);\r\n    }\r\n    Turno turn = tnRep.findById(Integer.parseInt(profesor.getTurno())).get();\r\n    if (!Integer.toString(mod.getFk_id_turno().getPk_id_turno()).equals(profesor.getTurno())) {\r\n        mod.setFk_id_turno(turn);\r\n    }\r\n    if (mod.getFechaNac() == null) {\r\n        String fechaSt = profesor.getfNacimiento();\r\n        Date fecha = null;\r\n        try {\r\n            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mod.setFechaNac(fecha);\r\n    } else {\r\n        if (profesor.getfNacimiento() != null) {\r\n            String fechaSt = profesor.getfNacimiento();\r\n            Date fecha = null;\r\n            try {\r\n                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n            } catch (ParseException e) {\r\n                e.printStackTrace();\r\n            }\r\n            if (!mod.getFechaNac().equals(fecha)) {\r\n                Calendar calendario = Calendar.getInstance();\r\n                calendario.setTime(fecha);\r\n                calendario.add(Calendar.DAY_OF_YEAR, 1);\r\n                mod.setFechaNac(calendario.getTime());\r\n            }\r\n        }\r\n    }\r\n    if (constancia != null) {\r\n        String originalName2 = constancia.getOriginalFilename();\r\n        if (mod.getCertificado_doc() == null) {\r\n            mod.setCertificado_doc(originalName2);\r\n        } else {\r\n            if (!mod.getCertificado_doc().equals(originalName2)) {\r\n                File here = new File(\".\");\r\n                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r\n                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getCertificado_doc();\r\n                File archivo_anterior = new File(rutaR);\r\n                archivo_anterior.delete();\r\n            }\r\n        }\r\n        saveConstancia(constancia, mod);\r\n        mod.setCertificado_doc(originalName2);\r\n    }\r\n    if (comprobante != null) {\r\n        String originalName2 = comprobante.getOriginalFilename();\r\n        if (mod.getComprobante_doc() == null) {\r\n            mod.setComprobante_doc(originalName2);\r\n        } else {\r\n            if (!mod.getComprobante_doc().equals(originalName2)) {\r\n                File here = new File(\".\");\r\n                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r\n                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getComprobante_doc();\r\n                File archivo_anterior = new File(rutaR);\r\n                archivo_anterior.delete();\r\n            }\r\n        }\r\n        saveConstancia(comprobante, mod);\r\n        mod.setComprobante_doc(originalName2);\r\n    }\r\n    if (rfc_pdf != null) {\r\n        String originalName2 = rfc_pdf.getOriginalFilename();\r\n        System.out.println(\"---------El nombre del rfc es:\" + originalName2);\r\n        if (mod.getRfc_doc() == null) {\r\n            mod.setRfc_doc(originalName2);\r\n        } else {\r\n            if (!mod.getRfc_doc().equals(originalName2)) {\r\n                File here = new File(\".\");\r\n                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r\n                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getRfc_doc();\r\n                File archivo_anterior = new File(rutaR);\r\n                archivo_anterior.delete();\r\n            }\r\n        }\r\n        saveConstancia(rfc_pdf, mod);\r\n        mod.setRfc_doc(originalName2);\r\n    }\r\n    if (curp_pdf != null) {\r\n        String originalName2 = curp_pdf.getOriginalFilename();\r\n        if (mod.getCurp_doc() == null) {\r\n            mod.setCurp_doc(originalName2);\r\n        } else {\r\n            if (!mod.getCurp_doc().equals(originalName2)) {\r\n                File here = new File(\".\");\r\n                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r\n                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getCurp_doc();\r\n                File archivo_anterior = new File(rutaR);\r\n                archivo_anterior.delete();\r\n            }\r\n        }\r\n        saveConstancia(curp_pdf, mod);\r\n        mod.setCurp_doc(originalName2);\r\n    }\r\n    System.out.println(cambios);\r\n    log.setTrace(LogTypes.MODIFICAR_PARTICIPANTE);\r\n    if (!cambios.equals(\"\")) {\r\n        proRep.save(mod);\r\n    }\r\n    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdParticipante editado con exito!\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "getIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "proRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getRfc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getApellido_paterno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getApellido_materno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findByCurp",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "repetido",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCurp()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCurp()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCorreo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getTelefono()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCiudad_localidad()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getPlantel()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getClave_plantel()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getOcupacion()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "stRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "stRep.findById(Integer.parseInt(profesor.getEstado()))",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFk_id_estado()",
                        "methodName": "getPk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Estado"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getGrado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "gpRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "gpRep.findById(Integer.parseInt(profesor.getGrado()))",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getGrado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFk_id_grado_profesor()",
                        "methodName": "getPk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "tnRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "tnRep.findById(Integer.parseInt(profesor.getTurno()))",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFk_id_turno()",
                        "methodName": "getPk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFechaNac()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "calendario",
                        "methodName": "setTime",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "calendario",
                        "methodName": "add",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "calendario",
                        "methodName": "getTime",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCertificado_doc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "here",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "here.getAbsolutePath()",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rutaActual",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "archivo_anterior",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getComprobante_doc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "here",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "here.getAbsolutePath()",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rutaActual",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "archivo_anterior",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getRfc_doc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "here",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "here.getAbsolutePath()",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rutaActual",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "archivo_anterior",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCurp_doc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "here",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "here.getAbsolutePath()",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rutaActual",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "archivo_anterior",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "consultarProfesorEstado": {
                "name": "consultarProfesorEstado",
                "lineBegin": 99,
                "lineEnd": 141,
                "annotations": [
                    "@RequestMapping(value = \"/listaProfesores\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Estado",
                        "variable": "defa",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grado_profesor",
                        "variable": "gdp",
                        "qualifedType": ""
                    },
                    {
                        "type": "Turno",
                        "variable": "tur",
                        "qualifedType": ""
                    },
                    {
                        "type": "Genero",
                        "variable": "gen",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Profesor> list_p1 = proRep.findAll();\r\n    //Se filtran a los participantes de los asesores\r\n    for (Profesor p : list_p1) {\r\n        if (p.getFk_id_estado() == null) {\r\n            Optional<Estado> estado = stRep.findById(34);\r\n            Estado defa = estado.get();\r\n            p.setFk_id_estado(defa);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getFk_id_grado_profesor() == null) {\r\n            Optional<Grado_profesor> gd = gpRep.findById(5);\r\n            Grado_profesor gdp = gd.get();\r\n            p.setFk_id_grado_profesor(gdp);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getFk_id_turno() == null) {\r\n            Optional<Turno> tr = tnRep.findById(4);\r\n            Turno tur = tr.get();\r\n            p.setFk_id_turno(tur);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getGenero() == null) {\r\n            Optional<Genero> g = genRep.findById(3);\r\n            Genero gen = g.get();\r\n            p.setGenero(gen);\r\n            proRep.save(p);\r\n        }\r\n    }\r\n    list_p1 = list_p1.stream().filter(x -> x.getFk_id_estado().getPk_id_estado() != 34).collect(Collectors.toList());\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"profesores\", list_p1);\r\n        return new ModelAndView(\"ModificarUsuario/listaProfesores\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "proRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "stRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "gpRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "tnRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "genRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "formEditarPerfilUsuario": {
                "name": "formEditarPerfilUsuario",
                "lineBegin": 143,
                "lineEnd": 226,
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacion\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "cambio",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "prof",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "formatter",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ffecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Profesor cambio = (proRep.findByRfc(rfc));\r\n    ProfesorDto prof = new ProfesorDto();\r\n    prof.setIdProfesor(cambio.getPk_id_profesor());\r\n    prof.setaMaterno(cambio.getApellido_materno());\r\n    prof.setaPaterno(cambio.getApellido_paterno());\r\n    if (cambio.getCertificado_doc() != null) {\r\n        prof.setCertificado_doc(cambio.getCertificado_doc());\r\n    }\r\n    if (cambio.getCiudad_localidad() != null) {\r\n        prof.setCilo(cambio.getCiudad_localidad());\r\n    }\r\n    if (cambio.getComprobante_doc() != null) {\r\n        prof.setComprobante_doc(cambio.getComprobante_doc());\r\n    }\r\n    prof.setCorreo(cambio.getCorreo());\r\n    if (cambio.getClave_plantel() != null) {\r\n        prof.setcPlantel(cambio.getClave_plantel());\r\n    }\r\n    if (cambio.getFechaNac() != null) {\r\n        prof.setfNacimiento(cambio.getFechaNac().toString().substring(0, 10));\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        String ffecha = formatter.format(cambio.getFechaNac());\r\n        prof.setFormFecha(ffecha);\r\n    }\r\n    if (cambio.getCurp() != null) {\r\n        prof.setCurp(cambio.getCurp());\r\n    }\r\n    if (cambio.getCurp_doc() != null) {\r\n        prof.setCurp_doc(cambio.getCurp_doc());\r\n    }\r\n    prof.setEstado(Integer.toString(cambio.getFk_id_estado().getPk_id_estado()));\r\n    prof.setNombreEstado(cambio.getFk_id_estado().getNombre());\r\n    prof.setGenero(Integer.toString(cambio.getGenero().getPk_id_genero()));\r\n    prof.setNombreGenero(cambio.getGenero().getGenero());\r\n    prof.setGrado(Integer.toString(cambio.getFk_id_grado_profesor().getPk_id_grado_profesor()));\r\n    prof.setNombreGrado(cambio.getFk_id_grado_profesor().getNombre());\r\n    prof.setNombres(cambio.getNombre());\r\n    if (cambio.getOcupacion() != null) {\r\n        prof.setOcupacion(cambio.getOcupacion());\r\n    }\r\n    if (cambio.getPlantel() != null) {\r\n        prof.setPlantel(cambio.getPlantel());\r\n    }\r\n    prof.setRfc(cambio.getRfc());\r\n    if (cambio.getRfc_doc() != null) {\r\n        prof.setRfc_doc(cambio.getRfc_doc());\r\n    }\r\n    if (cambio.getTelefono() != null) {\r\n        prof.setTelefono(cambio.getTelefono());\r\n    }\r\n    prof.setTurno(Integer.toString(cambio.getFk_id_turno().getPk_id_turno()));\r\n    prof.setNombreTurno(cambio.getFk_id_turno().getNombre());\r\n    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacion\");\r\n    model.addObject(\"profesor\", prof);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "proRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setCertificado_doc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCiudad_localidad",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setCilo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setComprobante_doc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getClave_plantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setcPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFechaNac()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFechaNac().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "formatter",
                        "methodName": "format",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setFormFecha",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCurp",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setCurp",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCurp_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setCurp_doc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_estado()",
                        "methodName": "getPk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Estado"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setEstado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_estado()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estado"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setNombreEstado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getGenero()",
                        "methodName": "getPk_id_genero",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getGenero()",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setNombreGenero",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_grado_profesor()",
                        "methodName": "getPk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setGrado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_grado_profesor()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setNombreGrado",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getOcupacion",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setOcupacion",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getPlantel",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setPlantel",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getRfc_doc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setRfc_doc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_turno()",
                        "methodName": "getPk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setTurno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFk_id_turno()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    },
                    {
                        "scopeName": "prof",
                        "methodName": "setNombreTurno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "saveConstancia": {
                "name": "saveConstancia",
                "lineBegin": 469,
                "lineEnd": 488,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "pr",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "originalName",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "folder",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "fos",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String path = Integer.toString(pr.getPk_id_profesor());\r\n    System.out.println(\"path: \" + path);\r\n    String originalName = constancia.getOriginalFilename();\r\n    System.out.println(\"FileName: \" + originalName);\r\n    String folder = ruta + path + \"/\";\r\n    try {\r\n        FileUtils.forceMkdir(new File(folder));\r\n        try (FileOutputStream fos = new FileOutputStream(new File(folder + originalName))) {\r\n            IOUtils.copy(constancia.getInputStream(), fos);\r\n        }\r\n    } catch (Exception e) {\r\n        e.printStackTrace();\r\n    }\r\n    return path;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "pr",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Calendar",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "java.util.stream.Collectors",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "proRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "stRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "gpRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "tnRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "genRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
            },
            {
                "scopeName": "p",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "proRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "cambio",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setCertificado_doc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setComprobante_doc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFechaNac()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFechaNac().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setFormFecha",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setCurp_doc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_estado()",
                "methodName": "getPk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Estado"
            },
            {
                "scopeName": "prof",
                "methodName": "setEstado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_estado()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estado"
            },
            {
                "scopeName": "prof",
                "methodName": "setNombreEstado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getGenero()",
                "methodName": "getPk_id_genero",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "prof",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getGenero()",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "prof",
                "methodName": "setNombreGenero",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_grado_profesor()",
                "methodName": "getPk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setGrado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_grado_profesor()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setNombreGrado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setRfc_doc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "prof",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_turno()",
                "methodName": "getPk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "prof",
                "methodName": "setTurno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFk_id_turno()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "prof",
                "methodName": "setNombreTurno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "proRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "proRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getRfc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getApellido_paterno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getApellido_materno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "proRep",
                "methodName": "findByCurp",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "repetido",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCurp()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCurp()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCurp",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCurp",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCorreo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getTelefono()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCiudad_localidad()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCilo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCiudad_localidad",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getPlantel()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setPlantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getClave_plantel()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getcPlantel",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setClave_plantel",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getOcupacion()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getOcupacion",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setOcupacion",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "stRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "stRep.findById(Integer.parseInt(profesor.getEstado()))",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFk_id_estado()",
                "methodName": "getPk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Estado"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getGrado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "gpRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "gpRep.findById(Integer.parseInt(profesor.getGrado()))",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "getGrado",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFk_id_grado_profesor()",
                "methodName": "getPk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "tnRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "tnRep.findById(Integer.parseInt(profesor.getTurno()))",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFk_id_turno()",
                "methodName": "getPk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFechaNac()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCertificado_doc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setCertificado_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getComprobante_doc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setComprobante_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getRfc_doc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setRfc_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCurp_doc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setCurp_doc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "pr",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "editarProfesor",
                "annotations": [
                    "@PostMapping(value = \"/editarprofesor\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Locale",
                        "variable": "locale",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "comprobante",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "rfc_pdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "MultipartFile",
                        "variable": "curp_pdf",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    int id = profesor.getIdProfesor();\r",
                    "    Profesor mod = proRep.findById(id).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (!mod.getRfc().equals(profesor.getRfc())) {\r",
                    "        cambios += \"Rfc de \" + mod.getRfc() + \" a \" + profesor.getRfc() + \"\\n\";\r",
                    "        mod.setRfc(profesor.getRfc());\r",
                    "    }\r",
                    "    if (!mod.getNombre().equals(profesor.getNombres())) {\r",
                    "        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + profesor.getNombres() + \"\\n\";\r",
                    "        mod.setNombre(profesor.getNombres());\r",
                    "    }\r",
                    "    if (!mod.getApellido_paterno().equals(profesor.getaPaterno())) {\r",
                    "        cambios += \"Apellido Paterno de \" + mod.getApellido_paterno() + \" a \" + profesor.getaPaterno() + \"\\n\";\r",
                    "        mod.setApellido_paterno(profesor.getaPaterno());\r",
                    "    }\r",
                    "    if (!mod.getApellido_materno().equals(profesor.getaMaterno())) {\r",
                    "        cambios += \"Apellido Materno de \" + mod.getApellido_materno() + \" a \" + profesor.getaMaterno() + \"\\n\";\r",
                    "        mod.setApellido_materno(profesor.getaMaterno());\r",
                    "    }\r",
                    "    if (mod.getCurp() != null) {\r",
                    "        Profesor repetido = proRep.findByCurp(profesor.getCurp());\r",
                    "        if (repetido != null && mod.getRfc() != repetido.getRfc() && !mod.getCurp().equals(\"\")) {\r",
                    "            return ResponseEntity.ok(\"Error: curp ya registrada\");\r",
                    "        } else {\r",
                    "            if (!mod.getCurp().equals(profesor.getCurp())) {\r",
                    "                cambios += \"Curp de \" + mod.getCurp() + \" a \" + profesor.getCurp() + \"\\n\";\r",
                    "                mod.setCurp(profesor.getCurp());\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    if (!mod.getCorreo().equals(profesor.getCorreo())) {\r",
                    "        cambios += \"Correo de \" + mod.getCorreo() + \" a \" + profesor.getCorreo() + \"\\n\";\r",
                    "        mod.setCorreo(profesor.getCorreo());\r",
                    "    }\r",
                    "    if (mod.getTelefono() == null) {\r",
                    "        cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r",
                    "        mod.setTelefono(profesor.getTelefono());\r",
                    "    } else {\r",
                    "        if (!mod.getTelefono().equals(profesor.getTelefono())) {\r",
                    "            cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r",
                    "            mod.setTelefono(profesor.getTelefono());\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getCiudad_localidad() == null) {\r",
                    "        cambios += \"Ciudad o localidad de \" + mod.getCiudad_localidad() + \" a \" + profesor.getCilo() + \"\\n\";\r",
                    "        mod.setCiudad_localidad(profesor.getCilo());\r",
                    "    } else {\r",
                    "        if (!mod.getCiudad_localidad().equals(profesor.getCilo())) {\r",
                    "            cambios += \"Ciudad o localidad de \" + mod.getCiudad_localidad() + \" a \" + profesor.getCilo() + \"\\n\";\r",
                    "            mod.setCiudad_localidad(profesor.getCilo());\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getPlantel() == null) {\r",
                    "        cambios += \"Plantel de \" + mod.getPlantel() + \" a \" + profesor.getPlantel() + \"\\n\";\r",
                    "        mod.setPlantel(profesor.getPlantel());\r",
                    "    } else {\r",
                    "        if (!mod.getPlantel().equals(profesor.getPlantel())) {\r",
                    "            cambios += \"Plantel de \" + mod.getPlantel() + \" a \" + profesor.getPlantel() + \"\\n\";\r",
                    "            mod.setPlantel(profesor.getPlantel());\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getClave_plantel() == null) {\r",
                    "        cambios += \"clave de Plantel de \" + mod.getClave_plantel() + \" a \" + profesor.getcPlantel() + \"\\n\";\r",
                    "        mod.setClave_plantel(profesor.getcPlantel());\r",
                    "    } else {\r",
                    "        if (!mod.getClave_plantel().equals(profesor.getcPlantel())) {\r",
                    "            cambios += \"clave de Plantel de \" + mod.getClave_plantel() + \" a \" + profesor.getcPlantel() + \"\\n\";\r",
                    "            mod.setClave_plantel(profesor.getcPlantel());\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getOcupacion() == null) {\r",
                    "        cambios += \"Ocupacion de \" + mod.getOcupacion() + \" a \" + profesor.getOcupacion() + \"\\n\";\r",
                    "        mod.setOcupacion(profesor.getOcupacion());\r",
                    "    } else {\r",
                    "        if (!mod.getOcupacion().equals(profesor.getOcupacion())) {\r",
                    "            cambios += \"Ocupacion de \" + mod.getOcupacion() + \" a \" + profesor.getOcupacion() + \"\\n\";\r",
                    "            mod.setOcupacion(profesor.getOcupacion());\r",
                    "        }\r",
                    "    }\r",
                    "    Estado st = stRep.findById(Integer.parseInt(profesor.getEstado())).get();\r",
                    "    if (!Integer.toString(mod.getFk_id_estado().getPk_id_estado()).equals(profesor.getEstado())) {\r",
                    "        mod.setFk_id_estado(st);\r",
                    "    }\r",
                    "    Grado_profesor gp = gpRep.findById(Integer.parseInt(profesor.getGrado())).get();\r",
                    "    if (!Integer.toString(mod.getFk_id_grado_profesor().getPk_id_grado_profesor()).equals(profesor.getGrado())) {\r",
                    "        mod.setFk_id_grado_profesor(gp);\r",
                    "    }\r",
                    "    Turno turn = tnRep.findById(Integer.parseInt(profesor.getTurno())).get();\r",
                    "    if (!Integer.toString(mod.getFk_id_turno().getPk_id_turno()).equals(profesor.getTurno())) {\r",
                    "        mod.setFk_id_turno(turn);\r",
                    "    }\r",
                    "    if (mod.getFechaNac() == null) {\r",
                    "        String fechaSt = profesor.getfNacimiento();\r",
                    "        Date fecha = null;\r",
                    "        try {\r",
                    "            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "        } catch (ParseException e) {\r",
                    "            e.printStackTrace();\r",
                    "        }\r",
                    "        mod.setFechaNac(fecha);\r",
                    "    } else {\r",
                    "        if (profesor.getfNacimiento() != null) {\r",
                    "            String fechaSt = profesor.getfNacimiento();\r",
                    "            Date fecha = null;\r",
                    "            try {\r",
                    "                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "            } catch (ParseException e) {\r",
                    "                e.printStackTrace();\r",
                    "            }\r",
                    "            if (!mod.getFechaNac().equals(fecha)) {\r",
                    "                Calendar calendario = Calendar.getInstance();\r",
                    "                calendario.setTime(fecha);\r",
                    "                calendario.add(Calendar.DAY_OF_YEAR, 1);\r",
                    "                mod.setFechaNac(calendario.getTime());\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    if (constancia != null) {\r",
                    "        String originalName2 = constancia.getOriginalFilename();\r",
                    "        if (mod.getCertificado_doc() == null) {\r",
                    "            mod.setCertificado_doc(originalName2);\r",
                    "        } else {\r",
                    "            if (!mod.getCertificado_doc().equals(originalName2)) {\r",
                    "                File here = new File(\".\");\r",
                    "                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r",
                    "                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getCertificado_doc();\r",
                    "                File archivo_anterior = new File(rutaR);\r",
                    "                archivo_anterior.delete();\r",
                    "            }\r",
                    "        }\r",
                    "        saveConstancia(constancia, mod);\r",
                    "        mod.setCertificado_doc(originalName2);\r",
                    "    }\r",
                    "    if (comprobante != null) {\r",
                    "        String originalName2 = comprobante.getOriginalFilename();\r",
                    "        if (mod.getComprobante_doc() == null) {\r",
                    "            mod.setComprobante_doc(originalName2);\r",
                    "        } else {\r",
                    "            if (!mod.getComprobante_doc().equals(originalName2)) {\r",
                    "                File here = new File(\".\");\r",
                    "                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r",
                    "                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getComprobante_doc();\r",
                    "                File archivo_anterior = new File(rutaR);\r",
                    "                archivo_anterior.delete();\r",
                    "            }\r",
                    "        }\r",
                    "        saveConstancia(comprobante, mod);\r",
                    "        mod.setComprobante_doc(originalName2);\r",
                    "    }\r",
                    "    if (rfc_pdf != null) {\r",
                    "        String originalName2 = rfc_pdf.getOriginalFilename();\r",
                    "        System.out.println(\"---------El nombre del rfc es:\" + originalName2);\r",
                    "        if (mod.getRfc_doc() == null) {\r",
                    "            mod.setRfc_doc(originalName2);\r",
                    "        } else {\r",
                    "            if (!mod.getRfc_doc().equals(originalName2)) {\r",
                    "                File here = new File(\".\");\r",
                    "                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r",
                    "                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getRfc_doc();\r",
                    "                File archivo_anterior = new File(rutaR);\r",
                    "                archivo_anterior.delete();\r",
                    "            }\r",
                    "        }\r",
                    "        saveConstancia(rfc_pdf, mod);\r",
                    "        mod.setRfc_doc(originalName2);\r",
                    "    }\r",
                    "    if (curp_pdf != null) {\r",
                    "        String originalName2 = curp_pdf.getOriginalFilename();\r",
                    "        if (mod.getCurp_doc() == null) {\r",
                    "            mod.setCurp_doc(originalName2);\r",
                    "        } else {\r",
                    "            if (!mod.getCurp_doc().equals(originalName2)) {\r",
                    "                File here = new File(\".\");\r",
                    "                String rutaActual = here.getAbsolutePath().replace(\".\", \"\");\r",
                    "                String rutaR = rutaActual.replace(\"\\\\\", \"/\") + ruta.replace(\"./\", \"\") + Integer.toString(mod.getPk_id_profesor()) + \"/\" + mod.getCurp_doc();\r",
                    "                File archivo_anterior = new File(rutaR);\r",
                    "                archivo_anterior.delete();\r",
                    "            }\r",
                    "        }\r",
                    "        saveConstancia(curp_pdf, mod);\r",
                    "        mod.setCurp_doc(originalName2);\r",
                    "    }\r",
                    "    System.out.println(cambios);\r",
                    "    log.setTrace(LogTypes.MODIFICAR_PARTICIPANTE);\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        proRep.save(mod);\r",
                    "    }\r",
                    "    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdParticipante editado con exito!\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultarProfesorEstado",
                "annotations": [
                    "@RequestMapping(value = \"/listaProfesores\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Profesor> list_p1 = proRep.findAll();\r",
                    "    //Se filtran a los participantes de los asesores\r",
                    "    for (Profesor p : list_p1) {\r",
                    "        if (p.getFk_id_estado() == null) {\r",
                    "            Optional<Estado> estado = stRep.findById(34);\r",
                    "            Estado defa = estado.get();\r",
                    "            p.setFk_id_estado(defa);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getFk_id_grado_profesor() == null) {\r",
                    "            Optional<Grado_profesor> gd = gpRep.findById(5);\r",
                    "            Grado_profesor gdp = gd.get();\r",
                    "            p.setFk_id_grado_profesor(gdp);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getFk_id_turno() == null) {\r",
                    "            Optional<Turno> tr = tnRep.findById(4);\r",
                    "            Turno tur = tr.get();\r",
                    "            p.setFk_id_turno(tur);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getGenero() == null) {\r",
                    "            Optional<Genero> g = genRep.findById(3);\r",
                    "            Genero gen = g.get();\r",
                    "            p.setGenero(gen);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "    }\r",
                    "    list_p1 = list_p1.stream().filter(x -> x.getFk_id_estado().getPk_id_estado() != 34).collect(Collectors.toList());\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"profesores\", list_p1);\r",
                    "        return new ModelAndView(\"ModificarUsuario/listaProfesores\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formEditarPerfilUsuario",
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacion\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Profesor cambio = (proRep.findByRfc(rfc));\r",
                    "    ProfesorDto prof = new ProfesorDto();\r",
                    "    prof.setIdProfesor(cambio.getPk_id_profesor());\r",
                    "    prof.setaMaterno(cambio.getApellido_materno());\r",
                    "    prof.setaPaterno(cambio.getApellido_paterno());\r",
                    "    if (cambio.getCertificado_doc() != null) {\r",
                    "        prof.setCertificado_doc(cambio.getCertificado_doc());\r",
                    "    }\r",
                    "    if (cambio.getCiudad_localidad() != null) {\r",
                    "        prof.setCilo(cambio.getCiudad_localidad());\r",
                    "    }\r",
                    "    if (cambio.getComprobante_doc() != null) {\r",
                    "        prof.setComprobante_doc(cambio.getComprobante_doc());\r",
                    "    }\r",
                    "    prof.setCorreo(cambio.getCorreo());\r",
                    "    if (cambio.getClave_plantel() != null) {\r",
                    "        prof.setcPlantel(cambio.getClave_plantel());\r",
                    "    }\r",
                    "    if (cambio.getFechaNac() != null) {\r",
                    "        prof.setfNacimiento(cambio.getFechaNac().toString().substring(0, 10));\r",
                    "        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r",
                    "        String ffecha = formatter.format(cambio.getFechaNac());\r",
                    "        prof.setFormFecha(ffecha);\r",
                    "    }\r",
                    "    if (cambio.getCurp() != null) {\r",
                    "        prof.setCurp(cambio.getCurp());\r",
                    "    }\r",
                    "    if (cambio.getCurp_doc() != null) {\r",
                    "        prof.setCurp_doc(cambio.getCurp_doc());\r",
                    "    }\r",
                    "    prof.setEstado(Integer.toString(cambio.getFk_id_estado().getPk_id_estado()));\r",
                    "    prof.setNombreEstado(cambio.getFk_id_estado().getNombre());\r",
                    "    prof.setGenero(Integer.toString(cambio.getGenero().getPk_id_genero()));\r",
                    "    prof.setNombreGenero(cambio.getGenero().getGenero());\r",
                    "    prof.setGrado(Integer.toString(cambio.getFk_id_grado_profesor().getPk_id_grado_profesor()));\r",
                    "    prof.setNombreGrado(cambio.getFk_id_grado_profesor().getNombre());\r",
                    "    prof.setNombres(cambio.getNombre());\r",
                    "    if (cambio.getOcupacion() != null) {\r",
                    "        prof.setOcupacion(cambio.getOcupacion());\r",
                    "    }\r",
                    "    if (cambio.getPlantel() != null) {\r",
                    "        prof.setPlantel(cambio.getPlantel());\r",
                    "    }\r",
                    "    prof.setRfc(cambio.getRfc());\r",
                    "    if (cambio.getRfc_doc() != null) {\r",
                    "        prof.setRfc_doc(cambio.getRfc_doc());\r",
                    "    }\r",
                    "    if (cambio.getTelefono() != null) {\r",
                    "        prof.setTelefono(cambio.getTelefono());\r",
                    "    }\r",
                    "    prof.setTurno(Integer.toString(cambio.getFk_id_turno().getPk_id_turno()));\r",
                    "    prof.setNombreTurno(cambio.getFk_id_turno().getNombre());\r",
                    "    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacion\");\r",
                    "    model.addObject(\"profesor\", prof);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "saveConstancia",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "constancia",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "pr",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String path = Integer.toString(pr.getPk_id_profesor());\r",
                    "    System.out.println(\"path: \" + path);\r",
                    "    String originalName = constancia.getOriginalFilename();\r",
                    "    System.out.println(\"FileName: \" + originalName);\r",
                    "    String folder = ruta + path + \"/\";\r",
                    "    try {\r",
                    "        FileUtils.forceMkdir(new File(folder));\r",
                    "        try (FileOutputStream fos = new FileOutputStream(new File(folder + originalName))) {\r",
                    "            IOUtils.copy(constancia.getInputStream(), fos);\r",
                    "        }\r",
                    "    } catch (Exception e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return path;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ModificarAsesores": {
        "full_name": "com.cocay.sicecd.controller.ModificarAsesores",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 255,
        "short_name": "ModificarAsesores",
        "src": "com.cocay.sicecd.controller.ModificarAsesores",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionModificaciones\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "proRep",
                "lineBegin": 63,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 66,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grRep",
                "lineBegin": 69,
                "lineEnd": 70
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "crRep",
                "lineBegin": 72,
                "lineEnd": 73
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "genRep",
                "lineBegin": 75,
                "lineEnd": 76
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 78,
                "lineEnd": 79
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 81,
                "lineEnd": 82
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tcRep",
                "lineBegin": 84,
                "lineEnd": 85
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tnRep",
                "lineBegin": 87,
                "lineEnd": 88
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 90,
                "lineEnd": 91
            }
        ],
        "methods": {
            "consultarAsesores": {
                "name": "consultarAsesores",
                "lineBegin": 93,
                "lineEnd": 137,
                "annotations": [
                    "@RequestMapping(value = \"/listaAsesores\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Estado",
                        "variable": "defa",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grado_profesor",
                        "variable": "gdp",
                        "qualifedType": ""
                    },
                    {
                        "type": "Turno",
                        "variable": "tur",
                        "qualifedType": ""
                    },
                    {
                        "type": "Genero",
                        "variable": "gen",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Profesor> list_p1 = proRep.findAll();\r\n    //Se filtran a los participantes de los asesores\r\n    for (Profesor p : list_p1) {\r\n        if (p.getFk_id_estado() == null) {\r\n            Optional<Estado> estado = stRep.findById(34);\r\n            Estado defa = estado.get();\r\n            p.setFk_id_estado(defa);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getFk_id_grado_profesor() == null) {\r\n            Optional<Grado_profesor> gd = gpRep.findById(5);\r\n            Grado_profesor gdp = gd.get();\r\n            p.setFk_id_grado_profesor(gdp);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getFk_id_turno() == null) {\r\n            Optional<Turno> tr = tnRep.findById(4);\r\n            Turno tur = tr.get();\r\n            p.setFk_id_turno(tur);\r\n            proRep.save(p);\r\n        }\r\n        if (p.getGenero() == null) {\r\n            Optional<Genero> g = genRep.findById(3);\r\n            Genero gen = g.get();\r\n            p.setGenero(gen);\r\n            proRep.save(p);\r\n        }\r\n    }\r\n    //Se filtran todos los profesores que no tengan fecha de nacimiento\r\n    list_p1 = list_p1.stream().filter(x -> x.getFk_id_estado().getPk_id_estado() == 34).collect(Collectors.toList());\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"asesores\", list_p1);\r\n        return new ModelAndView(\"ModificarUsuario/listaAsesores\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "proRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "stRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "gpRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "tnRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "genRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "editarAsesor": {
                "name": "editarAsesor",
                "lineBegin": 175,
                "lineEnd": 254,
                "annotations": [
                    "@PostMapping(value = \"/editarasesor\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "ProfesorDto",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "mod",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Calendar",
                        "variable": "calendario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fechaSt",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    int id = profesor.getIdProfesor();\r\n    Profesor mod = proRep.findById(id).get();\r\n    String cambios = \"\";\r\n    if (!mod.getRfc().equals(profesor.getRfc())) {\r\n        cambios += \"Rfc de \" + mod.getRfc() + \" a \" + profesor.getRfc() + \"\\n\";\r\n        mod.setRfc(profesor.getRfc());\r\n    }\r\n    if (!mod.getNombre().equals(profesor.getNombres())) {\r\n        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + profesor.getNombres() + \"\\n\";\r\n        mod.setNombre(profesor.getNombres());\r\n    }\r\n    if (!mod.getApellido_paterno().equals(profesor.getaPaterno())) {\r\n        cambios += \"Apellido Paterno de \" + mod.getApellido_paterno() + \" a \" + profesor.getaPaterno() + \"\\n\";\r\n        mod.setApellido_paterno(profesor.getaPaterno());\r\n    }\r\n    if (!mod.getApellido_materno().equals(profesor.getaMaterno())) {\r\n        cambios += \"Apellido Materno de \" + mod.getApellido_materno() + \" a \" + profesor.getaMaterno() + \"\\n\";\r\n        mod.setApellido_materno(profesor.getaMaterno());\r\n    }\r\n    if (!mod.getCorreo().equals(profesor.getCorreo())) {\r\n        cambios += \"Correo de \" + mod.getCorreo() + \" a \" + profesor.getCorreo() + \"\\n\";\r\n        mod.setCorreo(profesor.getCorreo());\r\n    }\r\n    if (mod.getTelefono() == null) {\r\n        cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r\n        mod.setTelefono(profesor.getTelefono());\r\n    } else {\r\n        if (!mod.getTelefono().equals(profesor.getTelefono())) {\r\n            cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r\n            mod.setTelefono(profesor.getTelefono());\r\n        }\r\n    }\r\n    if (mod.getFechaNac() == null) {\r\n        String fechaSt = profesor.getfNacimiento();\r\n        Date fecha = null;\r\n        try {\r\n            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mod.setFechaNac(fecha);\r\n    } else {\r\n        if (profesor.getfNacimiento() != null) {\r\n            String fechaSt = profesor.getfNacimiento();\r\n            Date fecha = null;\r\n            try {\r\n                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r\n            } catch (ParseException e) {\r\n                e.printStackTrace();\r\n            }\r\n            if (!mod.getFechaNac().equals(fecha)) {\r\n                Calendar calendario = Calendar.getInstance();\r\n                calendario.setTime(fecha);\r\n                mod.setFechaNac(calendario.getTime());\r\n            }\r\n        }\r\n    }\r\n    System.out.println(cambios);\r\n    log.setTrace(LogTypes.MODIFICAR_ASESOR);\r\n    if (!cambios.equals(\"\")) {\r\n        proRep.save(mod);\r\n    }\r\n    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdAsesor editado con exito!\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "getIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "proRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getRfc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getApellido_paterno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getApellido_materno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getCorreo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getTelefono()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFechaNac()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "calendario",
                        "methodName": "setTime",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "calendario",
                        "methodName": "getTime",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "formEditarAsesor": {
                "name": "formEditarAsesor",
                "lineBegin": 139,
                "lineEnd": 173,
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionA\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "cambio",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "pdt",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "formatter",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ffecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Profesor cambio = (proRep.findByRfc(rfc));\r\n    ProfesorDto pdt = new ProfesorDto();\r\n    pdt.setaMaterno(cambio.getApellido_materno());\r\n    pdt.setaPaterno(cambio.getApellido_paterno());\r\n    pdt.setNombres(cambio.getNombre());\r\n    pdt.setCorreo(cambio.getCorreo());\r\n    if (cambio.getFechaNac() != null) {\r\n        pdt.setfNacimiento(cambio.getFechaNac().toString().substring(0, 10));\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        String ffecha = formatter.format(cambio.getFechaNac());\r\n        pdt.setFormFecha(ffecha);\r\n    }\r\n    pdt.setGenero(cambio.getGenero().toString());\r\n    pdt.setIdProfesor(cambio.getPk_id_profesor());\r\n    pdt.setRfc(cambio.getRfc());\r\n    pdt.setTelefono(cambio.getTelefono());\r\n    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionA\");\r\n    model.addObject(\"asesor\", pdt);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "proRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setaMaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setaPaterno",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setNombres",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFechaNac()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getFechaNac().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setfNacimiento",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFechaNac",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "formatter",
                        "methodName": "format",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setFormFecha",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "cambio.getGenero()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getTelefono",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pdt",
                        "methodName": "setTelefono",
                        "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Calendar",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "java.util.stream.Collectors",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "proRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "stRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "gpRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "tnRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "p",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "genRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
            },
            {
                "scopeName": "p",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "proRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "cambio",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFechaNac()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getFechaNac().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setFormFecha",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio.getGenero()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "pdt",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pdt",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "proRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "proRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getRfc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getApellido_paterno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaPaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getApellido_materno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getaMaterno",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getCorreo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getTelefono()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTelefono",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setTelefono",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFechaNac()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getfNacimiento",
                "targetClassName": "com.cocay.sicecd.dto.ProfesorDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFechaNac",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "proRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultarAsesores",
                "annotations": [
                    "@RequestMapping(value = \"/listaAsesores\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Profesor> list_p1 = proRep.findAll();\r",
                    "    //Se filtran a los participantes de los asesores\r",
                    "    for (Profesor p : list_p1) {\r",
                    "        if (p.getFk_id_estado() == null) {\r",
                    "            Optional<Estado> estado = stRep.findById(34);\r",
                    "            Estado defa = estado.get();\r",
                    "            p.setFk_id_estado(defa);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getFk_id_grado_profesor() == null) {\r",
                    "            Optional<Grado_profesor> gd = gpRep.findById(5);\r",
                    "            Grado_profesor gdp = gd.get();\r",
                    "            p.setFk_id_grado_profesor(gdp);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getFk_id_turno() == null) {\r",
                    "            Optional<Turno> tr = tnRep.findById(4);\r",
                    "            Turno tur = tr.get();\r",
                    "            p.setFk_id_turno(tur);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "        if (p.getGenero() == null) {\r",
                    "            Optional<Genero> g = genRep.findById(3);\r",
                    "            Genero gen = g.get();\r",
                    "            p.setGenero(gen);\r",
                    "            proRep.save(p);\r",
                    "        }\r",
                    "    }\r",
                    "    //Se filtran todos los profesores que no tengan fecha de nacimiento\r",
                    "    list_p1 = list_p1.stream().filter(x -> x.getFk_id_estado().getPk_id_estado() == 34).collect(Collectors.toList());\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"asesores\", list_p1);\r",
                    "        return new ModelAndView(\"ModificarUsuario/listaAsesores\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "editarAsesor",
                "annotations": [
                    "@PostMapping(value = \"/editarasesor\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "ProfesorDto",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    int id = profesor.getIdProfesor();\r",
                    "    Profesor mod = proRep.findById(id).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (!mod.getRfc().equals(profesor.getRfc())) {\r",
                    "        cambios += \"Rfc de \" + mod.getRfc() + \" a \" + profesor.getRfc() + \"\\n\";\r",
                    "        mod.setRfc(profesor.getRfc());\r",
                    "    }\r",
                    "    if (!mod.getNombre().equals(profesor.getNombres())) {\r",
                    "        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + profesor.getNombres() + \"\\n\";\r",
                    "        mod.setNombre(profesor.getNombres());\r",
                    "    }\r",
                    "    if (!mod.getApellido_paterno().equals(profesor.getaPaterno())) {\r",
                    "        cambios += \"Apellido Paterno de \" + mod.getApellido_paterno() + \" a \" + profesor.getaPaterno() + \"\\n\";\r",
                    "        mod.setApellido_paterno(profesor.getaPaterno());\r",
                    "    }\r",
                    "    if (!mod.getApellido_materno().equals(profesor.getaMaterno())) {\r",
                    "        cambios += \"Apellido Materno de \" + mod.getApellido_materno() + \" a \" + profesor.getaMaterno() + \"\\n\";\r",
                    "        mod.setApellido_materno(profesor.getaMaterno());\r",
                    "    }\r",
                    "    if (!mod.getCorreo().equals(profesor.getCorreo())) {\r",
                    "        cambios += \"Correo de \" + mod.getCorreo() + \" a \" + profesor.getCorreo() + \"\\n\";\r",
                    "        mod.setCorreo(profesor.getCorreo());\r",
                    "    }\r",
                    "    if (mod.getTelefono() == null) {\r",
                    "        cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r",
                    "        mod.setTelefono(profesor.getTelefono());\r",
                    "    } else {\r",
                    "        if (!mod.getTelefono().equals(profesor.getTelefono())) {\r",
                    "            cambios += \"Telefono de \" + mod.getTelefono() + \" a \" + profesor.getTelefono() + \"\\n\";\r",
                    "            mod.setTelefono(profesor.getTelefono());\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getFechaNac() == null) {\r",
                    "        String fechaSt = profesor.getfNacimiento();\r",
                    "        Date fecha = null;\r",
                    "        try {\r",
                    "            fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "        } catch (ParseException e) {\r",
                    "            e.printStackTrace();\r",
                    "        }\r",
                    "        mod.setFechaNac(fecha);\r",
                    "    } else {\r",
                    "        if (profesor.getfNacimiento() != null) {\r",
                    "            String fechaSt = profesor.getfNacimiento();\r",
                    "            Date fecha = null;\r",
                    "            try {\r",
                    "                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fechaSt);\r",
                    "            } catch (ParseException e) {\r",
                    "                e.printStackTrace();\r",
                    "            }\r",
                    "            if (!mod.getFechaNac().equals(fecha)) {\r",
                    "                Calendar calendario = Calendar.getInstance();\r",
                    "                calendario.setTime(fecha);\r",
                    "                mod.setFechaNac(calendario.getTime());\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    System.out.println(cambios);\r",
                    "    log.setTrace(LogTypes.MODIFICAR_ASESOR);\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        proRep.save(mod);\r",
                    "    }\r",
                    "    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdAsesor editado con exito!\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formEditarAsesor",
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionA\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Profesor cambio = (proRep.findByRfc(rfc));\r",
                    "    ProfesorDto pdt = new ProfesorDto();\r",
                    "    pdt.setaMaterno(cambio.getApellido_materno());\r",
                    "    pdt.setaPaterno(cambio.getApellido_paterno());\r",
                    "    pdt.setNombres(cambio.getNombre());\r",
                    "    pdt.setCorreo(cambio.getCorreo());\r",
                    "    if (cambio.getFechaNac() != null) {\r",
                    "        pdt.setfNacimiento(cambio.getFechaNac().toString().substring(0, 10));\r",
                    "        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r",
                    "        String ffecha = formatter.format(cambio.getFechaNac());\r",
                    "        pdt.setFormFecha(ffecha);\r",
                    "    }\r",
                    "    pdt.setGenero(cambio.getGenero().toString());\r",
                    "    pdt.setIdProfesor(cambio.getPk_id_profesor());\r",
                    "    pdt.setRfc(cambio.getRfc());\r",
                    "    pdt.setTelefono(cambio.getTelefono());\r",
                    "    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionA\");\r",
                    "    model.addObject(\"asesor\", pdt);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ProcessorProfesor": {
        "full_name": "com.cocay.sicecd.step.ProcessorProfesor",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 90,
        "short_name": "ProcessorProfesor",
        "src": "com.cocay.sicecd.step.ProcessorProfesor",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "log",
                "lineBegin": 26,
                "lineEnd": 26
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "estadoRep",
                "lineBegin": 28,
                "lineEnd": 29
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "turnoRep",
                "lineBegin": 31,
                "lineEnd": 32
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "generoRep",
                "lineBegin": 34,
                "lineEnd": 35
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gradoProfesor",
                "lineBegin": 37,
                "lineEnd": 38
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesorRep",
                "lineBegin": 40,
                "lineEnd": 41
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 43,
                "lineEnd": 44
            }
        ],
        "methods": {
            "process": {
                "name": "process",
                "lineBegin": 46,
                "lineEnd": 89,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "cdEstado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cdTurno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cdGenero",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cdGrado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Estado",
                        "variable": "estado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Turno",
                        "variable": "turno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Genero",
                        "variable": "genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grado_profesor",
                        "variable": "gradoP",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String cdEstado = profesor.getTempEstado();\r\n    String cdTurno = profesor.getTempTurno();\r\n    String cdGenero = profesor.getTempGenero();\r\n    String cdGrado = profesor.getTempGradoP();\r\n    String rfc = profesor.getRfc();\r\n    Estado estado = estadoRep.findByNombreEstado(cdEstado);\r\n    Turno turno = turnoRep.findByNombreTurno(cdTurno);\r\n    Genero genero = generoRep.findByNombreGenero(cdGenero);\r\n    Grado_profesor gradoP = gradoProfesor.findByNombreGrado(cdGrado);\r\n    if (estado != null && turno != null && genero != null && gradoP != null) {\r\n        profesor.setFk_id_estado(estado);\r\n        profesor.setFk_id_turno(turno);\r\n        profesor.setFk_id_grado_profesor(gradoP);\r\n        profesor.setGenero(genero);\r\n        profesor.setStTabla(1);\r\n        Profesor p = profesorRep.findByRfc(rfc);\r\n        if (p == null) {\r\n            System.out.println(profesor.toString());\r\n            System.out.println(\"Objeto convertido a profesor \");\r\n            return profesor;\r\n        } else {\r\n            String mensaje = \"El profesor: \" + rfc + \" ya existe actualmente\";\r\n            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n            Query query = em.createNativeQuery(consulta);\r\n            query.executeUpdate();\r\n            return null;\r\n        }\r\n    } else {\r\n        String mensaje = \"Error al agregar profesor con rfc: \" + rfc + \" (Verifique los datos)\";\r\n        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n        Query query = em.createNativeQuery(consulta);\r\n        query.executeUpdate();\r\n        return null;\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "getTempEstado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTempTurno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTempGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getTempGradoP",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "estadoRep",
                        "methodName": "findByNombreEstado",
                        "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
                    },
                    {
                        "scopeName": "turnoRep",
                        "methodName": "findByNombreTurno",
                        "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
                    },
                    {
                        "scopeName": "generoRep",
                        "methodName": "findByNombreGenero",
                        "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
                    },
                    {
                        "scopeName": "gradoProfesor",
                        "methodName": "findByNombreGrado",
                        "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "setFk_id_estado",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "setFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "setFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "setGenero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "setStTabla",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemProcessor<Profesor, Profesor>"
        ],
        "extends": [],
        "imports": [
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.item.ItemProcessor",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.TurnoRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "profesor",
                "methodName": "getTempEstado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTempTurno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTempGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getTempGradoP",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "estadoRep",
                "methodName": "findByNombreEstado",
                "targetClassName": "com.cocay.sicecd.repo.EstadoRep"
            },
            {
                "scopeName": "turnoRep",
                "methodName": "findByNombreTurno",
                "targetClassName": "com.cocay.sicecd.repo.TurnoRep"
            },
            {
                "scopeName": "generoRep",
                "methodName": "findByNombreGenero",
                "targetClassName": "com.cocay.sicecd.repo.GeneroRep"
            },
            {
                "scopeName": "gradoProfesor",
                "methodName": "findByNombreGrado",
                "targetClassName": "com.cocay.sicecd.repo.Grado_profesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "setFk_id_estado",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "setFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "setFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "setGenero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "setStTabla",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "process",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String cdEstado = profesor.getTempEstado();\r",
                    "    String cdTurno = profesor.getTempTurno();\r",
                    "    String cdGenero = profesor.getTempGenero();\r",
                    "    String cdGrado = profesor.getTempGradoP();\r",
                    "    String rfc = profesor.getRfc();\r",
                    "    Estado estado = estadoRep.findByNombreEstado(cdEstado);\r",
                    "    Turno turno = turnoRep.findByNombreTurno(cdTurno);\r",
                    "    Genero genero = generoRep.findByNombreGenero(cdGenero);\r",
                    "    Grado_profesor gradoP = gradoProfesor.findByNombreGrado(cdGrado);\r",
                    "    if (estado != null && turno != null && genero != null && gradoP != null) {\r",
                    "        profesor.setFk_id_estado(estado);\r",
                    "        profesor.setFk_id_turno(turno);\r",
                    "        profesor.setFk_id_grado_profesor(gradoP);\r",
                    "        profesor.setGenero(genero);\r",
                    "        profesor.setStTabla(1);\r",
                    "        Profesor p = profesorRep.findByRfc(rfc);\r",
                    "        if (p == null) {\r",
                    "            System.out.println(profesor.toString());\r",
                    "            System.out.println(\"Objeto convertido a profesor \");\r",
                    "            return profesor;\r",
                    "        } else {\r",
                    "            String mensaje = \"El profesor: \" + rfc + \" ya existe actualmente\";\r",
                    "            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "            Query query = em.createNativeQuery(consulta);\r",
                    "            query.executeUpdate();\r",
                    "            return null;\r",
                    "        }\r",
                    "    } else {\r",
                    "        String mensaje = \"Error al agregar profesor con rfc: \" + rfc + \" (Verifique los datos)\";\r",
                    "        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "        Query query = em.createNativeQuery(consulta);\r",
                    "        query.executeUpdate();\r",
                    "        return null;\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Turno": {
        "full_name": "com.cocay.sicecd.model.Turno",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 57,
        "short_name": "Turno",
        "src": "com.cocay.sicecd.model.Turno",
        "annotations": [
            "@Entity",
            "@Table(name = \"Turno\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_turno\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_turno",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 30)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_turno\", targetEntity = Profesor.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "type": "List<Profesor>",
                "variable": "profesores",
                "lineBegin": 29,
                "lineEnd": 31
            }
        ],
        "methods": {
            "getPk_id_turno": {
                "name": "getPk_id_turno",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_turno": {
                "name": "setPk_id_turno",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_turno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_turno = pk_id_turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getProfesores": {
                "name": "getProfesores",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return profesores;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setProfesores": {
                "name": "setProfesores",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Profesor>",
                        "variable": "profesores",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.profesores = profesores;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getPk_id_turno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_turno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_turno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_turno = pk_id_turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getProfesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return profesores;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setProfesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Profesor>",
                        "variable": "profesores",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.profesores = profesores;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Genero": {
        "full_name": "com.cocay.sicecd.model.Genero",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 35,
        "short_name": "Genero",
        "src": "com.cocay.sicecd.model.Genero",
        "annotations": [
            "@Entity",
            "@Table(name = \"Genero\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_genero\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_genero",
                "lineBegin": 14,
                "lineEnd": 17
            },
            {
                "annotations": [
                    "@Column(name = \"genero\", nullable = false, length = 30, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "genero",
                "lineBegin": 19,
                "lineEnd": 20
            }
        ],
        "methods": {
            "getGenero": {
                "name": "getGenero",
                "lineBegin": 28,
                "lineEnd": 30,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setGenero": {
                "name": "setGenero",
                "lineBegin": 31,
                "lineEnd": 33,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.genero = genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_genero": {
                "name": "getPk_id_genero",
                "lineBegin": 22,
                "lineEnd": 24,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_genero": {
                "name": "setPk_id_genero",
                "lineBegin": 25,
                "lineEnd": 27,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_genero = pk_id_genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.genero = genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_genero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_genero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_genero = pk_id_genero;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Grado_profesor": {
        "full_name": "com.cocay.sicecd.model.Grado_profesor",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 57,
        "short_name": "Grado_profesor",
        "src": "com.cocay.sicecd.model.Grado_profesor",
        "annotations": [
            "@Entity",
            "@Table(name = \"Grado_profesor\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_grado_profesor\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_grado_profesor",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 50, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_grado_profesor\", targetEntity = Profesor.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "type": "List<Profesor>",
                "variable": "profesores",
                "lineBegin": 29,
                "lineEnd": 31
            }
        ],
        "methods": {
            "getPk_id_grado_profesor": {
                "name": "getPk_id_grado_profesor",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_grado_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getProfesores": {
                "name": "getProfesores",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return profesores;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_grado_profesor": {
                "name": "setPk_id_grado_profesor",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_grado_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_grado_profesor = pk_id_grado_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setProfesores": {
                "name": "setProfesores",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Profesor>",
                        "variable": "profesores",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.profesores = profesores;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getPk_id_grado_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_grado_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getProfesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return profesores;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_grado_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_grado_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_grado_profesor = pk_id_grado_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setProfesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Profesor>",
                        "variable": "profesores",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.profesores = profesores;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.ProfesorRep": {
        "full_name": "com.cocay.sicecd.repo.ProfesorRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 102,
        "short_name": "ProfesorRep",
        "src": "com.cocay.sicecd.repo.ProfesorRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByCorreo": {
                "name": "findByCorreo",
                "lineBegin": 76,
                "lineEnd": 77,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where p.correo = :correo\")"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByCompleteNameList": {
                "name": "findByCompleteNameList",
                "lineBegin": 68,
                "lineEnd": 74,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p \" + \"WHERE upper(p.nombre) LIKE CONCAT('%',:nombre,'%') \" + \"AND upper(p.apellido_paterno) LIKE CONCAT('%',:apellido_paterno,'%') \" + \"AND upper(p.apellido_materno) LIKE CONCAT('%',:apellido_materno,'%')\")"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByName": {
                "name": "findByName",
                "lineBegin": 23,
                "lineEnd": 27,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p \" + \"WHERE TRANSLATE(UPPER(p.nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_paterno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_paterno,'%')\")"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "loadAllProfesor": {
                "name": "loadAllProfesor",
                "lineBegin": 79,
                "lineEnd": 80,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Profesor\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findAll": {
                "name": "findAll",
                "lineBegin": 53,
                "lineEnd": 54,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p\")"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findHigherID": {
                "name": "findHigherID",
                "lineBegin": 56,
                "lineEnd": 57,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p ORDER BY p.pk_id_profesor DESC\")"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "updateProfesor": {
                "name": "updateProfesor",
                "lineBegin": 92,
                "lineEnd": 95,
                "annotations": [
                    "@Modifying(clearAutomatically = true)",
                    "@Query(\"update Profesor p set p.nombre =:nombre, p.apellido_paterno=:apellido_paterno, p.apellido_materno=:apellido_materno,p.correo=:correo, p.clave_plantel=:clave_plantel, p.ciudad_localidad=:ciudad_localidad where p.curp =:curp\")",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByCurp": {
                "name": "findByCurp",
                "lineBegin": 62,
                "lineEnd": 63,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.curp) = UPPER(:curp) \")"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "updateProfesorByRFC": {
                "name": "updateProfesorByRFC",
                "lineBegin": 98,
                "lineEnd": 101,
                "annotations": [
                    "@Modifying(clearAutomatically = true)",
                    "@Query(\"update Profesor p set p.nombre =:nombre, p.apellido_paterno=:apellido_paterno, p.apellido_materno=:apellido_materno,p.correo=:correo, p.clave_plantel=:clave_plantel, p.ciudad_localidad=:ciudad_localidad where p.rfc =:rfc\")",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByRfc": {
                "name": "findByRfc",
                "lineBegin": 59,
                "lineEnd": 60,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.rfc) = UPPER(:rfc) \")"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByRFC": {
                "name": "findByRFC",
                "lineBegin": 65,
                "lineEnd": 66,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.rfc) = UPPER(:rfc) \")"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "saveT": {
                "name": "saveT",
                "lineBegin": 87,
                "lineEnd": 90,
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Profesor (nombre,apellido_paterno,apellido_materno,curp,rfc,correo,clave_plantel,ciudad_localidad,fk_id_estado,fk_id_grado_profesor,fk_id_turno,id_genero) VALUES (:nombre,:apellido_paterno,:apellido_materno,:curp,:rfc,:email,:institution,:city,:id_estado,:id_grado_profesor,:id_turno,:id_genero)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "firstname",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "email",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "institution",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "city",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByID": {
                "name": "findByID",
                "lineBegin": 20,
                "lineEnd": 21,
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where p.pk_id_profesor = :id \")"
                ],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByParams": {
                "name": "findByParams",
                "lineBegin": 40,
                "lineEnd": 51,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Profesor \" + \"WHERE AND rfc LIKE CONCAT('%',:rfc,'%') \" + \"AND TRANSLATE(UPPER(p.nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_paterno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_paterno,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_materno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_materno,'%') \" + \"AND fk_id_estado=:estado\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Profesor>"
                ],
                "identifier": [
                    "List",
                    "Profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "CrudRepository<Profesor, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Modifying",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.CrudRepository",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "org.springframework.transaction.annotation.Transactional",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByCorreo",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where p.correo = :correo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByCompleteNameList",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p \" + \"WHERE upper(p.nombre) LIKE CONCAT('%',:nombre,'%') \" + \"AND upper(p.apellido_paterno) LIKE CONCAT('%',:apellido_paterno,'%') \" + \"AND upper(p.apellido_materno) LIKE CONCAT('%',:apellido_materno,'%')\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByName",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p \" + \"WHERE TRANSLATE(UPPER(p.nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_paterno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_paterno,'%')\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "loadAllProfesor",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Profesor\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findAll",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findHigherID",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p ORDER BY p.pk_id_profesor DESC\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "updateProfesor",
                "annotations": [
                    "@Modifying(clearAutomatically = true)",
                    "@Query(\"update Profesor p set p.nombre =:nombre, p.apellido_paterno=:apellido_paterno, p.apellido_materno=:apellido_materno,p.correo=:correo, p.clave_plantel=:clave_plantel, p.ciudad_localidad=:ciudad_localidad where p.curp =:curp\")",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByCurp",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.curp) = UPPER(:curp) \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "updateProfesorByRFC",
                "annotations": [
                    "@Modifying(clearAutomatically = true)",
                    "@Query(\"update Profesor p set p.nombre =:nombre, p.apellido_paterno=:apellido_paterno, p.apellido_materno=:apellido_materno,p.correo=:correo, p.clave_plantel=:clave_plantel, p.ciudad_localidad=:ciudad_localidad where p.rfc =:rfc\")",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_plantel",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ciudad_localidad",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByRfc",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.rfc) = UPPER(:rfc) \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByRFC",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where UPPER(p.rfc) = UPPER(:rfc) \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "saveT",
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Profesor (nombre,apellido_paterno,apellido_materno,curp,rfc,correo,clave_plantel,ciudad_localidad,fk_id_estado,fk_id_grado_profesor,fk_id_turno,id_genero) VALUES (:nombre,:apellido_paterno,:apellido_materno,:curp,:rfc,:email,:institution,:city,:id_estado,:id_grado_profesor,:id_turno,:id_genero)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "firstname",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "email",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "institution",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "city",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByID",
                "annotations": [
                    "@Query(\"SELECT p FROM Profesor p where p.pk_id_profesor = :id \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByParams",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Profesor \" + \"WHERE AND rfc LIKE CONCAT('%',:rfc,'%') \" + \"AND TRANSLATE(UPPER(p.nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_paterno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_paterno,'%') \" + \"AND TRANSLATE(UPPER(p.apellido_materno),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:apellido_materno,'%') \" + \"AND fk_id_estado=:estado\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ReaderProfesor": {
        "full_name": "com.cocay.sicecd.step.ReaderProfesor",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 29,
        "short_name": "ReaderProfesor",
        "src": "com.cocay.sicecd.step.ReaderProfesor",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "reader": {
                "name": "reader",
                "lineBegin": 15,
                "lineEnd": 28,
                "annotations": [],
                "returnDataType": [
                    "FlatFileItemReader<Profesor>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Profesor> reader = new FlatFileItemReader<>();\r\n    reader.setResource(new ClassPathResource(pathToFile));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Profesor>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"nombre\", \"apellido_paterno\", \"apellido_materno\", \"rfc\", \"curp\", \"correo\", \"telefono\", \"ciudad_localidad\", \"id_genero\", \"plantel\", \"clave_plantel\", \"ocupacion\", \"curriculum\", \"fecha_nac\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Profesor>() {\r\n\r\n                {\r\n                    setTargetType(Profesor.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.batch.item.file.FlatFileItemReader",
            "org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper",
            "org.springframework.batch.item.file.mapping.DefaultLineMapper",
            "org.springframework.batch.item.file.transform.DelimitedLineTokenizer",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.core.io.ClassPathResource",
            "org.springframework.core.io.FileSystemResource",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "reader",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Profesor> reader = new FlatFileItemReader<>();\r",
                    "    reader.setResource(new ClassPathResource(pathToFile));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Profesor>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"nombre\", \"apellido_paterno\", \"apellido_materno\", \"rfc\", \"curp\", \"correo\", \"telefono\", \"ciudad_localidad\", \"id_genero\", \"plantel\", \"clave_plantel\", \"ocupacion\", \"curriculum\", \"fecha_nac\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Profesor>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Profesor.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.GeneroRep": {
        "full_name": "com.cocay.sicecd.repo.GeneroRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 16,
        "short_name": "GeneroRep",
        "src": "com.cocay.sicecd.repo.GeneroRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombreGenero": {
                "name": "findByNombreGenero",
                "lineBegin": 14,
                "lineEnd": 15,
                "annotations": [
                    "@Query(\"SELECT c FROM Genero c where c.genero = :genero\")"
                ],
                "returnDataType": [
                    "Genero"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Genero, Integer>"
        ],
        "imports": [
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Genero"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombreGenero",
                "annotations": [
                    "@Query(\"SELECT c FROM Genero c where c.genero = :genero\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Genero",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Grado_profesorRep": {
        "full_name": "com.cocay.sicecd.repo.Grado_profesorRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 19,
        "short_name": "Grado_profesorRep",
        "src": "com.cocay.sicecd.repo.Grado_profesorRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 14,
                "lineEnd": 14,
                "annotations": [],
                "returnDataType": [
                    "List<Grado_profesor>"
                ],
                "identifier": [
                    "List",
                    "Grado_profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombreGrado": {
                "name": "findByNombreGrado",
                "lineBegin": 16,
                "lineEnd": 17,
                "annotations": [
                    "@Query(\"SELECT c FROM Grado_profesor c where c.nombre = :nombre\")"
                ],
                "returnDataType": [
                    "Grado_profesor"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Grado_profesor, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Grado_profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grado_profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombreGrado",
                "annotations": [
                    "@Query(\"SELECT c FROM Grado_profesor c where c.nombre = :nombre\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Grado_profesor",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.TurnoRep": {
        "full_name": "com.cocay.sicecd.repo.TurnoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 19,
        "short_name": "TurnoRep",
        "src": "com.cocay.sicecd.repo.TurnoRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombreTurno": {
                "name": "findByNombreTurno",
                "lineBegin": 16,
                "lineEnd": 17,
                "annotations": [
                    "@Query(\"SELECT c FROM Turno c where c.nombre = :nombre\")"
                ],
                "returnDataType": [
                    "Turno"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 14,
                "lineEnd": 14,
                "annotations": [],
                "returnDataType": [
                    "List<Turno>"
                ],
                "identifier": [
                    "List",
                    "Turno"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Turno, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Turno"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombreTurno",
                "annotations": [
                    "@Query(\"SELECT c FROM Turno c where c.nombre = :nombre\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Turno",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Turno>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.ProfesorDto": {
        "full_name": "com.cocay.sicecd.dto.ProfesorDto",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 302,
        "short_name": "ProfesorDto",
        "src": "com.cocay.sicecd.dto.ProfesorDto",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "id",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "idProfesor",
                "lineBegin": 7,
                "lineEnd": 7
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "aPaterno",
                "lineBegin": 9,
                "lineEnd": 9
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "aMaterno",
                "lineBegin": 11,
                "lineEnd": 11
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombres",
                "lineBegin": 13,
                "lineEnd": 13
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "fNacimiento",
                "lineBegin": 15,
                "lineEnd": 15
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "telefono",
                "lineBegin": 17,
                "lineEnd": 17
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "correo",
                "lineBegin": 19,
                "lineEnd": 19
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "rfc",
                "lineBegin": 21,
                "lineEnd": 21
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "cilo",
                "lineBegin": 23,
                "lineEnd": 23
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "cPlantel",
                "lineBegin": 25,
                "lineEnd": 25
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curp",
                "lineBegin": 27,
                "lineEnd": 27
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curriculum",
                "lineBegin": 29,
                "lineEnd": 29
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "estado",
                "lineBegin": 31,
                "lineEnd": 31
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombreEstado",
                "lineBegin": 32,
                "lineEnd": 32
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "grado",
                "lineBegin": 34,
                "lineEnd": 34
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombreGrado",
                "lineBegin": 35,
                "lineEnd": 35
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "turno",
                "lineBegin": 37,
                "lineEnd": 37
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombreTurno",
                "lineBegin": 38,
                "lineEnd": 38
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "genero",
                "lineBegin": 40,
                "lineEnd": 40
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombreGenero",
                "lineBegin": 41,
                "lineEnd": 41
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "ocupacion",
                "lineBegin": 43,
                "lineEnd": 43
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "plantel",
                "lineBegin": 45,
                "lineEnd": 45
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "comprobante_doc",
                "lineBegin": 47,
                "lineEnd": 47
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curp_doc",
                "lineBegin": 49,
                "lineEnd": 49
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "rfc_doc",
                "lineBegin": 51,
                "lineEnd": 51
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "certificado_doc",
                "lineBegin": 53,
                "lineEnd": 53
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "cdMensaje",
                "lineBegin": 55,
                "lineEnd": 55
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "cdAsunto",
                "lineBegin": 57,
                "lineEnd": 57
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "formFecha",
                "lineBegin": 59,
                "lineEnd": 59
            }
        ],
        "methods": {
            "getCertificado_doc": {
                "name": "getCertificado_doc",
                "lineBegin": 245,
                "lineEnd": 247,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return certificado_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombreGenero": {
                "name": "setNombreGenero",
                "lineBegin": 281,
                "lineEnd": 283,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombreGenero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombreGenero = nombreGenero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFormFecha": {
                "name": "getFormFecha",
                "lineBegin": 61,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return formFecha;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setaPaterno": {
                "name": "setaPaterno",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "aPaterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.aPaterno = aPaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombreEstado": {
                "name": "setNombreEstado",
                "lineBegin": 257,
                "lineEnd": 259,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombreEstado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombreEstado = nombreEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurriculum": {
                "name": "setCurriculum",
                "lineBegin": 153,
                "lineEnd": 155,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curriculum",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curriculum = curriculum;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setOcupacion": {
                "name": "setOcupacion",
                "lineBegin": 193,
                "lineEnd": 195,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ocupacion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.ocupacion = ocupacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTelefono": {
                "name": "setTelefono",
                "lineBegin": 105,
                "lineEnd": 107,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.telefono = telefono;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setGrado": {
                "name": "setGrado",
                "lineBegin": 169,
                "lineEnd": 171,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "grado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.grado = grado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombreTurno": {
                "name": "getNombreTurno",
                "lineBegin": 269,
                "lineEnd": 271,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombreTurno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCorreo": {
                "name": "getCorreo",
                "lineBegin": 109,
                "lineEnd": 111,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurp_doc": {
                "name": "setCurp_doc",
                "lineBegin": 233,
                "lineEnd": 235,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curp_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curp_doc = curp_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTurno": {
                "name": "setTurno",
                "lineBegin": 177,
                "lineEnd": 179,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "turno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.turno = turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getGenero": {
                "name": "getGenero",
                "lineBegin": 181,
                "lineEnd": 183,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc_doc": {
                "name": "setRfc_doc",
                "lineBegin": 241,
                "lineEnd": 243,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc_doc = rfc_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurp_doc": {
                "name": "getCurp_doc",
                "lineBegin": 229,
                "lineEnd": 231,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curp_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getcPlantel": {
                "name": "getcPlantel",
                "lineBegin": 133,
                "lineEnd": 135,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cPlantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setId": {
                "name": "setId",
                "lineBegin": 209,
                "lineEnd": 211,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.id = id;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurriculum": {
                "name": "getCurriculum",
                "lineBegin": 149,
                "lineEnd": 151,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curriculum;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCilo": {
                "name": "getCilo",
                "lineBegin": 125,
                "lineEnd": 127,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cilo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCilo": {
                "name": "setCilo",
                "lineBegin": 129,
                "lineEnd": 131,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cilo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cilo = cilo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCertificado_doc": {
                "name": "setCertificado_doc",
                "lineBegin": 249,
                "lineEnd": 251,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "certificado_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.certificado_doc = certificado_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombreGrado": {
                "name": "getNombreGrado",
                "lineBegin": 261,
                "lineEnd": 263,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombreGrado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getEstado": {
                "name": "getEstado",
                "lineBegin": 157,
                "lineEnd": 159,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTelefono": {
                "name": "getTelefono",
                "lineBegin": 101,
                "lineEnd": 103,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return telefono;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setaMaterno": {
                "name": "setaMaterno",
                "lineBegin": 81,
                "lineEnd": 83,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "aMaterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.aMaterno = aMaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdProfesor": {
                "name": "getIdProfesor",
                "lineBegin": 213,
                "lineEnd": 215,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCdMensaje": {
                "name": "getCdMensaje",
                "lineBegin": 285,
                "lineEnd": 287,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPlantel": {
                "name": "getPlantel",
                "lineBegin": 197,
                "lineEnd": 199,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setfNacimiento": {
                "name": "setfNacimiento",
                "lineBegin": 97,
                "lineEnd": 99,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "fNacimiento",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fNacimiento = fNacimiento;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setcPlantel": {
                "name": "setcPlantel",
                "lineBegin": 137,
                "lineEnd": 139,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cPlantel",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cPlantel = cPlantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCdAsunto": {
                "name": "setCdAsunto",
                "lineBegin": 297,
                "lineEnd": 299,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cdAsunto",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cdAsunto = cdAsunto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombres": {
                "name": "getNombres",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setGenero": {
                "name": "setGenero",
                "lineBegin": 185,
                "lineEnd": 187,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.genero = genero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombreEstado": {
                "name": "getNombreEstado",
                "lineBegin": 253,
                "lineEnd": 255,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombreEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getId": {
                "name": "getId",
                "lineBegin": 205,
                "lineEnd": 207,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return id;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombres": {
                "name": "setNombres",
                "lineBegin": 89,
                "lineEnd": 91,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombres = nombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getComprobante_doc": {
                "name": "getComprobante_doc",
                "lineBegin": 221,
                "lineEnd": 223,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return comprobante_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCorreo": {
                "name": "setCorreo",
                "lineBegin": 113,
                "lineEnd": 115,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.correo = correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getGrado": {
                "name": "getGrado",
                "lineBegin": 165,
                "lineEnd": 167,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return grado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurp": {
                "name": "getCurp",
                "lineBegin": 141,
                "lineEnd": 143,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setEstado": {
                "name": "setEstado",
                "lineBegin": 161,
                "lineEnd": 163,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.estado = estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getaPaterno": {
                "name": "getaPaterno",
                "lineBegin": 69,
                "lineEnd": 71,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return aPaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getfNacimiento": {
                "name": "getfNacimiento",
                "lineBegin": 93,
                "lineEnd": 95,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fNacimiento;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPlantel": {
                "name": "setPlantel",
                "lineBegin": 201,
                "lineEnd": 203,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.plantel = plantel;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombreGenero": {
                "name": "getNombreGenero",
                "lineBegin": 277,
                "lineEnd": 279,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombreGenero;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombreTurno": {
                "name": "setNombreTurno",
                "lineBegin": 273,
                "lineEnd": 275,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombreTurno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombreTurno = nombreTurno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setComprobante_doc": {
                "name": "setComprobante_doc",
                "lineBegin": 225,
                "lineEnd": 227,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "comprobante_doc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.comprobante_doc = comprobante_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getaMaterno": {
                "name": "getaMaterno",
                "lineBegin": 77,
                "lineEnd": 79,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return aMaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCdAsunto": {
                "name": "getCdAsunto",
                "lineBegin": 293,
                "lineEnd": 295,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cdAsunto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getOcupacion": {
                "name": "getOcupacion",
                "lineBegin": 189,
                "lineEnd": 191,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return ocupacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTurno": {
                "name": "getTurno",
                "lineBegin": 173,
                "lineEnd": 175,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFormFecha": {
                "name": "setFormFecha",
                "lineBegin": 65,
                "lineEnd": 67,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "formFecha",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.formFecha = formFecha;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc": {
                "name": "setRfc",
                "lineBegin": 121,
                "lineEnd": 123,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc = rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc": {
                "name": "getRfc",
                "lineBegin": 117,
                "lineEnd": 119,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc_doc": {
                "name": "getRfc_doc",
                "lineBegin": 237,
                "lineEnd": 239,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc_doc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCdMensaje": {
                "name": "setCdMensaje",
                "lineBegin": 289,
                "lineEnd": 291,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cdMensaje = cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurp": {
                "name": "setCurp",
                "lineBegin": 145,
                "lineEnd": 147,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curp = curp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombreGrado": {
                "name": "setNombreGrado",
                "lineBegin": 265,
                "lineEnd": 267,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombreGrado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombreGrado = nombreGrado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdProfesor": {
                "name": "setIdProfesor",
                "lineBegin": 217,
                "lineEnd": 219,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "idProfesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idProfesor = idProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getCertificado_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return certificado_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombreGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombreGenero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombreGenero = nombreGenero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFormFecha",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return formFecha;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setaPaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "aPaterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.aPaterno = aPaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombreEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombreEstado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombreEstado = nombreEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurriculum",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curriculum",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curriculum = curriculum;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setOcupacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ocupacion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.ocupacion = ocupacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTelefono",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "telefono",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.telefono = telefono;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setGrado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "grado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.grado = grado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombreTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombreTurno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurp_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curp_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curp_doc = curp_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "turno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.turno = turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc_doc = rfc_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurp_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curp_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getcPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cPlantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setId",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.id = id;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurriculum",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curriculum;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCilo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cilo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCilo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cilo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cilo = cilo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCertificado_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "certificado_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.certificado_doc = certificado_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombreGrado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombreGrado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTelefono",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return telefono;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setaMaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "aMaterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.aMaterno = aMaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setfNacimiento",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "fNacimiento",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fNacimiento = fNacimiento;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setcPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cPlantel",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cPlantel = cPlantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCdAsunto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cdAsunto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cdAsunto = cdAsunto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "genero",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.genero = genero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombreEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombreEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getId",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return id;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombres = nombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getComprobante_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return comprobante_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.correo = correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getGrado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return grado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.estado = estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getaPaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return aPaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getfNacimiento",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fNacimiento;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPlantel",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "plantel",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.plantel = plantel;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombreGenero",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombreGenero;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombreTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombreTurno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombreTurno = nombreTurno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setComprobante_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "comprobante_doc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.comprobante_doc = comprobante_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getaMaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return aMaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCdAsunto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cdAsunto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getOcupacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return ocupacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFormFecha",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "formFecha",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.formFecha = formFecha;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc = rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc_doc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc_doc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cdMensaje = cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curp = curp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombreGrado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombreGrado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombreGrado = nombreGrado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "idProfesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idProfesor = idProfesor;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Inscripcion": {
        "full_name": "com.cocay.sicecd.model.Inscripcion",
        "constructor": [
            "public Inscripcion() {\r\n}"
        ],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 121,
        "short_name": "Inscripcion",
        "src": "com.cocay.sicecd.model.Inscripcion",
        "annotations": [
            "@Entity",
            "@Table(name = \"Inscripcion\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_inscripcion\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_inscripcion",
                "lineBegin": 19,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Column(name = \"calif\", nullable = true, length = 3)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "calif",
                "lineBegin": 24,
                "lineEnd": 25
            },
            {
                "annotations": [
                    "@Column(name = \"aprobado\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Boolean",
                "variable": "aprobado",
                "lineBegin": 27,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@Column(name = \"tempGrupo\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempGrupo",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Column(name = \"tempCurso\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempCurso",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Column(name = \"tempProfesor\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tempProfesor",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Column(name = \"stTabla\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Integer",
                "variable": "stTabla",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Grupo.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_grupo\", referencedColumnName = \"pk_id_grupo\", insertable = true, updatable = true, nullable = false)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grupo",
                "variable": "fk_id_grupo",
                "lineBegin": 42,
                "lineEnd": 45
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Profesor.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_profesor\", referencedColumnName = \"pk_id_profesor\", insertable = true, updatable = true, nullable = false)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Profesor",
                "variable": "fk_id_profesor",
                "lineBegin": 47,
                "lineEnd": 50
            }
        ],
        "methods": {
            "getTempCurso": {
                "name": "getTempCurso",
                "lineBegin": 113,
                "lineEnd": 115,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempCurso": {
                "name": "setTempCurso",
                "lineBegin": 117,
                "lineEnd": 119,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempCurso = tempCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_profesor": {
                "name": "getFk_id_profesor",
                "lineBegin": 66,
                "lineEnd": 68,
                "annotations": [],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_inscripcion": {
                "name": "getPk_id_inscripcion",
                "lineBegin": 54,
                "lineEnd": 56,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_inscripcion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCalif": {
                "name": "setCalif",
                "lineBegin": 77,
                "lineEnd": 79,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.calif = calif;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempProfesor": {
                "name": "setTempProfesor",
                "lineBegin": 109,
                "lineEnd": 111,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempProfesor = tempProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_grupo": {
                "name": "setFk_id_grupo",
                "lineBegin": 63,
                "lineEnd": 65,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_grupo = fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setAprobado": {
                "name": "setAprobado",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.aprobado = aprobado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempProfesor": {
                "name": "getTempProfesor",
                "lineBegin": 105,
                "lineEnd": 107,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getStTabla": {
                "name": "getStTabla",
                "lineBegin": 89,
                "lineEnd": 91,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_inscripcion": {
                "name": "setPk_id_inscripcion",
                "lineBegin": 57,
                "lineEnd": 59,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_inscripcion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_inscripcion = pk_id_inscripcion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCalif": {
                "name": "getCalif",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return calif;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setStTabla": {
                "name": "setStTabla",
                "lineBegin": 93,
                "lineEnd": 95,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.stTabla = stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempGrupo": {
                "name": "setTempGrupo",
                "lineBegin": 101,
                "lineEnd": 103,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempGrupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempGrupo = tempGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempGrupo": {
                "name": "getTempGrupo",
                "lineBegin": 97,
                "lineEnd": 99,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_profesor": {
                "name": "setFk_id_profesor",
                "lineBegin": 69,
                "lineEnd": 71,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_profesor = fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "isAprobado": {
                "name": "isAprobado",
                "lineBegin": 81,
                "lineEnd": 83,
                "annotations": [],
                "returnDataType": [
                    "Boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return aprobado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_grupo": {
                "name": "getFk_id_grupo",
                "lineBegin": 60,
                "lineEnd": 62,
                "annotations": [],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getTempCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempCurso = tempCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_inscripcion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_inscripcion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCalif",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.calif = calif;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempProfesor = tempProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_grupo = fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setAprobado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.aprobado = aprobado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_inscripcion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_inscripcion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_inscripcion = pk_id_inscripcion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCalif",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return calif;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.stTabla = stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempGrupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempGrupo = tempGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_profesor = fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "isAprobado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return aprobado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ConsultaInscripcionController": {
        "full_name": "com.cocay.sicecd.controller.ConsultaInscripcionController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 327,
        "short_name": "ConsultaInscripcionController",
        "src": "com.cocay.sicecd.controller.ConsultaInscripcionController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ConsultaInscripcionController",
                "variable": "controller",
                "lineBegin": 35,
                "lineEnd": 36
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "ins_rep",
                "lineBegin": 38,
                "lineEnd": 39
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesorRep",
                "lineBegin": 41,
                "lineEnd": 42
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "curso_rep",
                "lineBegin": 44,
                "lineEnd": 45
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupo_rep",
                "lineBegin": 47,
                "lineEnd": 48
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CertificadoRep",
                "variable": "certRep",
                "lineBegin": 50,
                "lineEnd": 51
            }
        ],
        "methods": {
            "consultaInscripciones": {
                "name": "consultaInscripciones",
                "lineBegin": 65,
                "lineEnd": 108,
                "annotations": [
                    "@RequestMapping(value = \"/consultaInscripciones\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_turno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso_acento",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_2",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    /* Datos del profesor */\r\n    String rfc = request.getParameter(\"rfc\").toUpperCase().trim();\r\n    String nombre = normalizar(request.getParameter(\"nombre\")).toUpperCase().trim();\r\n    String apellido_paterno = normalizar(request.getParameter(\"apellido_paterno\")).toUpperCase().trim();\r\n    Integer id_grado = Integer.parseInt(request.getParameter(\"grado_estudios\"));\r\n    Integer id_genero = Integer.parseInt(request.getParameter(\"genero\"));\r\n    Integer id_turno = Integer.parseInt(request.getParameter(\"turno\"));\r\n    /* Datos del curso */\r\n    String nombre_curso_acento = request.getParameter(\"nombre_curso\").toUpperCase().trim();\r\n    String nombre_curso = normalizar(nombre_curso_acento);\r\n    String clave_curso = request.getParameter(\"clave_curso\").toUpperCase().trim();\r\n    Integer id_tipo = Integer.parseInt(request.getParameter(\"tipos\"));\r\n    /* Datos del grupo */\r\n    String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r\n    /* Intervalo de tiempo */\r\n    String fecha_1 = request.getParameter(\"fecha_1\");\r\n    String fecha_2 = request.getParameter(\"fecha_2\");\r\n    List<Inscripcion> ins_profes = new ArrayList<Inscripcion>();\r\n    List<Inscripcion> ins_cursos_grupos = new ArrayList<Inscripcion>();\r\n    //Se obtienen las inscripciones pertenecientes al profesor buscado\r\n    ins_profes = obtenerInsProfes(rfc, nombre, apellido_paterno, id_grado, id_genero, id_turno);\r\n    //Se obtienen las inscripciones pertenecientes al curso y grupo buscado\r\n    ins_cursos_grupos = obtenerInsCursosGrupos(clave_curso, nombre_curso, id_tipo, clave_grupo, fecha_1, fecha_2);\r\n    //Merge entre cursos, grupos y profes\r\n    List<Inscripcion> inscripciones = obtenerIns(ins_cursos_grupos, ins_profes);\r\n    if (inscripciones != null || inscripciones.size() > 0) {\r\n        model.put(\"ins\", inscripciones);\r\n        model.put(\"controller\", controller);\r\n        return new ModelAndView(\"ConsultarInscripcion/muestraListaIns\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [],
                "exception": [
                    "ParseException"
                ]
            },
            "existeCertificado": {
                "name": "existeCertificado",
                "lineBegin": 274,
                "lineEnd": 283,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "boolean",
                        "variable": "res",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "certificado",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    boolean res = false;\r\n    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r\n    if (certificado != null) {\r\n        res = true;\r\n    }\r\n    return res;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "certRep",
                        "methodName": "findCertificado",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    }
                ],
                "exception": []
            },
            "obtenerIns": {
                "name": "obtenerIns",
                "lineBegin": 116,
                "lineEnd": 134,
                "annotations": [],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "ins_cursos_grupos",
                        "qualifedType": ""
                    },
                    {
                        "type": "List<Inscripcion>",
                        "variable": "ins_profes",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Inscripcion",
                        "variable": "ins",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Inscripcion> inscripciones = new ArrayList<Inscripcion>();\r\n    if (ins_cursos_grupos.size() > 0 && ins_profes.size() == 0) {\r\n        inscripciones = ins_cursos_grupos;\r\n    } else if (ins_cursos_grupos.size() == 0 && ins_profes.size() > 0) {\r\n        inscripciones = ins_profes;\r\n    } else {\r\n        for (Inscripcion ins : ins_cursos_grupos) {\r\n            if (ins_profes.contains(ins)) {\r\n                inscripciones.add(ins);\r\n            }\r\n        }\r\n    }\r\n    return inscripciones;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "normalizar": {
                "name": "normalizar",
                "lineBegin": 291,
                "lineEnd": 302,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    if (cadena == null) {\r\n        return \"\";\r\n    }\r\n    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r\n    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "formatoNombre": {
                "name": "formatoNombre",
                "lineBegin": 310,
                "lineEnd": 326,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "cadenas",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String nombre = \"\";\r\n    if (profesor.isBlank()) {\r\n        return nombre;\r\n    }\r\n    String[] cadenas = profesor.split(\" \");\r\n    for (int i = 0; i < cadenas.length - 1; i++) {\r\n        nombre += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r\n    }\r\n    nombre += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "obtenerInsCursosGrupos": {
                "name": "obtenerInsCursosGrupos",
                "lineBegin": 147,
                "lineEnd": 183,
                "annotations": [],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_inicio_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_inicio_2",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "SimpleDateFormat",
                        "variable": "format",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Inscripcion> ins = new ArrayList<Inscripcion>();\r\n    List<Curso> cursos = new ArrayList<Curso>();\r\n    List<Grupo> grupos = new ArrayList<Grupo>();\r\n    //Obteniendo cursos\r\n    if (id_tipo == 0) {\r\n        cursos = curso_rep.findByParams(nombre_curso, clave_curso);\r\n    } else {\r\n        cursos = curso_rep.findByParams(nombre_curso, clave_curso, id_tipo);\r\n    }\r\n    //Obteniendo grupos\r\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n    Date fecha_ini_1, fecha_ini_2;\r\n    if (fecha_inicio_1 != \"\" && fecha_inicio_2 != \"\") {\r\n        fecha_ini_1 = format.parse(fecha_inicio_1);\r\n        fecha_ini_2 = format.parse(fecha_inicio_2);\r\n        grupos = grupo_rep.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r\n        //} else if (clave_grupo != \"\"){\r\n    } else {\r\n        grupos = grupo_rep.findByClave(clave_grupo);\r\n    }\r\n    //Obteniendo inscripciones\r\n    for (Curso c : cursos) {\r\n        for (Grupo g : grupos) {\r\n            if (g.getFk_id_curso().getPk_id_curso() == c.getPk_id_curso()) {\r\n                ins.addAll(g.getInscripciones());\r\n            }\r\n        }\r\n    }\r\n    return ins;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "curso_rep",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "curso_rep",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupo_rep",
                        "methodName": "findByClave",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo_rep",
                        "methodName": "findByFechaInicio",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_curso()",
                        "methodName": "getPk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getPk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getInscripciones",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    }
                ],
                "exception": [
                    "ParseException"
                ]
            },
            "obtenerInsProfes": {
                "name": "obtenerInsProfes",
                "lineBegin": 197,
                "lineEnd": 252,
                "annotations": [],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_turno",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Inscripcion> ins_profes = new ArrayList<Inscripcion>();\r\n    List<Profesor> profesores = new ArrayList<Profesor>();\r\n    List<Profesor> profesores2 = new ArrayList<Profesor>();\r\n    //Caso: B\u00ef\u00bf\u00bdsqueda por RFC\r\n    if (rfc != \"\") {\r\n        Profesor p = profesorRep.findByRfc(rfc);\r\n        ins_profes.addAll(p.getInscripciones());\r\n        //Caso: B\u00ef\u00bf\u00bdsqueda por los filtros restantes\r\n    } else {\r\n        List<Profesor> profes = new ArrayList<Profesor>();\r\n        List<Profesor> profes2 = new ArrayList<Profesor>();\r\n        if (nombre != \"\" || apellido_paterno != \"\") {\r\n            profes = profesorRep.findByName(nombre, apellido_paterno);\r\n            profes2 = new ArrayList<Profesor>(profes);\r\n        }\r\n        //Filtrando por grado de estudios\r\n        if (id_grado != 5) {\r\n            for (Profesor p : profes2) {\r\n                if (p.getFk_id_grado_profesor().getPk_id_grado_profesor() != id_grado) {\r\n                    profes.remove(p);\r\n                }\r\n            }\r\n        }\r\n        //Filtrando por g\u00ef\u00bf\u00bdnero\r\n        if (id_genero != 3) {\r\n            for (Profesor p : profes2) {\r\n                if (p.getId_genero().getPk_id_genero() != id_genero) {\r\n                    profes.remove(p);\r\n                }\r\n            }\r\n        }\r\n        //Filtrando por turno\r\n        if (id_turno != 4) {\r\n            for (Profesor p : profes2) {\r\n                if (p.getFk_id_turno().getPk_id_turno() != id_turno) {\r\n                    profes.remove(p);\r\n                }\r\n            }\r\n        }\r\n        //Se agregan las inscripciones de cada uno de los profesores\r\n        for (Profesor p : profes) {\r\n            ins_profes.addAll(p.getInscripciones());\r\n        }\r\n    }\r\n    return ins_profes;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByName",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_grado_profesor()",
                        "methodName": "getPk_id_grado_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getId_genero",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getId_genero()",
                        "methodName": "getPk_id_genero",
                        "targetClassName": "com.cocay.sicecd.model.Genero"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getFk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getFk_id_turno()",
                        "methodName": "getPk_id_turno",
                        "targetClassName": "com.cocay.sicecd.model.Turno"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getInscripciones",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getInscripciones",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    }
                ],
                "exception": [
                    "ParseException"
                ]
            },
            "consultaCurso": {
                "name": "consultaCurso",
                "lineBegin": 53,
                "lineEnd": 56,
                "annotations": [
                    "@RequestMapping(value = \"/consultaInscripcion\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"ConsultarInscripcion/consultaInscripcion\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCertificado": {
                "name": "getCertificado",
                "lineBegin": 261,
                "lineEnd": 264,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Certificado",
                        "variable": "certificado",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r\n    return certificado.getPk_id_certificado();\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "certRep",
                        "methodName": "findCertificado",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    },
                    {
                        "scopeName": "certificado",
                        "methodName": "getPk_id_certificado",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.text.Normalizer",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CertificadoRep",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "curso_rep",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "curso_rep",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo_rep",
                "methodName": "findByClave",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo_rep",
                "methodName": "findByFechaInicio",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_curso()",
                "methodName": "getPk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getPk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "g",
                "methodName": "getInscripciones",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByName",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_grado_profesor()",
                "methodName": "getPk_id_grado_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grado_profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getId_genero",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getId_genero()",
                "methodName": "getPk_id_genero",
                "targetClassName": "com.cocay.sicecd.model.Genero"
            },
            {
                "scopeName": "p",
                "methodName": "getFk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getFk_id_turno()",
                "methodName": "getPk_id_turno",
                "targetClassName": "com.cocay.sicecd.model.Turno"
            },
            {
                "scopeName": "p",
                "methodName": "getInscripciones",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getInscripciones",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "certRep",
                "methodName": "findCertificado",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "certificado",
                "methodName": "getPk_id_certificado",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "certRep",
                "methodName": "findCertificado",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultaInscripciones",
                "annotations": [
                    "@RequestMapping(value = \"/consultaInscripciones\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    /* Datos del profesor */\r",
                    "    String rfc = request.getParameter(\"rfc\").toUpperCase().trim();\r",
                    "    String nombre = normalizar(request.getParameter(\"nombre\")).toUpperCase().trim();\r",
                    "    String apellido_paterno = normalizar(request.getParameter(\"apellido_paterno\")).toUpperCase().trim();\r",
                    "    Integer id_grado = Integer.parseInt(request.getParameter(\"grado_estudios\"));\r",
                    "    Integer id_genero = Integer.parseInt(request.getParameter(\"genero\"));\r",
                    "    Integer id_turno = Integer.parseInt(request.getParameter(\"turno\"));\r",
                    "    /* Datos del curso */\r",
                    "    String nombre_curso_acento = request.getParameter(\"nombre_curso\").toUpperCase().trim();\r",
                    "    String nombre_curso = normalizar(nombre_curso_acento);\r",
                    "    String clave_curso = request.getParameter(\"clave_curso\").toUpperCase().trim();\r",
                    "    Integer id_tipo = Integer.parseInt(request.getParameter(\"tipos\"));\r",
                    "    /* Datos del grupo */\r",
                    "    String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r",
                    "    /* Intervalo de tiempo */\r",
                    "    String fecha_1 = request.getParameter(\"fecha_1\");\r",
                    "    String fecha_2 = request.getParameter(\"fecha_2\");\r",
                    "    List<Inscripcion> ins_profes = new ArrayList<Inscripcion>();\r",
                    "    List<Inscripcion> ins_cursos_grupos = new ArrayList<Inscripcion>();\r",
                    "    //Se obtienen las inscripciones pertenecientes al profesor buscado\r",
                    "    ins_profes = obtenerInsProfes(rfc, nombre, apellido_paterno, id_grado, id_genero, id_turno);\r",
                    "    //Se obtienen las inscripciones pertenecientes al curso y grupo buscado\r",
                    "    ins_cursos_grupos = obtenerInsCursosGrupos(clave_curso, nombre_curso, id_tipo, clave_grupo, fecha_1, fecha_2);\r",
                    "    //Merge entre cursos, grupos y profes\r",
                    "    List<Inscripcion> inscripciones = obtenerIns(ins_cursos_grupos, ins_profes);\r",
                    "    if (inscripciones != null || inscripciones.size() > 0) {\r",
                    "        model.put(\"ins\", inscripciones);\r",
                    "        model.put(\"controller\", controller);\r",
                    "        return new ModelAndView(\"ConsultarInscripcion/muestraListaIns\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "existeCertificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    boolean res = false;\r",
                    "    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r",
                    "    if (certificado != null) {\r",
                    "        res = true;\r",
                    "    }\r",
                    "    return res;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "obtenerIns",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "ins_cursos_grupos",
                        "qualifedType": ""
                    },
                    {
                        "type": "List<Inscripcion>",
                        "variable": "ins_profes",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Inscripcion> inscripciones = new ArrayList<Inscripcion>();\r",
                    "    if (ins_cursos_grupos.size() > 0 && ins_profes.size() == 0) {\r",
                    "        inscripciones = ins_cursos_grupos;\r",
                    "    } else if (ins_cursos_grupos.size() == 0 && ins_profes.size() > 0) {\r",
                    "        inscripciones = ins_profes;\r",
                    "    } else {\r",
                    "        for (Inscripcion ins : ins_cursos_grupos) {\r",
                    "            if (ins_profes.contains(ins)) {\r",
                    "                inscripciones.add(ins);\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    return inscripciones;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "normalizar",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (cadena == null) {\r",
                    "        return \"\";\r",
                    "    }\r",
                    "    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r",
                    "    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formatoNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String nombre = \"\";\r",
                    "    if (profesor.isBlank()) {\r",
                    "        return nombre;\r",
                    "    }\r",
                    "    String[] cadenas = profesor.split(\" \");\r",
                    "    for (int i = 0; i < cadenas.length - 1; i++) {\r",
                    "        nombre += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r",
                    "    }\r",
                    "    nombre += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "obtenerInsCursosGrupos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_inicio_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_inicio_2",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Inscripcion> ins = new ArrayList<Inscripcion>();\r",
                    "    List<Curso> cursos = new ArrayList<Curso>();\r",
                    "    List<Grupo> grupos = new ArrayList<Grupo>();\r",
                    "    //Obteniendo cursos\r",
                    "    if (id_tipo == 0) {\r",
                    "        cursos = curso_rep.findByParams(nombre_curso, clave_curso);\r",
                    "    } else {\r",
                    "        cursos = curso_rep.findByParams(nombre_curso, clave_curso, id_tipo);\r",
                    "    }\r",
                    "    //Obteniendo grupos\r",
                    "    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r",
                    "    Date fecha_ini_1, fecha_ini_2;\r",
                    "    if (fecha_inicio_1 != \"\" && fecha_inicio_2 != \"\") {\r",
                    "        fecha_ini_1 = format.parse(fecha_inicio_1);\r",
                    "        fecha_ini_2 = format.parse(fecha_inicio_2);\r",
                    "        grupos = grupo_rep.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r",
                    "        //} else if (clave_grupo != \"\"){\r",
                    "    } else {\r",
                    "        grupos = grupo_rep.findByClave(clave_grupo);\r",
                    "    }\r",
                    "    //Obteniendo inscripciones\r",
                    "    for (Curso c : cursos) {\r",
                    "        for (Grupo g : grupos) {\r",
                    "            if (g.getFk_id_curso().getPk_id_curso() == c.getPk_id_curso()) {\r",
                    "                ins.addAll(g.getInscripciones());\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    return ins;\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "obtenerInsProfes",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_genero",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_turno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Inscripcion> ins_profes = new ArrayList<Inscripcion>();\r",
                    "    List<Profesor> profesores = new ArrayList<Profesor>();\r",
                    "    List<Profesor> profesores2 = new ArrayList<Profesor>();\r",
                    "    //Caso: B\u00ef\u00bf\u00bdsqueda por RFC\r",
                    "    if (rfc != \"\") {\r",
                    "        Profesor p = profesorRep.findByRfc(rfc);\r",
                    "        ins_profes.addAll(p.getInscripciones());\r",
                    "        //Caso: B\u00ef\u00bf\u00bdsqueda por los filtros restantes\r",
                    "    } else {\r",
                    "        List<Profesor> profes = new ArrayList<Profesor>();\r",
                    "        List<Profesor> profes2 = new ArrayList<Profesor>();\r",
                    "        if (nombre != \"\" || apellido_paterno != \"\") {\r",
                    "            profes = profesorRep.findByName(nombre, apellido_paterno);\r",
                    "            profes2 = new ArrayList<Profesor>(profes);\r",
                    "        }\r",
                    "        //Filtrando por grado de estudios\r",
                    "        if (id_grado != 5) {\r",
                    "            for (Profesor p : profes2) {\r",
                    "                if (p.getFk_id_grado_profesor().getPk_id_grado_profesor() != id_grado) {\r",
                    "                    profes.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        //Filtrando por g\u00ef\u00bf\u00bdnero\r",
                    "        if (id_genero != 3) {\r",
                    "            for (Profesor p : profes2) {\r",
                    "                if (p.getId_genero().getPk_id_genero() != id_genero) {\r",
                    "                    profes.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        //Filtrando por turno\r",
                    "        if (id_turno != 4) {\r",
                    "            for (Profesor p : profes2) {\r",
                    "                if (p.getFk_id_turno().getPk_id_turno() != id_turno) {\r",
                    "                    profes.remove(p);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        //Se agregan las inscripciones de cada uno de los profesores\r",
                    "        for (Profesor p : profes) {\r",
                    "            ins_profes.addAll(p.getInscripciones());\r",
                    "        }\r",
                    "    }\r",
                    "    return ins_profes;\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "consultaCurso",
                "annotations": [
                    "@RequestMapping(value = \"/consultaInscripcion\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"ConsultarInscripcion/consultaInscripcion\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCertificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Certificado certificado = certRep.findCertificado(id_profesor, id_curso, id_grupo);\r",
                    "    return certificado.getPk_id_certificado();\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ProcessorInscripcion": {
        "full_name": "com.cocay.sicecd.step.ProcessorInscripcion",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 84,
        "short_name": "ProcessorInscripcion",
        "src": "com.cocay.sicecd.step.ProcessorInscripcion",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "log",
                "lineBegin": 24,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesorRep",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "inscripcionRep",
                "lineBegin": 35,
                "lineEnd": 36
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 38,
                "lineEnd": 39
            }
        ],
        "methods": {
            "process": {
                "name": "process",
                "lineBegin": 41,
                "lineEnd": 83,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "Inscripcion"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Inscripcion",
                        "variable": "inscripcion",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "cdGrupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cdProfesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "Inscripcion",
                        "variable": "ins",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    System.out.println(\"Grupo: \" + inscripcion.getTempGrupo());\r\n    System.out.println(\"Curso: \" + inscripcion.getTempCurso());\r\n    System.out.println(\"Profesor: \" + inscripcion.getTempProfesor());\r\n    String cdGrupo = inscripcion.getTempGrupo();\r\n    String cdProfesor = inscripcion.getTempProfesor();\r\n    Curso curso = cursoRep.findByNombre(inscripcion.getTempCurso());\r\n    Grupo grupo = grupoRep.findByClaveGrupoIdCurso(cdGrupo, curso);\r\n    Profesor profesor = profesorRep.findByRfc(cdProfesor);\r\n    if (curso != null && grupo != null && profesor != null) {\r\n        inscripcion.setFk_id_grupo(grupo);\r\n        inscripcion.setFk_id_profesor(profesor);\r\n        inscripcion.setStTabla(1);\r\n        Inscripcion ins = inscripcionRep.findByP(cdProfesor);\r\n        if (ins != null) {\r\n            if (!ins.getTempGrupo().equals(cdGrupo)) {\r\n                return inscripcion;\r\n            } else {\r\n                String mensaje = \"El profesor con rfc: \" + cdProfesor + \" se encuentra inscrito en el grupo: \" + cdGrupo;\r\n                String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n                Query query = em.createNativeQuery(consulta);\r\n                query.executeUpdate();\r\n                return null;\r\n            }\r\n        } else {\r\n            return inscripcion;\r\n        }\r\n    } else {\r\n        String mensaje = \"Error al inscribir el profesor: \" + cdProfesor + \" en el grupo: \" + cdGrupo;\r\n        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n        Query query = em.createNativeQuery(consulta);\r\n        query.executeUpdate();\r\n        return null;\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempGrupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempCurso",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempProfesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempGrupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempProfesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "getTempCurso",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupoRep",
                        "methodName": "findByClaveGrupoIdCurso",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "setFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcion",
                        "methodName": "setStTabla",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inscripcionRep",
                        "methodName": "findByP",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getTempGrupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins.getTempGrupo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemProcessor<Inscripcion, Inscripcion>"
        ],
        "extends": [],
        "imports": [
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.item.ItemProcessor",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "inscripcion",
                "methodName": "getTempGrupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "getTempCurso",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "getTempProfesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "getTempGrupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "getTempProfesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "getTempCurso",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupoRep",
                "methodName": "findByClaveGrupoIdCurso",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "setFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcion",
                "methodName": "setStTabla",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inscripcionRep",
                "methodName": "findByP",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "ins",
                "methodName": "getTempGrupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins.getTempGrupo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "process",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Inscripcion",
                "parameters": [
                    {
                        "type": "Inscripcion",
                        "variable": "inscripcion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    System.out.println(\"Grupo: \" + inscripcion.getTempGrupo());\r",
                    "    System.out.println(\"Curso: \" + inscripcion.getTempCurso());\r",
                    "    System.out.println(\"Profesor: \" + inscripcion.getTempProfesor());\r",
                    "    String cdGrupo = inscripcion.getTempGrupo();\r",
                    "    String cdProfesor = inscripcion.getTempProfesor();\r",
                    "    Curso curso = cursoRep.findByNombre(inscripcion.getTempCurso());\r",
                    "    Grupo grupo = grupoRep.findByClaveGrupoIdCurso(cdGrupo, curso);\r",
                    "    Profesor profesor = profesorRep.findByRfc(cdProfesor);\r",
                    "    if (curso != null && grupo != null && profesor != null) {\r",
                    "        inscripcion.setFk_id_grupo(grupo);\r",
                    "        inscripcion.setFk_id_profesor(profesor);\r",
                    "        inscripcion.setStTabla(1);\r",
                    "        Inscripcion ins = inscripcionRep.findByP(cdProfesor);\r",
                    "        if (ins != null) {\r",
                    "            if (!ins.getTempGrupo().equals(cdGrupo)) {\r",
                    "                return inscripcion;\r",
                    "            } else {\r",
                    "                String mensaje = \"El profesor con rfc: \" + cdProfesor + \" se encuentra inscrito en el grupo: \" + cdGrupo;\r",
                    "                String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "                Query query = em.createNativeQuery(consulta);\r",
                    "                query.executeUpdate();\r",
                    "                return null;\r",
                    "            }\r",
                    "        } else {\r",
                    "            return inscripcion;\r",
                    "        }\r",
                    "    } else {\r",
                    "        String mensaje = \"Error al inscribir el profesor: \" + cdProfesor + \" en el grupo: \" + cdGrupo;\r",
                    "        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "        Query query = em.createNativeQuery(consulta);\r",
                    "        query.executeUpdate();\r",
                    "        return null;\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.InscripcionesController": {
        "full_name": "com.cocay.sicecd.controller.InscripcionesController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 134,
        "short_name": "InscripcionesController",
        "src": "com.cocay.sicecd.controller.InscripcionesController",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionRegistroManual\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profRep",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 39,
                "lineEnd": 40
            }
        ],
        "methods": {
            "agregarIns": {
                "name": "agregarIns",
                "lineBegin": 93,
                "lineEnd": 132,
                "annotations": [
                    "@RequestMapping(value = \"/registrarInscripcion\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "InscripcionDto",
                        "variable": "ins",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Inscripcion",
                        "variable": "inst",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupop",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "par",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profe",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cal",
                        "qualifedType": ""
                    },
                    {
                        "type": "Boolean",
                        "variable": "ap",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Inscripcion inst = new Inscripcion();\r\n    String grupo = ins.getIdGrupo();\r\n    Grupo grupop = grupoRep.findForClave(grupo);\r\n    String par = ins.getIdProfesor();\r\n    Profesor profe = profRep.findByRfc(par);\r\n    String cal = ins.getCalificacion();\r\n    Boolean ap = ins.isAprobado();\r\n    ArrayList<String> rfcs = new ArrayList<String>();\r\n    if (grupop.getFk_id_profesor() != null) {\r\n        System.out.println(\"Si encontre un profesor!!!!!!!!\");\r\n        rfcs.add(grupop.getFk_id_profesor().getRfc());\r\n    }\r\n    if (!rfcs.isEmpty() && rfcs.contains(profe.getRfc())) {\r\n        System.out.println(\"S\u00ef\u00bf\u00bd lo contengo! es:\");\r\n        System.out.println(profe.getRfc());\r\n        return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdEl participante ya hab\u00ef\u00bf\u00bda sido registrado con este grupo!\\\"}\");\r\n    }\r\n    inst.setFk_id_grupo(grupop);\r\n    inst.setFk_id_profesor(profe);\r\n    inst.setCalif(cal);\r\n    inst.setAprobado(ap);\r\n    log.setTrace(LogTypes.REGISTRAR_INSCRIPCION);\r\n    insRep.save(inst);\r\n    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdInscripcion agregada con exito!\\\"}\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "ins",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "grupoRep",
                        "methodName": "findForClave",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getCalificacion",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "isAprobado",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "grupop",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupop",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupop.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profe",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "inst",
                        "methodName": "setFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inst",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inst",
                        "methodName": "setCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "inst",
                        "methodName": "setAprobado",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "insRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    }
                ],
                "exception": []
            },
            "registrarInscripcion": {
                "name": "registrarInscripcion",
                "lineBegin": 42,
                "lineEnd": 91,
                "annotations": [
                    "@RequestMapping(value = \"/registrarInscripcion2\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "StringBuilder",
                        "variable": "sb1",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb2",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "nc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "re",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rep",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombresc",
                        "qualifedType": ""
                    },
                    {
                        "type": "InscripcionDto",
                        "variable": "in",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Grupo> list_p1 = grupoRep.findAll();\r\n    List<Profesor> list_p2 = profRep.findAll();\r\n    List<String> grupos = new ArrayList<String>();\r\n    List<String> rfcs = new ArrayList<String>();\r\n    StringBuilder sb1 = new StringBuilder();\r\n    StringBuilder sb2 = new StringBuilder();\r\n    StringBuilder nc = new StringBuilder();\r\n    for (Grupo g : list_p1) {\r\n        grupos.add(g.getClave());\r\n        sb1.append(g.getClave() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        rfcs.add(p.getRfc());\r\n        sb2.append(p.getRfc() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r\n        rfcs.add(nc.toString());\r\n    }\r\n    String re = sb1.toString();\r\n    sb1.setLength(re.length() - 1);\r\n    String rep = sb2.toString();\r\n    sb2.setLength(rep.length() - 1);\r\n    String nombresc = nc.toString();\r\n    nc.setLength(nombresc.length() - 1);\r\n    InscripcionDto in = new InscripcionDto();\r\n    in.setJsonG(sb1.toString());\r\n    in.setJsonP(sb2.toString());\r\n    in.setJsonNombres(nc.toString());\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"datos\", in);\r\n        return new ModelAndView(\"InscripcionesController/registrarInscripcion\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupoRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "re",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rep",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nombresc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "in",
                        "methodName": "setJsonG",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "in",
                        "methodName": "setJsonP",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "in",
                        "methodName": "setJsonNombres",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.http.MediaType",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "grupoRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "profRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "in",
                "methodName": "setJsonG",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "in",
                "methodName": "setJsonP",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "in",
                "methodName": "setJsonNombres",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "grupoRep",
                "methodName": "findForClave",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "profRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "ins",
                "methodName": "getCalificacion",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "ins",
                "methodName": "isAprobado",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "grupop",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupop",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupop.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profe",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "inst",
                "methodName": "setFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inst",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inst",
                "methodName": "setCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "inst",
                "methodName": "setAprobado",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "insRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "agregarIns",
                "annotations": [
                    "@RequestMapping(value = \"/registrarInscripcion\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "InscripcionDto",
                        "variable": "ins",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Inscripcion inst = new Inscripcion();\r",
                    "    String grupo = ins.getIdGrupo();\r",
                    "    Grupo grupop = grupoRep.findForClave(grupo);\r",
                    "    String par = ins.getIdProfesor();\r",
                    "    Profesor profe = profRep.findByRfc(par);\r",
                    "    String cal = ins.getCalificacion();\r",
                    "    Boolean ap = ins.isAprobado();\r",
                    "    ArrayList<String> rfcs = new ArrayList<String>();\r",
                    "    if (grupop.getFk_id_profesor() != null) {\r",
                    "        System.out.println(\"Si encontre un profesor!!!!!!!!\");\r",
                    "        rfcs.add(grupop.getFk_id_profesor().getRfc());\r",
                    "    }\r",
                    "    if (!rfcs.isEmpty() && rfcs.contains(profe.getRfc())) {\r",
                    "        System.out.println(\"S\u00ef\u00bf\u00bd lo contengo! es:\");\r",
                    "        System.out.println(profe.getRfc());\r",
                    "        return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdEl participante ya hab\u00ef\u00bf\u00bda sido registrado con este grupo!\\\"}\");\r",
                    "    }\r",
                    "    inst.setFk_id_grupo(grupop);\r",
                    "    inst.setFk_id_profesor(profe);\r",
                    "    inst.setCalif(cal);\r",
                    "    inst.setAprobado(ap);\r",
                    "    log.setTrace(LogTypes.REGISTRAR_INSCRIPCION);\r",
                    "    insRep.save(inst);\r",
                    "    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdInscripcion agregada con exito!\\\"}\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "registrarInscripcion",
                "annotations": [
                    "@RequestMapping(value = \"/registrarInscripcion2\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Grupo> list_p1 = grupoRep.findAll();\r",
                    "    List<Profesor> list_p2 = profRep.findAll();\r",
                    "    List<String> grupos = new ArrayList<String>();\r",
                    "    List<String> rfcs = new ArrayList<String>();\r",
                    "    StringBuilder sb1 = new StringBuilder();\r",
                    "    StringBuilder sb2 = new StringBuilder();\r",
                    "    StringBuilder nc = new StringBuilder();\r",
                    "    for (Grupo g : list_p1) {\r",
                    "        grupos.add(g.getClave());\r",
                    "        sb1.append(g.getClave() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        rfcs.add(p.getRfc());\r",
                    "        sb2.append(p.getRfc() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r",
                    "        rfcs.add(nc.toString());\r",
                    "    }\r",
                    "    String re = sb1.toString();\r",
                    "    sb1.setLength(re.length() - 1);\r",
                    "    String rep = sb2.toString();\r",
                    "    sb2.setLength(rep.length() - 1);\r",
                    "    String nombresc = nc.toString();\r",
                    "    nc.setLength(nombresc.length() - 1);\r",
                    "    InscripcionDto in = new InscripcionDto();\r",
                    "    in.setJsonG(sb1.toString());\r",
                    "    in.setJsonP(sb2.toString());\r",
                    "    in.setJsonNombres(nc.toString());\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"datos\", in);\r",
                    "        return new ModelAndView(\"InscripcionesController/registrarInscripcion\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ModificarInscripcion": {
        "full_name": "com.cocay.sicecd.controller.ModificarInscripcion",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 234,
        "short_name": "ModificarInscripcion",
        "src": "com.cocay.sicecd.controller.ModificarInscripcion",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionModificaciones\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "proRep",
                "lineBegin": 63,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 66,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grRep",
                "lineBegin": 69,
                "lineEnd": 70
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "crRep",
                "lineBegin": 72,
                "lineEnd": 73
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "genRep",
                "lineBegin": 75,
                "lineEnd": 76
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 78,
                "lineEnd": 79
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 81,
                "lineEnd": 82
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tcRep",
                "lineBegin": 84,
                "lineEnd": 85
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tnRep",
                "lineBegin": 87,
                "lineEnd": 88
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 90,
                "lineEnd": 91
            }
        ],
        "methods": {
            "editarInsc": {
                "name": "editarInsc",
                "lineBegin": 170,
                "lineEnd": 232,
                "annotations": [
                    "@PostMapping(value = \"/editarinscripcion\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "InscripcionDto",
                        "variable": "ins",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "Inscripcion",
                        "variable": "mod",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "gpo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupop",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "pro",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    int id = Integer.parseInt(ins.getIdentificador());\r\n    Inscripcion mod = insRep.findById(id).get();\r\n    String cambios = \"\";\r\n    if (mod.getCalif() == null) {\r\n        mod.setCalif(ins.getCalificacion());\r\n    } else {\r\n        if (!mod.getCalif().equals(ins.getCalificacion())) {\r\n            mod.setCalif(ins.getCalificacion());\r\n        }\r\n    }\r\n    Grupo gpo = grRep.findForClave(ins.getIdGrupo());\r\n    if (gpo != null) {\r\n        if (!mod.getFk_id_grupo().getClave().equals(ins.getIdGrupo())) {\r\n            mod.setFk_id_grupo(gpo);\r\n        }\r\n    }\r\n    String grupo = ins.getIdGrupo();\r\n    Grupo grupop = grRep.findForClave(grupo);\r\n    ArrayList<String> rfcs = new ArrayList<String>();\r\n    if (grupop.getFk_id_profesor() != null) {\r\n        rfcs.add(grupop.getFk_id_profesor().getRfc());\r\n    }\r\n    Profesor pro = proRep.findByRfc(ins.getIdProfesor());\r\n    if (!rfcs.isEmpty() && rfcs.contains(pro.getRfc())) {\r\n        System.out.println(\"S\u00ef\u00bf\u00bd lo contengo! es:\");\r\n        System.out.println(pro.getRfc());\r\n        return ResponseEntity.ok(\"Error : El participante ya habia sido registrado con este grupo\");\r\n    }\r\n    if (pro != null) {\r\n        if (!mod.getFk_id_profesor().getNombre().equals(ins.getIdProfesor())) {\r\n            mod.setFk_id_profesor(pro);\r\n        }\r\n    } else {\r\n        return ResponseEntity.status(HttpStatus.FORBIDDEN).body(\"\u00ef\u00bf\u00bdAsesor no encontrado!\");\r\n    }\r\n    mod.setAprobado(ins.isAprobado());\r\n    System.out.println(cambios);\r\n    log.setTrace(LogTypes.MODIFICAR_INSCRIPCION);\r\n    if (!cambios.equals(\"\")) {\r\n        insRep.save(mod);\r\n    }\r\n    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdInscripcion editada con exito!\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "ins",
                        "methodName": "getIdentificador",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "insRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    },
                    {
                        "scopeName": "insRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getCalificacion",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "mod.getCalif()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getCalificacion",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getCalificacion",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "grRep",
                        "methodName": "findForClave",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "mod.getFk_id_grupo()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFk_id_grupo().getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "grRep",
                        "methodName": "findForClave",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grupop",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupop",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupop.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "pro",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "getIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "mod.getFk_id_profesor()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFk_id_profesor().getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "ins",
                        "methodName": "isAprobado",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setAprobado",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "insRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    }
                ],
                "exception": []
            },
            "consultarInscripciones": {
                "name": "consultarInscripciones",
                "lineBegin": 97,
                "lineEnd": 108,
                "annotations": [
                    "@RequestMapping(value = \"/listaInscripciones\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Inscripcion> list_p1 = insRep.findAll();\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"inscripciones\", list_p1);\r\n        return new ModelAndView(\"ModificarUsuario/listaInscripciones\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "insRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    }
                ],
                "exception": []
            },
            "formEditarInscripcion": {
                "name": "formEditarInscripcion",
                "lineBegin": 110,
                "lineEnd": 168,
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionI\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Inscripcion",
                        "variable": "cambio",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb1",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb2",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "nc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "re",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rep",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombresc",
                        "qualifedType": ""
                    },
                    {
                        "type": "InscripcionDto",
                        "variable": "insi",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Inscripcion cambio = insRep.findById(id).get();\r\n    List<Grupo> list_p1 = grRep.findAll();\r\n    List<Profesor> list_p2 = proRep.findAll();\r\n    List<String> grupos = new ArrayList<String>();\r\n    List<String> rfcs = new ArrayList<String>();\r\n    StringBuilder sb1 = new StringBuilder();\r\n    StringBuilder sb2 = new StringBuilder();\r\n    StringBuilder nc = new StringBuilder();\r\n    for (Grupo g : list_p1) {\r\n        grupos.add(g.getClave());\r\n        sb1.append(g.getClave() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        rfcs.add(p.getRfc());\r\n        sb2.append(p.getRfc() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r\n        rfcs.add(nc.toString());\r\n    }\r\n    String re = sb1.toString();\r\n    sb1.setLength(re.length() - 1);\r\n    String rep = sb2.toString();\r\n    sb2.setLength(rep.length() - 1);\r\n    String nombresc = nc.toString();\r\n    nc.setLength(nombresc.length() - 1);\r\n    InscripcionDto insi = new InscripcionDto();\r\n    insi.setIdentificador(Integer.toString(cambio.getPk_id_inscripcion()));\r\n    insi.setCalificacion(cambio.getCalif());\r\n    insi.setAprobado(cambio.isAprobado());\r\n    insi.setIdGrupo(cambio.getFk_id_grupo().getClave());\r\n    insi.setIdProfesor(cambio.getFk_id_profesor().getRfc());\r\n    insi.setJsonG(sb1.toString());\r\n    insi.setJsonP(sb2.toString());\r\n    insi.setJsonNombres(nc.toString());\r\n    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionI\");\r\n    model.addObject(\"inscripcion\", insi);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "insRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    },
                    {
                        "scopeName": "insRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    },
                    {
                        "scopeName": "grRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "re",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rep",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nombresc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getPk_id_inscripcion",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setIdentificador",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getCalif",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setCalificacion",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "isAprobado",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setAprobado",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "cambio.getFk_id_grupo()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "cambio",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "cambio.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setIdProfesor",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setJsonG",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setJsonP",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "insi",
                        "methodName": "setJsonNombres",
                        "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Calendar",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "java.util.stream.Collectors",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "insRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "insRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "insRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "grRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "proRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cambio",
                "methodName": "getPk_id_inscripcion",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "insi",
                "methodName": "setIdentificador",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "insi",
                "methodName": "setCalificacion",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "isAprobado",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "insi",
                "methodName": "setAprobado",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "cambio.getFk_id_grupo()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "insi",
                "methodName": "setIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "cambio",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "cambio.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "insi",
                "methodName": "setIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "insi",
                "methodName": "setJsonG",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "insi",
                "methodName": "setJsonP",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "insi",
                "methodName": "setJsonNombres",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdentificador",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "insRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "insRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "mod",
                "methodName": "getCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "getCalificacion",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "mod.getCalif()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "getCalificacion",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "getCalificacion",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setCalif",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "grRep",
                "methodName": "findForClave",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "mod.getFk_id_grupo()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFk_id_grupo().getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "grRep",
                "methodName": "findForClave",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupop",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupop",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupop.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "proRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "pro",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "pro",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "ins",
                "methodName": "getIdProfesor",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "mod.getFk_id_profesor()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFk_id_profesor().getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "ins",
                "methodName": "isAprobado",
                "targetClassName": "com.cocay.sicecd.dto.InscripcionDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setAprobado",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "insRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "editarInsc",
                "annotations": [
                    "@PostMapping(value = \"/editarinscripcion\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "InscripcionDto",
                        "variable": "ins",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    int id = Integer.parseInt(ins.getIdentificador());\r",
                    "    Inscripcion mod = insRep.findById(id).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (mod.getCalif() == null) {\r",
                    "        mod.setCalif(ins.getCalificacion());\r",
                    "    } else {\r",
                    "        if (!mod.getCalif().equals(ins.getCalificacion())) {\r",
                    "            mod.setCalif(ins.getCalificacion());\r",
                    "        }\r",
                    "    }\r",
                    "    Grupo gpo = grRep.findForClave(ins.getIdGrupo());\r",
                    "    if (gpo != null) {\r",
                    "        if (!mod.getFk_id_grupo().getClave().equals(ins.getIdGrupo())) {\r",
                    "            mod.setFk_id_grupo(gpo);\r",
                    "        }\r",
                    "    }\r",
                    "    String grupo = ins.getIdGrupo();\r",
                    "    Grupo grupop = grRep.findForClave(grupo);\r",
                    "    ArrayList<String> rfcs = new ArrayList<String>();\r",
                    "    if (grupop.getFk_id_profesor() != null) {\r",
                    "        rfcs.add(grupop.getFk_id_profesor().getRfc());\r",
                    "    }\r",
                    "    Profesor pro = proRep.findByRfc(ins.getIdProfesor());\r",
                    "    if (!rfcs.isEmpty() && rfcs.contains(pro.getRfc())) {\r",
                    "        System.out.println(\"S\u00ef\u00bf\u00bd lo contengo! es:\");\r",
                    "        System.out.println(pro.getRfc());\r",
                    "        return ResponseEntity.ok(\"Error : El participante ya habia sido registrado con este grupo\");\r",
                    "    }\r",
                    "    if (pro != null) {\r",
                    "        if (!mod.getFk_id_profesor().getNombre().equals(ins.getIdProfesor())) {\r",
                    "            mod.setFk_id_profesor(pro);\r",
                    "        }\r",
                    "    } else {\r",
                    "        return ResponseEntity.status(HttpStatus.FORBIDDEN).body(\"\u00ef\u00bf\u00bdAsesor no encontrado!\");\r",
                    "    }\r",
                    "    mod.setAprobado(ins.isAprobado());\r",
                    "    System.out.println(cambios);\r",
                    "    log.setTrace(LogTypes.MODIFICAR_INSCRIPCION);\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        insRep.save(mod);\r",
                    "    }\r",
                    "    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdInscripcion editada con exito!\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultarInscripciones",
                "annotations": [
                    "@RequestMapping(value = \"/listaInscripciones\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Inscripcion> list_p1 = insRep.findAll();\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"inscripciones\", list_p1);\r",
                    "        return new ModelAndView(\"ModificarUsuario/listaInscripciones\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formEditarInscripcion",
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionI\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Inscripcion cambio = insRep.findById(id).get();\r",
                    "    List<Grupo> list_p1 = grRep.findAll();\r",
                    "    List<Profesor> list_p2 = proRep.findAll();\r",
                    "    List<String> grupos = new ArrayList<String>();\r",
                    "    List<String> rfcs = new ArrayList<String>();\r",
                    "    StringBuilder sb1 = new StringBuilder();\r",
                    "    StringBuilder sb2 = new StringBuilder();\r",
                    "    StringBuilder nc = new StringBuilder();\r",
                    "    for (Grupo g : list_p1) {\r",
                    "        grupos.add(g.getClave());\r",
                    "        sb1.append(g.getClave() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        rfcs.add(p.getRfc());\r",
                    "        sb2.append(p.getRfc() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r",
                    "        rfcs.add(nc.toString());\r",
                    "    }\r",
                    "    String re = sb1.toString();\r",
                    "    sb1.setLength(re.length() - 1);\r",
                    "    String rep = sb2.toString();\r",
                    "    sb2.setLength(rep.length() - 1);\r",
                    "    String nombresc = nc.toString();\r",
                    "    nc.setLength(nombresc.length() - 1);\r",
                    "    InscripcionDto insi = new InscripcionDto();\r",
                    "    insi.setIdentificador(Integer.toString(cambio.getPk_id_inscripcion()));\r",
                    "    insi.setCalificacion(cambio.getCalif());\r",
                    "    insi.setAprobado(cambio.isAprobado());\r",
                    "    insi.setIdGrupo(cambio.getFk_id_grupo().getClave());\r",
                    "    insi.setIdProfesor(cambio.getFk_id_profesor().getRfc());\r",
                    "    insi.setJsonG(sb1.toString());\r",
                    "    insi.setJsonP(sb2.toString());\r",
                    "    insi.setJsonNombres(nc.toString());\r",
                    "    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionI\");\r",
                    "    model.addObject(\"inscripcion\", insi);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.InscripcionRep": {
        "full_name": "com.cocay.sicecd.repo.InscripcionRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 39,
        "short_name": "InscripcionRep",
        "src": "com.cocay.sicecd.repo.InscripcionRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findIDGroup": {
                "name": "findIDGroup",
                "lineBegin": 33,
                "lineEnd": 34,
                "annotations": [
                    "@Query(\"select  u.fk_id_grupo from Inscripcion u inner join u.fk_id_grupo ar where ar.clave =:clave\")"
                ],
                "returnDataType": [
                    "Inscripcion"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByP": {
                "name": "findByP",
                "lineBegin": 36,
                "lineEnd": 37,
                "annotations": [
                    "@Query(\"SELECT i FROM Inscripcion i where i.tempProfesor = :tempProfesor \")"
                ],
                "returnDataType": [
                    "Inscripcion"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findAll": {
                "name": "findAll",
                "lineBegin": 20,
                "lineEnd": 21,
                "annotations": [
                    "@Query(value = \"SELECT * FROM inscripcion\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "saveI": {
                "name": "saveI",
                "lineBegin": 27,
                "lineEnd": 30,
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Inscripcion (fk_id_grupo,fk_id_profesor,calif,aprobado) VALUES (:fk_id_grupo,:fk_id_profesor,:calif,:aprobado)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    },
                    {
                        "type": "boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Inscripcion, Integer>"
        ],
        "imports": [
            "java.util.Date",
            "java.util.List",
            "org.springframework.data.jpa.repository.Modifying",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "org.springframework.transaction.annotation.Transactional",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findIDGroup",
                "annotations": [
                    "@Query(\"select  u.fk_id_grupo from Inscripcion u inner join u.fk_id_grupo ar where ar.clave =:clave\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Inscripcion",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByP",
                "annotations": [
                    "@Query(\"SELECT i FROM Inscripcion i where i.tempProfesor = :tempProfesor \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Inscripcion",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findAll",
                "annotations": [
                    "@Query(value = \"SELECT * FROM inscripcion\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "saveI",
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Inscripcion (fk_id_grupo,fk_id_profesor,calif,aprobado) VALUES (:fk_id_grupo,:fk_id_profesor,:calif,:aprobado)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    },
                    {
                        "type": "boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.InscripcionDto": {
        "full_name": "com.cocay.sicecd.dto.InscripcionDto",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 114,
        "short_name": "InscripcionDto",
        "src": "com.cocay.sicecd.dto.InscripcionDto",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "identificador",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "idGrupo",
                "lineBegin": 7,
                "lineEnd": 7
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "idProfesor",
                "lineBegin": 9,
                "lineEnd": 9
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "calificacion",
                "lineBegin": 11,
                "lineEnd": 11
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "Boolean",
                "variable": "aprobado",
                "lineBegin": 13,
                "lineEnd": 13
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonG",
                "lineBegin": 15,
                "lineEnd": 15
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonP",
                "lineBegin": 17,
                "lineEnd": 17
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "calif",
                "lineBegin": 19,
                "lineEnd": 19
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonNombres",
                "lineBegin": 21,
                "lineEnd": 21
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "temp_curso",
                "lineBegin": 23,
                "lineEnd": 23
            }
        ],
        "methods": {
            "getJsonG": {
                "name": "getJsonG",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonG;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCalificacion": {
                "name": "getCalificacion",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return calificacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdGrupo": {
                "name": "setIdGrupo",
                "lineBegin": 29,
                "lineEnd": 31,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idGrupo = idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdentificador": {
                "name": "setIdentificador",
                "lineBegin": 61,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "identificador",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.identificador = identificador;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCalif": {
                "name": "setCalif",
                "lineBegin": 69,
                "lineEnd": 71,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.calif = calif;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdGrupo": {
                "name": "getIdGrupo",
                "lineBegin": 25,
                "lineEnd": 27,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdentificador": {
                "name": "getIdentificador",
                "lineBegin": 57,
                "lineEnd": 59,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return identificador;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setAprobado": {
                "name": "setAprobado",
                "lineBegin": 93,
                "lineEnd": 95,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.aprobado = aprobado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonG": {
                "name": "setJsonG",
                "lineBegin": 77,
                "lineEnd": 79,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonG",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonG = jsonG;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCalif": {
                "name": "getCalif",
                "lineBegin": 65,
                "lineEnd": 67,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return calif;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdProfesor": {
                "name": "getIdProfesor",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTemp_curso": {
                "name": "getTemp_curso",
                "lineBegin": 105,
                "lineEnd": 107,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return temp_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonP": {
                "name": "setJsonP",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonP",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonP = jsonP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getAprobado": {
                "name": "getAprobado",
                "lineBegin": 89,
                "lineEnd": 91,
                "annotations": [],
                "returnDataType": [
                    "Boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return aprobado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "isAprobado": {
                "name": "isAprobado",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return aprobado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonNombres": {
                "name": "setJsonNombres",
                "lineBegin": 101,
                "lineEnd": 103,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonNombres",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonNombres = jsonNombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonP": {
                "name": "getJsonP",
                "lineBegin": 81,
                "lineEnd": 83,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdProfesor": {
                "name": "setIdProfesor",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "idProfesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idProfesor = idProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCalificacion": {
                "name": "setCalificacion",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "calificacion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.calificacion = calificacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonNombres": {
                "name": "getJsonNombres",
                "lineBegin": 97,
                "lineEnd": 99,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonNombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTemp_curso": {
                "name": "setTemp_curso",
                "lineBegin": 109,
                "lineEnd": 111,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "temp_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.temp_curso = temp_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getJsonG",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonG;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCalificacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return calificacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idGrupo = idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdentificador",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "identificador",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.identificador = identificador;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCalif",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "calif",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.calif = calif;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdentificador",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return identificador;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setAprobado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.aprobado = aprobado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonG",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonG",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonG = jsonG;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCalif",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return calif;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTemp_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return temp_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonP",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonP = jsonP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getAprobado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return aprobado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "isAprobado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return aprobado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonNombres",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonNombres = jsonNombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "idProfesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idProfesor = idProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCalificacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "calificacion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.calificacion = calificacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonNombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTemp_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "temp_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.temp_curso = temp_curso;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Certificado": {
        "full_name": "com.cocay.sicecd.model.Certificado",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 93,
        "short_name": "Certificado",
        "src": "com.cocay.sicecd.model.Certificado",
        "annotations": [
            "@Entity",
            "@Table(name = \"Certificado\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_certificado\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_certificado",
                "lineBegin": 19,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Column(name = \"ruta\", nullable = false, length = 250, unique = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "ruta",
                "lineBegin": 24,
                "lineEnd": 25
            },
            {
                "annotations": [
                    "@Column(name = \"tiempo_creado\", nullable = false)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "long",
                "variable": "tiempo_creado",
                "lineBegin": 27,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Profesor.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_profesor\", referencedColumnName = \"pk_id_profesor\", nullable = false)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Profesor",
                "variable": "fk_id_profesor",
                "lineBegin": 30,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Curso.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_curso\", referencedColumnName = \"pk_id_curso\", nullable = false)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Curso",
                "variable": "fk_id_curso",
                "lineBegin": 35,
                "lineEnd": 38
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Grupo.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_grupo\", referencedColumnName = \"pk_id_grupo\", nullable = false)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Grupo",
                "variable": "fk_id_grupo",
                "lineBegin": 40,
                "lineEnd": 43
            }
        ],
        "methods": {
            "getPk_id_certificado": {
                "name": "getPk_id_certificado",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_certificado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTiempo_creado": {
                "name": "getTiempo_creado",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "long"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return this.tiempo_creado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_curso": {
                "name": "getFk_id_curso",
                "lineBegin": 69,
                "lineEnd": 71,
                "annotations": [],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRuta": {
                "name": "getRuta",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return ruta;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_profesor": {
                "name": "getFk_id_profesor",
                "lineBegin": 61,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_curso": {
                "name": "setFk_id_curso",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Curso",
                        "variable": "fk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_curso = fk_id_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_profesor": {
                "name": "setFk_id_profesor",
                "lineBegin": 65,
                "lineEnd": 67,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_profesor = fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_grupo": {
                "name": "setFk_id_grupo",
                "lineBegin": 81,
                "lineEnd": 83,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_grupo = fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRuta": {
                "name": "setRuta",
                "lineBegin": 57,
                "lineEnd": 59,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ruta",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.ruta = ruta;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_grupo": {
                "name": "getFk_id_grupo",
                "lineBegin": 77,
                "lineEnd": 79,
                "annotations": [],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTiempo_creado": {
                "name": "setTiempo_creado",
                "lineBegin": 89,
                "lineEnd": 91,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "long",
                        "variable": "tiempo_creado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tiempo_creado = tiempo_creado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_certificado": {
                "name": "setPk_id_certificado",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_certificado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_certificado = pk_id_certificado;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getPk_id_certificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_certificado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTiempo_creado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "long",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return this.tiempo_creado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRuta",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return ruta;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Curso",
                        "variable": "fk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_curso = fk_id_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_profesor = fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_grupo = fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRuta",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ruta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.ruta = ruta;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTiempo_creado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "long",
                        "variable": "tiempo_creado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tiempo_creado = tiempo_creado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_certificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_certificado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_certificado = pk_id_certificado;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.DescargasController": {
        "full_name": "com.cocay.sicecd.controller.DescargasController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 98,
        "short_name": "DescargasController",
        "src": "com.cocay.sicecd.controller.DescargasController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "_incripcion",
                "lineBegin": 28,
                "lineEnd": 29
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "_profesor",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CertificadoRep",
                "variable": "_certificado",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Value(\"${path_constancia}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "path",
                "lineBegin": 34,
                "lineEnd": 35
            },
            {
                "annotations": [
                    "@Value(\"${ws.ruta_local}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "path2",
                "lineBegin": 36,
                "lineEnd": 37
            }
        ],
        "methods": {
            "show": {
                "name": "show",
                "lineBegin": 39,
                "lineEnd": 97,
                "annotations": [
                    "@RequestMapping(\"descargas\")",
                    "@ResponseBody"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletResponse",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "file",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "certificado",
                        "qualifedType": ""
                    },
                    {
                        "type": "BufferedOutputStream",
                        "variable": "bos",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileInputStream",
                        "variable": "fis",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "len",
                        "qualifedType": ""
                    },
                    {
                        "type": "byte[]",
                        "variable": "buf",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String file = \"\";\r\n    Profesor profesor = null;\r\n    Certificado certificado = null;\r\n    switch(tipo) {\r\n        case \"comprobante\":\r\n            profesor = _profesor.findById(id).get();\r\n            file = profesor.getComprobante_doc();\r\n            break;\r\n        case \"rfc\":\r\n            profesor = _profesor.findById(id).get();\r\n            file = profesor.getRfc_doc();\r\n            break;\r\n        case \"curp\":\r\n            profesor = _profesor.findById(id).get();\r\n            file = profesor.getCurp_doc();\r\n            break;\r\n        case \"certificado\":\r\n            profesor = _profesor.findById(id).get();\r\n            file = profesor.getCertificado_doc();\r\n            break;\r\n        case \"certificadoqr\":\r\n            certificado = _certificado.findById(id).get();\r\n            file = certificado.getRuta();\r\n            break;\r\n    }\r\n    response.setContentType(\"application/pdf\");\r\n    response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + (new File(file)).getName());\r\n    response.setHeader(\"Content-Transfer-Encoding\", \"binary\");\r\n    try {\r\n        BufferedOutputStream bos = new BufferedOutputStream(response.getOutputStream());\r\n        FileInputStream fis = null;\r\n        if (tipo.equals(\"certificadoqr\")) {\r\n            System.out.println(\"[ENTRA]----\" + file);\r\n            fis = new FileInputStream(file);\r\n        } else {\r\n            //luisos\r\n            fis = new FileInputStream(path + profesor.getPk_id_profesor() + \"/\" + file);\r\n        }\r\n        int len;\r\n        byte[] buf = new byte[1024];\r\n        while ((len = fis.read(buf)) > 0) {\r\n            bos.write(buf, 0, len);\r\n        }\r\n        bos.close();\r\n        response.flushBuffer();\r\n        fis.close();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "getComprobante_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getRfc_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCurp_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getCertificado_doc",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "certificado",
                        "methodName": "getRuta",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "bos",
                        "methodName": "write",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fis",
                        "methodName": "read",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bos",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fis",
                        "methodName": "close",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.BufferedOutputStream",
            "java.io.File",
            "java.io.FileInputStream",
            "java.io.IOException",
            "javax.servlet.http.HttpServletResponse",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.stereotype.Controller",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.bind.annotation.ResponseBody",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CertificadoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "profesor",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "show",
                "annotations": [
                    "@RequestMapping(\"descargas\")",
                    "@ResponseBody"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletResponse",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String file = \"\";\r",
                    "    Profesor profesor = null;\r",
                    "    Certificado certificado = null;\r",
                    "    switch(tipo) {\r",
                    "        case \"comprobante\":\r",
                    "            profesor = _profesor.findById(id).get();\r",
                    "            file = profesor.getComprobante_doc();\r",
                    "            break;\r",
                    "        case \"rfc\":\r",
                    "            profesor = _profesor.findById(id).get();\r",
                    "            file = profesor.getRfc_doc();\r",
                    "            break;\r",
                    "        case \"curp\":\r",
                    "            profesor = _profesor.findById(id).get();\r",
                    "            file = profesor.getCurp_doc();\r",
                    "            break;\r",
                    "        case \"certificado\":\r",
                    "            profesor = _profesor.findById(id).get();\r",
                    "            file = profesor.getCertificado_doc();\r",
                    "            break;\r",
                    "        case \"certificadoqr\":\r",
                    "            certificado = _certificado.findById(id).get();\r",
                    "            file = certificado.getRuta();\r",
                    "            break;\r",
                    "    }\r",
                    "    response.setContentType(\"application/pdf\");\r",
                    "    response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + (new File(file)).getName());\r",
                    "    response.setHeader(\"Content-Transfer-Encoding\", \"binary\");\r",
                    "    try {\r",
                    "        BufferedOutputStream bos = new BufferedOutputStream(response.getOutputStream());\r",
                    "        FileInputStream fis = null;\r",
                    "        if (tipo.equals(\"certificadoqr\")) {\r",
                    "            System.out.println(\"[ENTRA]----\" + file);\r",
                    "            fis = new FileInputStream(file);\r",
                    "        } else {\r",
                    "            //luisos\r",
                    "            fis = new FileInputStream(path + profesor.getPk_id_profesor() + \"/\" + file);\r",
                    "        }\r",
                    "        int len;\r",
                    "        byte[] buf = new byte[1024];\r",
                    "        while ((len = fis.read(buf)) > 0) {\r",
                    "            bos.write(buf, 0, len);\r",
                    "        }\r",
                    "        bos.close();\r",
                    "        response.flushBuffer();\r",
                    "        fis.close();\r",
                    "    } catch (IOException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ClienteCertificadoController": {
        "full_name": "com.cocay.sicecd.controller.ClienteCertificadoController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 174,
        "short_name": "ClienteCertificadoController",
        "src": "com.cocay.sicecd.controller.ClienteCertificadoController",
        "annotations": [
            "@Controller",
            "@PropertySource(ignoreResourceNotFound = true, value = \"classpath:application-cert.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Value(\"${ws.ruta_local}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "RUTA_LOCAL",
                "lineBegin": 48,
                "lineEnd": 49
            },
            {
                "annotations": [
                    "@Value(\"${ws.clave}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 50,
                "lineEnd": 51
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CertificadoRep",
                "variable": "bd_certificado",
                "lineBegin": 52,
                "lineEnd": 53
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "bd_profesor",
                "lineBegin": 54,
                "lineEnd": 55
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "bd_curso",
                "lineBegin": 56,
                "lineEnd": 57
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "bd_grupo",
                "lineBegin": 58,
                "lineEnd": 59
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 60,
                "lineEnd": 61
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Url_wsRep",
                "variable": "urls",
                "lineBegin": 62,
                "lineEnd": 63
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 64,
                "lineEnd": 64
            }
        ],
        "methods": {
            "procesaCertificado": {
                "name": "procesaCertificado",
                "lineBegin": 147,
                "lineEnd": 172,
                "annotations": [
                    "@RequestMapping(value = \"/certificadoRes\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    //String correo = request.getParameter(\"correo\");\r\n    //poner correo\r\n    Profesor profesor = bd_profesor.findByCorreo(\"georgenarvaez@hotmail.com\");\r\n    Curso curso = null;\r\n    for (Curso c : bd_curso.findAll()) {\r\n        if (c.getClave().equals(\"00A\")) {\r\n            //poner clave\r\n            curso = c;\r\n            break;\r\n        }\r\n    }\r\n    Grupo grupo = null;\r\n    for (Grupo g : bd_grupo.findAll()) {\r\n        if (g.getClave().equals(\"00A\")) {\r\n            //poner clave\r\n            grupo = g;\r\n            break;\r\n        }\r\n    }\r\n    String path = obtenCertificado(profesor, curso, grupo);\r\n    if (path != null) {\r\n        model.addAttribute(\"mensaje\", path);\r\n    } else {\r\n        model.addAttribute(\"mensaje\", \"No se encontro el certificado!\");\r\n    }\r\n    return \"Certificado/resultado\";\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "bd_profesor",
                        "methodName": "findByCorreo",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "bd_curso",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "bd_grupo",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "aux_obten": {
                "name": "aux_obten",
                "lineBegin": 66,
                "lineEnd": 117,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "URL_RS",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "cert",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpClient",
                        "variable": "client",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpPost",
                        "variable": "post",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpResponse",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "BufferedReader",
                        "variable": "rd",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "jsonText",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "linea",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "string_pdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "byte[]",
                        "variable": "bytearray",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "out",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "os",
                        "qualifedType": ""
                    },
                    {
                        "type": "SeguridadPDF",
                        "variable": "spdf",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombrec",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String correo = profesor.getCorreo();\r\n    String nombre_curso = curso.getClave() + \"_\" + grupo.getClave();\r\n    Certificado cert = new Certificado();\r\n    cert.setFk_id_curso(curso);\r\n    cert.setFk_id_grupo(grupo);\r\n    cert.setFk_id_profesor(profesor);\r\n    HttpClient client = HttpClients.createDefault();\r\n    HttpPost post = new HttpPost(URL_RS);\r\n    List<NameValuePair> params = new ArrayList<NameValuePair>(3);\r\n    params.add(new BasicNameValuePair(\"clave\", clave));\r\n    params.add(new BasicNameValuePair(\"email\", correo));\r\n    params.add(new BasicNameValuePair(\"nc\", nombre_curso));\r\n    post.setEntity(new UrlEncodedFormEntity(params, \"UTF-8\"));\r\n    HttpResponse response = client.execute(post);\r\n    BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\r\n    String jsonText = \"\";\r\n    String linea = null;\r\n    while ((linea = rd.readLine()) != null) {\r\n        //System.out.println(linea);\r\n        jsonText += linea;\r\n    }\r\n    JSONObject json = new JSONObject(jsonText);\r\n    String mensaje = (String) json.get(\"mensaje\");\r\n    if (!mensaje.equals(\"NULL\")) {\r\n        //log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de 1 solicitadas\");\r\n        return null;\r\n    }\r\n    String string_pdf = (String) json.get(\"bytespdf\");\r\n    byte[] bytearray = java.util.Base64.getDecoder().decode(string_pdf);\r\n    String codigo = curso.getClave() + \"_\" + grupo.getClave();\r\n    String path = RUTA_LOCAL + codigo + \"/\" + codigo + \"_\" + profesor.getPk_id_profesor() + \".pdf\";\r\n    File out = new File(path);\r\n    new File(out.getParent()).mkdirs();\r\n    try (FileOutputStream os = new FileOutputStream(out)) {\r\n        os.write(bytearray);\r\n        // System.out.println(\"Archivo escrito!\");\r\n    } catch (Exception e) {\r\n        LOGGER.error(e.getMessage());\r\n        //System.out.println(e);\r\n    }\r\n    SeguridadPDF spdf = new SeguridadPDF();\r\n    String nombrec = profesor.getNombre() + \" \" + profesor.getApellido_paterno() + \" \" + profesor.getApellido_materno();\r\n    spdf.cifraPdf(path, nombrec, codigo);\r\n    cert.setTiempo_creado(Long.parseLong((String) json.get(\"tiempo\")));\r\n    cert.setRuta(path);\r\n    bd_certificado.save(cert);\r\n    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"1 constancia nueva extra\u00ef\u00bf\u00bdda de 1 solicitada\");\r\n    return path;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "post",
                        "methodName": "setEntity",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "client",
                        "methodName": "execute",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "response",
                        "methodName": "getEntity",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "response.getEntity()",
                        "methodName": "getContent",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rd",
                        "methodName": "readLine",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mensaje",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "out",
                        "methodName": "getParent",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "os",
                        "methodName": "write",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "spdf",
                        "methodName": "cifraPdf",
                        "targetClassName": "com.cocay.sicecd.security.pdf.SeguridadPDF"
                    },
                    {
                        "scopeName": "json",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setTiempo_creado",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setRuta",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "bd_certificado",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "obtenCertificado": {
                "name": "obtenCertificado",
                "lineBegin": 127,
                "lineEnd": 140,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "resultado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Url_ws",
                        "variable": "u",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    LinkedList<Url_ws> links = new LinkedList<>(urls.findSimples());\r\n    if (links.size() == 0) {\r\n        throw new Exception(\"No hay urls!\");\r\n    }\r\n    for (Url_ws u : links) {\r\n        String resultado = aux_obten(profesor, curso, grupo, u.getUrl());\r\n        if (resultado != null) {\r\n            return resultado;\r\n        }\r\n    }\r\n    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de 1 solicitadas\");\r\n    return null;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "urls",
                        "methodName": "findSimples",
                        "targetClassName": "com.cocay.sicecd.repo.Url_wsRep"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "muestra": {
                "name": "muestra",
                "lineBegin": 142,
                "lineEnd": 145,
                "annotations": [
                    "@RequestMapping(value = \"/certificado\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"Certificado/certificado\";\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws",
            "com.cocay.sicecd.repo.CertificadoRep",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_wsRep",
            "com.cocay.sicecd.security.pdf.SeguridadPDF",
            "com.cocay.sicecd.service.Logging",
            "java.io.BufferedReader",
            "java.io.InputStreamReader",
            "java.util.ArrayList",
            "java.util.LinkedList",
            "java.util.List",
            "java.io.File",
            "java.io.FileOutputStream",
            "javax.servlet.http.HttpServletRequest",
            "org.apache.http.HttpResponse",
            "org.apache.http.NameValuePair",
            "org.apache.http.client.HttpClient",
            "org.apache.http.client.entity.UrlEncodedFormEntity",
            "org.apache.http.client.methods.HttpPost",
            "org.apache.http.impl.client.HttpClients",
            "org.apache.http.message.BasicNameValuePair",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.json",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.ClienteCertificadoController"
            },
            {
                "scopeName": "profesor",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "curso",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "grupo",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "curso",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "grupo",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "profesor",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "spdf",
                "methodName": "cifraPdf",
                "targetClassName": "com.cocay.sicecd.security.pdf.SeguridadPDF"
            },
            {
                "scopeName": "cert",
                "methodName": "setTiempo_creado",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setRuta",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "bd_certificado",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "urls",
                "methodName": "findSimples",
                "targetClassName": "com.cocay.sicecd.repo.Url_wsRep"
            },
            {
                "scopeName": "u",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "bd_profesor",
                "methodName": "findByCorreo",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "bd_curso",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "bd_grupo",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "procesaCertificado",
                "annotations": [
                    "@RequestMapping(value = \"/certificadoRes\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    //String correo = request.getParameter(\"correo\");\r",
                    "    //poner correo\r",
                    "    Profesor profesor = bd_profesor.findByCorreo(\"georgenarvaez@hotmail.com\");\r",
                    "    Curso curso = null;\r",
                    "    for (Curso c : bd_curso.findAll()) {\r",
                    "        if (c.getClave().equals(\"00A\")) {\r",
                    "            //poner clave\r",
                    "            curso = c;\r",
                    "            break;\r",
                    "        }\r",
                    "    }\r",
                    "    Grupo grupo = null;\r",
                    "    for (Grupo g : bd_grupo.findAll()) {\r",
                    "        if (g.getClave().equals(\"00A\")) {\r",
                    "            //poner clave\r",
                    "            grupo = g;\r",
                    "            break;\r",
                    "        }\r",
                    "    }\r",
                    "    String path = obtenCertificado(profesor, curso, grupo);\r",
                    "    if (path != null) {\r",
                    "        model.addAttribute(\"mensaje\", path);\r",
                    "    } else {\r",
                    "        model.addAttribute(\"mensaje\", \"No se encontro el certificado!\");\r",
                    "    }\r",
                    "    return \"Certificado/resultado\";\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "aux_obten",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "URL_RS",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String correo = profesor.getCorreo();\r",
                    "    String nombre_curso = curso.getClave() + \"_\" + grupo.getClave();\r",
                    "    Certificado cert = new Certificado();\r",
                    "    cert.setFk_id_curso(curso);\r",
                    "    cert.setFk_id_grupo(grupo);\r",
                    "    cert.setFk_id_profesor(profesor);\r",
                    "    HttpClient client = HttpClients.createDefault();\r",
                    "    HttpPost post = new HttpPost(URL_RS);\r",
                    "    List<NameValuePair> params = new ArrayList<NameValuePair>(3);\r",
                    "    params.add(new BasicNameValuePair(\"clave\", clave));\r",
                    "    params.add(new BasicNameValuePair(\"email\", correo));\r",
                    "    params.add(new BasicNameValuePair(\"nc\", nombre_curso));\r",
                    "    post.setEntity(new UrlEncodedFormEntity(params, \"UTF-8\"));\r",
                    "    HttpResponse response = client.execute(post);\r",
                    "    BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));\r",
                    "    String jsonText = \"\";\r",
                    "    String linea = null;\r",
                    "    while ((linea = rd.readLine()) != null) {\r",
                    "        //System.out.println(linea);\r",
                    "        jsonText += linea;\r",
                    "    }\r",
                    "    JSONObject json = new JSONObject(jsonText);\r",
                    "    String mensaje = (String) json.get(\"mensaje\");\r",
                    "    if (!mensaje.equals(\"NULL\")) {\r",
                    "        //log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de 1 solicitadas\");\r",
                    "        return null;\r",
                    "    }\r",
                    "    String string_pdf = (String) json.get(\"bytespdf\");\r",
                    "    byte[] bytearray = java.util.Base64.getDecoder().decode(string_pdf);\r",
                    "    String codigo = curso.getClave() + \"_\" + grupo.getClave();\r",
                    "    String path = RUTA_LOCAL + codigo + \"/\" + codigo + \"_\" + profesor.getPk_id_profesor() + \".pdf\";\r",
                    "    File out = new File(path);\r",
                    "    new File(out.getParent()).mkdirs();\r",
                    "    try (FileOutputStream os = new FileOutputStream(out)) {\r",
                    "        os.write(bytearray);\r",
                    "        // System.out.println(\"Archivo escrito!\");\r",
                    "    } catch (Exception e) {\r",
                    "        LOGGER.error(e.getMessage());\r",
                    "        //System.out.println(e);\r",
                    "    }\r",
                    "    SeguridadPDF spdf = new SeguridadPDF();\r",
                    "    String nombrec = profesor.getNombre() + \" \" + profesor.getApellido_paterno() + \" \" + profesor.getApellido_materno();\r",
                    "    spdf.cifraPdf(path, nombrec, codigo);\r",
                    "    cert.setTiempo_creado(Long.parseLong((String) json.get(\"tiempo\")));\r",
                    "    cert.setRuta(path);\r",
                    "    bd_certificado.save(cert);\r",
                    "    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"1 constancia nueva extra\u00ef\u00bf\u00bdda de 1 solicitada\");\r",
                    "    return path;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "obtenCertificado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    LinkedList<Url_ws> links = new LinkedList<>(urls.findSimples());\r",
                    "    if (links.size() == 0) {\r",
                    "        throw new Exception(\"No hay urls!\");\r",
                    "    }\r",
                    "    for (Url_ws u : links) {\r",
                    "        String resultado = aux_obten(profesor, curso, grupo, u.getUrl());\r",
                    "        if (resultado != null) {\r",
                    "            return resultado;\r",
                    "        }\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de 1 solicitadas\");\r",
                    "    return null;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "muestra",
                "annotations": [
                    "@RequestMapping(value = \"/certificado\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"Certificado/certificado\";\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.CertificadoMasivoController": {
        "full_name": "com.cocay.sicecd.controller.CertificadoMasivoController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 371,
        "short_name": "CertificadoMasivoController",
        "src": "com.cocay.sicecd.controller.CertificadoMasivoController",
        "annotations": [
            "@Component",
            "@PropertySource(ignoreResourceNotFound = true, value = \"classpath:application-cert.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Value(\"${ws.ruta_local}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "RUTA_LOCAL",
                "lineBegin": 55,
                "lineEnd": 56
            },
            {
                "annotations": [
                    "@Value(\"${ws.temp_zip}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "TEMP_ZIP",
                "lineBegin": 57,
                "lineEnd": 58
            },
            {
                "annotations": [
                    "@Value(\"${ws.clave}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 59,
                "lineEnd": 60
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CertificadoRep",
                "variable": "bd_certificado",
                "lineBegin": 61,
                "lineEnd": 62
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "bd_profesor",
                "lineBegin": 63,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "bd_curso",
                "lineBegin": 65,
                "lineEnd": 66
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "bd_grupo",
                "lineBegin": 67,
                "lineEnd": 68
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 69,
                "lineEnd": 70
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Url_wsRep",
                "variable": "urls",
                "lineBegin": 71,
                "lineEnd": 72
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 73,
                "lineEnd": 73
            }
        ],
        "methods": {
            "scheduleTaskWithCronExpression": {
                "name": "scheduleTaskWithCronExpression",
                "lineBegin": 294,
                "lineEnd": 370,
                "annotations": [
                    "@Transactional",
                    "@Scheduled(cron = \"${ws.scheduleTransfer}\")"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "JSONObject",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "nuevas",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "actual",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "k",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "caux",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "gaux",
                        "qualifedType": ""
                    },
                    {
                        "type": "Inscripcion",
                        "variable": "i",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "nuevas2",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "actual2",
                        "qualifedType": ""
                    },
                    {
                        "type": "int[]",
                        "variable": "x",
                        "qualifedType": ""
                    },
                    {
                        "type": "Url_ws",
                        "variable": "u",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    LinkedList<Url_ws> links = new LinkedList<>(urls.findVarios());\r\n    if (links.size() == 0) {\r\n        LOGGER.debug(\"No hay urls!\");\r\n        //throw new Exception(\"No hay urls!\");\r\n        return;\r\n    }\r\n    JSONObject json = new JSONObject();\r\n    LinkedList<Profesor> profesores = new LinkedList<>(bd_profesor.findAll());\r\n    if (profesores.size() == 0) {\r\n        LOGGER.info(\"No hay profesores\");\r\n        return;\r\n    }\r\n    int nuevas = 0;\r\n    int actual = 0;\r\n    System.out.println(\"A punto de buscar profesores.\");\r\n    int k = 0;\r\n    for (Profesor p : profesores) {\r\n        LinkedList<Certificado> cert = new LinkedList<>(p.getCertificados());\r\n        if (cert.size() == 0) {\r\n            LinkedList<Inscripcion> ins = new LinkedList<>(p.getInscripciones());\r\n            if (ins.size() == 0) {\r\n                System.out.println(\"No hay inscripciones asociadas!\");\r\n                continue;\r\n            }\r\n            for (Inscripcion i : ins) {\r\n                // int fkc = i.getFk_id_grupo().getFk_id_curso();\r\n                // Curso caux = bd_curso.findByID(fkc);\r\n                Curso caux = i.getFk_id_grupo().getFk_id_curso();\r\n                Grupo gaux = i.getFk_id_grupo();\r\n                // if(!caux.getNombre().equals(\"COSDAC 2018\")) {\r\n                // continue;\r\n                // }\r\n                System.out.println(\"**\\n\" + p.getCorreo() + \"\\n\" + caux.getNombre() + \"\\n**\");\r\n                json.put(\"correo\" + k, p.getCorreo());\r\n                json.put(\"id_curso\" + k, caux.getClave() + \"_\" + gaux.getClave());\r\n                json.put(\"tiempo\" + k, 0);\r\n                System.out.println(\"Se insertaron elementos en el JSON (certificados no presentes)\");\r\n                nuevas++;\r\n                k++;\r\n            }\r\n            continue;\r\n        }\r\n        for (Certificado c : cert) {\r\n            String codigo = c.getFk_id_curso().getClave() + \"_\" + c.getFk_id_grupo().getClave();\r\n            //System.out.println(\"**\\n\" + p.getCorreo() + \"\\n\" + c.getFk_id_curso().getNombre() + \"\\n**\");\r\n            json.put(\"correo\" + k, p.getCorreo());\r\n            json.put(\"id_curso\" + k, codigo);\r\n            json.put(\"tiempo\" + k, c.getTiempo_creado());\r\n            System.out.println(\"Se insertaron elementos en el JSON (certificadospresentes)\");\r\n            actual++;\r\n            k++;\r\n        }\r\n    }\r\n    json.put(\"cuenta\", k);\r\n    int nuevas2 = 0;\r\n    int actual2 = 0;\r\n    for (Url_ws u : links) {\r\n        System.out.println(\"Intentando con \" + u.getUrl());\r\n        int[] x = extraccionPorURL(u.getUrl(), json);\r\n        nuevas2 += x[0];\r\n        actual2 += x[1];\r\n    }\r\n    // if (nuevas != 0) {\r\n    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, nuevas2 + \" constancias nuevas extra\u00ef\u00bf\u00bddas de \" + nuevas + \"solicitadas\");\r\n    // }\r\n    // if (actual != 0) {\r\n    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_ACTUALIZACION, actual2 + \"constancias actualizadas de \" + actual + \"solicitadas\");\r\n    // }\r\n    // tarea completada*/\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "urls",
                        "methodName": "findVarios",
                        "targetClassName": "com.cocay.sicecd.repo.Url_wsRep"
                    },
                    {
                        "scopeName": "bd_profesor",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCertificados",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getInscripciones",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "i",
                        "methodName": "getFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "i.getFk_id_grupo()",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "i",
                        "methodName": "getFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Inscripcion"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "caux",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "caux",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "gaux",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "c.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "c.getFk_id_grupo()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getTiempo_creado",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json",
                        "methodName": "put",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "u",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "extraccionPorURL": {
                "name": "extraccionPorURL",
                "lineBegin": 81,
                "lineEnd": 262,
                "annotations": [],
                "returnDataType": [
                    "int[]"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "URL_RSM",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "json",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "HttpClient",
                        "variable": "client",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpPost",
                        "variable": "post",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpResponse",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "BufferedReader",
                        "variable": "rd",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "jsonText",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "linea",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "json_r",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "msg",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mns",
                        "qualifedType": ""
                    },
                    {
                        "type": "byte[]",
                        "variable": "bytearray",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "tempdir",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "pathF",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "pathOut",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "pathAux",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "out",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "os",
                        "qualifedType": ""
                    },
                    {
                        "type": "byte[]",
                        "variable": "buffer",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "tmp",
                        "qualifedType": ""
                    },
                    {
                        "type": "ZipFile",
                        "variable": "zpf",
                        "qualifedType": ""
                    },
                    {
                        "type": "ZipEntry",
                        "variable": "ze",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fileName",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "newFile",
                        "qualifedType": ""
                    },
                    {
                        "type": "BufferedInputStream",
                        "variable": "bis",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "fos",
                        "qualifedType": ""
                    },
                    {
                        "type": "BufferedOutputStream",
                        "variable": "bos",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "len",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "nuevas2",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "actual2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "ars",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "gg",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "ggg",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "ar",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "pt",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileInputStream",
                        "variable": "fs",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "aux",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "os",
                        "qualifedType": ""
                    },
                    {
                        "type": "Certificado",
                        "variable": "cert",
                        "qualifedType": ""
                    },
                    {
                        "type": "long",
                        "variable": "tt",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "f3",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "f2",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "f",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    HttpClient client = HttpClients.createDefault();\r\n    HttpPost post = new HttpPost(URL_RSM);\r\n    // System.out.println(json.toString());\r\n    List<NameValuePair> params = new ArrayList<NameValuePair>(2);\r\n    params.add(new BasicNameValuePair(\"json\", json.toString()));\r\n    params.add(new BasicNameValuePair(\"clave\", clave));\r\n    post.setEntity(new UrlEncodedFormEntity(params, \"UTF-8\"));\r\n    // esperar respuesta\r\n    HttpResponse response = client.execute(post);\r\n    // BufferedReader rd = new BufferedReader(new\r\n    // InputStreamReader(response.getEntity().getContent(), \"ISO_8859_1\"));\r\n    BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), \"UTF-8\"));\r\n    String jsonText = \"\";\r\n    String linea = null;\r\n    while ((linea = rd.readLine()) != null) {\r\n        // System.out.println(linea);\r\n        jsonText += linea;\r\n    }\r\n    JSONObject json_r = null;\r\n    try {\r\n        json_r = new JSONObject(jsonText);\r\n    } catch (Exception e) {\r\n        LOGGER.error(e.getMessage());\r\n        //System.out.println(jsonText);\r\n        return new int[] { 0, 0 };\r\n    }\r\n    // JSONObject json_r = new JSONObject(jsonText);\r\n    String msg = (String) json_r.get(\"mensaje\");\r\n    //System.out.println(msg);\r\n    // msg = new\r\n    // String(java.util.Base64.getDecoder().decode(msg),Charset.forName(\"UTF-8\"));\r\n    if (!msg.equals(\"NULL\")) {\r\n        /*\r\n\t\t\t * System.out.println(\"No hay certificados nuevos!\");\r\n\t\t\t * log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS,\r\n\t\t\t * \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de \" + nuevas + \" solicitadas\");\r\n\t\t\t * log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_ACTUALIZACION,\r\n\t\t\t * \"0 constancias actualizadas de \" + actual + \" solicitadas\");\r\n\t\t\t */\r\n        return new int[] { 0, 0 };\r\n    }\r\n    String mns = (String) json_r.get(\"zip\");\r\n    // System.out.println(mns);\r\n    byte[] bytearray = java.util.Base64.getDecoder().decode(mns);\r\n    String path = RUTA_LOCAL + \"certificados.zip\";\r\n    File tempdir = Paths.get(RUTA_LOCAL).normalize().toFile();\r\n    if (!tempdir.exists()) {\r\n        tempdir.mkdirs();\r\n    }\r\n    String pathF = \"\", pathOut = \"\", pathAux = \"\";\r\n    File out = new File(path);\r\n    pathOut = out.getAbsolutePath();\r\n    try (FileOutputStream os = new FileOutputStream(out)) {\r\n        os.write(bytearray);\r\n        System.out.println(\"Archivo escrito!\");\r\n    } catch (Exception e) {\r\n        LOGGER.error(e.getMessage());\r\n        System.out.println(e);\r\n    }\r\n    byte[] buffer = new byte[1024];\r\n    File tmp = Paths.get(TEMP_ZIP).normalize().toFile();\r\n    if (!tmp.exists()) {\r\n        tmp.mkdirs();\r\n    }\r\n    try {\r\n        ZipFile zpf = new ZipFile(out, Charset.forName(\"Cp437\"));\r\n        Enumeration<? extends ZipEntry> e = zpf.entries();\r\n        ZipEntry ze;\r\n        // System.out.println(\"PASE\");\r\n        while (e.hasMoreElements()) {\r\n            ze = (ZipEntry) e.nextElement();\r\n            String fileName = ze.getName();\r\n            File newFile = new File(TEMP_ZIP + fileName);\r\n            new File(newFile.getParent()).mkdirs();\r\n            BufferedInputStream bis = new BufferedInputStream(zpf.getInputStream(ze));\r\n            FileOutputStream fos = new FileOutputStream(newFile);\r\n            BufferedOutputStream bos = new BufferedOutputStream(fos);\r\n            int len;\r\n            while ((len = bis.read(buffer, 0, 1024)) != -1) {\r\n                fos.write(buffer, 0, len);\r\n                // System.out.println(\"Escribiendo\");\r\n            }\r\n            bos.flush();\r\n            bos.close();\r\n            bis.close();\r\n        }\r\n        zpf.close();\r\n    } catch (java.util.zip.ZipException zx) {\r\n        LOGGER.error(\"Zip file is empty!\");\r\n        out = null;\r\n        delete(pathOut);\r\n        //System.out.println(\"Zip file is empty!\");\r\n        return new int[] { 0, 0 };\r\n    } catch (Exception e) {\r\n        LOGGER.error(e.getMessage());\r\n        out = null;\r\n        delete(pathOut);\r\n        //System.out.println(e);\r\n        //e.printStackTrace();\r\n        return new int[] { 0, 0 };\r\n    }\r\n    int nuevas2 = 0;\r\n    int actual2 = 0;\r\n    // comienza a mover los pdfs a la ruta elegida\r\n    for (File f : tmp.listFiles()) {\r\n        String[] ars = f.getName().split(\"_\");\r\n        Curso c = bd_curso.findByUniqueClave(ars[0]);\r\n        //clave del grupo\r\n        String gg = ars[1];\r\n        //se obtiene el grupo\r\n        Grupo g = null;\r\n        for (Grupo ggg : c.getGrupos()) {\r\n            if (ggg.getClave().equals(gg)) {\r\n                g = ggg;\r\n            }\r\n        }\r\n        //se obtiene el codigo completo\r\n        String codigo = c.getClave() + \"_\" + g.getClave();\r\n        //Curso c = bd_curso.findByID(Integer.parseInt(f.getName()));\r\n        // Curso c = bd_curso.findByNombre(f.getName());\r\n        JSONObject ar = new JSONObject(json_r.get(f.getName()).toString());\r\n        for (File f2 : f.listFiles()) {\r\n            Profesor p = bd_profesor.findByCorreo(f2.getName());\r\n            for (File f3 : f2.listFiles()) {\r\n                // +\r\n                String pt = RUTA_LOCAL + codigo + \"/\" + codigo + \"_\" + p.getPk_id_profesor() + \".pdf\";\r\n                // f3.getName();\r\n                FileInputStream fs = new FileInputStream(f3);\r\n                File aux = new File(pt);\r\n                new File(aux.getParent()).mkdirs();\r\n                if (aux.exists()) {\r\n                    pathAux = aux.getAbsolutePath();\r\n                    aux = null;\r\n                    delete(pathAux);\r\n                }\r\n                try (FileOutputStream os = new FileOutputStream(aux)) {\r\n                    os.write(fs.readAllBytes());\r\n                } catch (Exception e) {\r\n                    LOGGER.error(e.getMessage());\r\n                    System.out.println(e);\r\n                }\r\n                /**\r\n                 * \t\t\t\t\tSeguridadPDF spdf = new SeguridadPDF();\r\n                 * \t\t\t\t\tString nombrec = p.getNombre() + \" \" + p.getApellido_paterno() + \" \" + p.getApellido_materno();\r\n                 * \t\t\t\t\tspdf.cifraPdf(pt, nombrec, codigo);\r\n                 * \t\t\t\t\t/**\r\n                 */\r\n                // elimina archivo\r\n                f3 = null;\r\n                Certificado cert = bd_certificado.findByRuta(pt);\r\n                if (cert == null) {\r\n                    System.out.println(\"insertando nuevo certificado!\");\r\n                    cert = new Certificado();\r\n                    nuevas2++;\r\n                } else {\r\n                    actual2++;\r\n                }\r\n                // Certificado cert = new Certificado();\r\n                cert.setRuta(pt);\r\n                long tt = Long.parseLong((String) ar.get(p.getCorreo()));\r\n                cert.setTiempo_creado(tt);\r\n                cert.setFk_id_curso(c);\r\n                cert.setFk_id_grupo(g);\r\n                cert.setFk_id_profesor(p);\r\n                bd_certificado.save(cert);\r\n                fs.close();\r\n            }\r\n            // elimina directorio (usuario)\r\n            f2 = null;\r\n        }\r\n        pathF = f.getAbsolutePath();\r\n        // elimina directorio padre (curso)\r\n        f = null;\r\n    }\r\n    // elimina zip\r\n    out = null;\r\n    /**/\r\n    delete(pathF);\r\n    delete(pathOut);\r\n    return new int[] { nuevas2, actual2 };\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "post",
                        "methodName": "setEntity",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "client",
                        "methodName": "execute",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "response",
                        "methodName": "getEntity",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "response.getEntity()",
                        "methodName": "getContent",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rd",
                        "methodName": "readLine",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json_r",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "msg",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json_r",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "tempdir",
                        "methodName": "exists",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "tempdir",
                        "methodName": "mkdirs",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "out",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "os",
                        "methodName": "write",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "tmp",
                        "methodName": "exists",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "tmp",
                        "methodName": "mkdirs",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "zpf",
                        "methodName": "entries",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "ze",
                        "methodName": "getName",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "newFile",
                        "methodName": "getParent",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "zpf",
                        "methodName": "getInputStream",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fos",
                        "methodName": "write",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bis",
                        "methodName": "read",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bos",
                        "methodName": "flush",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bos",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bis",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "zpf",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "getName",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f.getName()",
                        "methodName": "split",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bd_curso",
                        "methodName": "findByUniqueClave",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "ggg",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "ggg.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getGrupos",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "f",
                        "methodName": "getName",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json_r",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "json_r.get(f.getName())",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f2",
                        "methodName": "getName",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bd_profesor",
                        "methodName": "findByCorreo",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "aux",
                        "methodName": "getParent",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "aux",
                        "methodName": "exists",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "aux",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fs",
                        "methodName": "readAllBytes",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "os",
                        "methodName": "write",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "bd_certificado",
                        "methodName": "findByRuta",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setRuta",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "ar",
                        "methodName": "get",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setTiempo_creado",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "cert",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Certificado"
                    },
                    {
                        "scopeName": "bd_certificado",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
                    },
                    {
                        "scopeName": "fs",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f2",
                        "methodName": "listFiles",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "listFiles",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "tmp",
                        "methodName": "listFiles",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "deleteBach": {
                "name": "deleteBach",
                "lineBegin": 284,
                "lineEnd": 288,
                "annotations": [
                    "@Scheduled(cron = \"${ws.scheduleClean}\")"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    LOGGER.debug(\"Batch Clean:  PDF Temporary Files\");\r\n    delete(RUTA_LOCAL, \"_ax.pdf\");\r\n}",
                "methodInvocations": [],
                "exception": [
                    "Exception"
                ]
            },
            "delete": {
                "name": "delete",
                "lineBegin": 268,
                "lineEnd": 282,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "prefix",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "File",
                        "variable": "f",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "c",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    if (path == null || path.equals(\"\")) {\r\n        return;\r\n    }\r\n    File f = new File(path);\r\n    if (f.isDirectory()) {\r\n        for (File c : f.listFiles()) delete(c.getAbsolutePath(), prefix);\r\n    }\r\n    if (f.getAbsolutePath().endsWith(prefix)) {\r\n        if (!f.delete()) {\r\n            LOGGER.error(\"Error deleting: \" + f.getAbsolutePath());\r\n        }\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "f",
                        "methodName": "isDirectory",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "listFiles",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f.getAbsolutePath()",
                        "methodName": "endsWith",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "f",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws",
            "com.cocay.sicecd.repo.CertificadoRep",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_wsRep",
            "com.cocay.sicecd.security.pdf.SeguridadPDF",
            "com.cocay.sicecd.service.Logging",
            "java.io.BufferedInputStream",
            "java.io.BufferedOutputStream",
            "java.io.BufferedReader",
            "java.io.InputStreamReader",
            "java.nio.charset.Charset",
            "java.nio.file.Paths",
            "java.io.File",
            "java.io.FileInputStream",
            "java.io.FileOutputStream",
            "java.util.ArrayList",
            "java.util.Enumeration",
            "java.util.LinkedList",
            "java.util.List",
            "java.util.zip",
            "org.apache.http.HttpResponse",
            "org.apache.http.NameValuePair",
            "org.apache.http.client.HttpClient",
            "org.apache.http.client.entity.UrlEncodedFormEntity",
            "org.apache.http.client.methods.HttpPost",
            "org.apache.http.impl.client.HttpClients",
            "org.apache.http.message.BasicNameValuePair",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.stereotype.Component",
            "org.springframework.transaction.annotation.Transactional",
            "org.springframework.scheduling.annotation.Scheduled",
            "org.json",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.CertificadoMasivoController"
            },
            {
                "scopeName": "bd_curso",
                "methodName": "findByUniqueClave",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "ggg",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "ggg.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "c",
                "methodName": "getGrupos",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "bd_profesor",
                "methodName": "findByCorreo",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "bd_certificado",
                "methodName": "findByRuta",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "cert",
                "methodName": "setRuta",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "p",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "cert",
                "methodName": "setTiempo_creado",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "cert",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "bd_certificado",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CertificadoRep"
            },
            {
                "scopeName": "urls",
                "methodName": "findVarios",
                "targetClassName": "com.cocay.sicecd.repo.Url_wsRep"
            },
            {
                "scopeName": "bd_profesor",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getCertificados",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getInscripciones",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "i",
                "methodName": "getFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "i.getFk_id_grupo()",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "i",
                "methodName": "getFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Inscripcion"
            },
            {
                "scopeName": "p",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "caux",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "p",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "caux",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "gaux",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "c",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "c.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getFk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "c.getFk_id_grupo()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "p",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "c",
                "methodName": "getTiempo_creado",
                "targetClassName": "com.cocay.sicecd.model.Certificado"
            },
            {
                "scopeName": "u",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws"
            },
            {
                "scopeName": "u",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "scheduleTaskWithCronExpression",
                "annotations": [
                    "@Transactional",
                    "@Scheduled(cron = \"${ws.scheduleTransfer}\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    LinkedList<Url_ws> links = new LinkedList<>(urls.findVarios());\r",
                    "    if (links.size() == 0) {\r",
                    "        LOGGER.debug(\"No hay urls!\");\r",
                    "        //throw new Exception(\"No hay urls!\");\r",
                    "        return;\r",
                    "    }\r",
                    "    JSONObject json = new JSONObject();\r",
                    "    LinkedList<Profesor> profesores = new LinkedList<>(bd_profesor.findAll());\r",
                    "    if (profesores.size() == 0) {\r",
                    "        LOGGER.info(\"No hay profesores\");\r",
                    "        return;\r",
                    "    }\r",
                    "    int nuevas = 0;\r",
                    "    int actual = 0;\r",
                    "    System.out.println(\"A punto de buscar profesores.\");\r",
                    "    int k = 0;\r",
                    "    for (Profesor p : profesores) {\r",
                    "        LinkedList<Certificado> cert = new LinkedList<>(p.getCertificados());\r",
                    "        if (cert.size() == 0) {\r",
                    "            LinkedList<Inscripcion> ins = new LinkedList<>(p.getInscripciones());\r",
                    "            if (ins.size() == 0) {\r",
                    "                System.out.println(\"No hay inscripciones asociadas!\");\r",
                    "                continue;\r",
                    "            }\r",
                    "            for (Inscripcion i : ins) {\r",
                    "                // int fkc = i.getFk_id_grupo().getFk_id_curso();\r",
                    "                // Curso caux = bd_curso.findByID(fkc);\r",
                    "                Curso caux = i.getFk_id_grupo().getFk_id_curso();\r",
                    "                Grupo gaux = i.getFk_id_grupo();\r",
                    "                // if(!caux.getNombre().equals(\"COSDAC 2018\")) {\r",
                    "                // continue;\r",
                    "                // }\r",
                    "                System.out.println(\"**\\n\" + p.getCorreo() + \"\\n\" + caux.getNombre() + \"\\n**\");\r",
                    "                json.put(\"correo\" + k, p.getCorreo());\r",
                    "                json.put(\"id_curso\" + k, caux.getClave() + \"_\" + gaux.getClave());\r",
                    "                json.put(\"tiempo\" + k, 0);\r",
                    "                System.out.println(\"Se insertaron elementos en el JSON (certificados no presentes)\");\r",
                    "                nuevas++;\r",
                    "                k++;\r",
                    "            }\r",
                    "            continue;\r",
                    "        }\r",
                    "        for (Certificado c : cert) {\r",
                    "            String codigo = c.getFk_id_curso().getClave() + \"_\" + c.getFk_id_grupo().getClave();\r",
                    "            //System.out.println(\"**\\n\" + p.getCorreo() + \"\\n\" + c.getFk_id_curso().getNombre() + \"\\n**\");\r",
                    "            json.put(\"correo\" + k, p.getCorreo());\r",
                    "            json.put(\"id_curso\" + k, codigo);\r",
                    "            json.put(\"tiempo\" + k, c.getTiempo_creado());\r",
                    "            System.out.println(\"Se insertaron elementos en el JSON (certificadospresentes)\");\r",
                    "            actual++;\r",
                    "            k++;\r",
                    "        }\r",
                    "    }\r",
                    "    json.put(\"cuenta\", k);\r",
                    "    int nuevas2 = 0;\r",
                    "    int actual2 = 0;\r",
                    "    for (Url_ws u : links) {\r",
                    "        System.out.println(\"Intentando con \" + u.getUrl());\r",
                    "        int[] x = extraccionPorURL(u.getUrl(), json);\r",
                    "        nuevas2 += x[0];\r",
                    "        actual2 += x[1];\r",
                    "    }\r",
                    "    // if (nuevas != 0) {\r",
                    "    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS, nuevas2 + \" constancias nuevas extra\u00ef\u00bf\u00bddas de \" + nuevas + \"solicitadas\");\r",
                    "    // }\r",
                    "    // if (actual != 0) {\r",
                    "    log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_ACTUALIZACION, actual2 + \"constancias actualizadas de \" + actual + \"solicitadas\");\r",
                    "    // }\r",
                    "    // tarea completada*/\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "extraccionPorURL",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int[]",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "URL_RSM",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "json",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    HttpClient client = HttpClients.createDefault();\r",
                    "    HttpPost post = new HttpPost(URL_RSM);\r",
                    "    // System.out.println(json.toString());\r",
                    "    List<NameValuePair> params = new ArrayList<NameValuePair>(2);\r",
                    "    params.add(new BasicNameValuePair(\"json\", json.toString()));\r",
                    "    params.add(new BasicNameValuePair(\"clave\", clave));\r",
                    "    post.setEntity(new UrlEncodedFormEntity(params, \"UTF-8\"));\r",
                    "    // esperar respuesta\r",
                    "    HttpResponse response = client.execute(post);\r",
                    "    // BufferedReader rd = new BufferedReader(new\r",
                    "    // InputStreamReader(response.getEntity().getContent(), \"ISO_8859_1\"));\r",
                    "    BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent(), \"UTF-8\"));\r",
                    "    String jsonText = \"\";\r",
                    "    String linea = null;\r",
                    "    while ((linea = rd.readLine()) != null) {\r",
                    "        // System.out.println(linea);\r",
                    "        jsonText += linea;\r",
                    "    }\r",
                    "    JSONObject json_r = null;\r",
                    "    try {\r",
                    "        json_r = new JSONObject(jsonText);\r",
                    "    } catch (Exception e) {\r",
                    "        LOGGER.error(e.getMessage());\r",
                    "        //System.out.println(jsonText);\r",
                    "        return new int[] { 0, 0 };\r",
                    "    }\r",
                    "    // JSONObject json_r = new JSONObject(jsonText);\r",
                    "    String msg = (String) json_r.get(\"mensaje\");\r",
                    "    //System.out.println(msg);\r",
                    "    // msg = new\r",
                    "    // String(java.util.Base64.getDecoder().decode(msg),Charset.forName(\"UTF-8\"));\r",
                    "    if (!msg.equals(\"NULL\")) {\r",
                    "        /*\r",
                    "\t\t\t * System.out.println(\"No hay certificados nuevos!\");\r",
                    "\t\t\t * log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_NUEVAS,\r",
                    "\t\t\t * \"0 constancias nuevas extra\u00ef\u00bf\u00bddas de \" + nuevas + \" solicitadas\");\r",
                    "\t\t\t * log.setTrace(LogTypes.EXTRACCION_CONSTANCIAS_ACTUALIZACION,\r",
                    "\t\t\t * \"0 constancias actualizadas de \" + actual + \" solicitadas\");\r",
                    "\t\t\t */\r",
                    "        return new int[] { 0, 0 };\r",
                    "    }\r",
                    "    String mns = (String) json_r.get(\"zip\");\r",
                    "    // System.out.println(mns);\r",
                    "    byte[] bytearray = java.util.Base64.getDecoder().decode(mns);\r",
                    "    String path = RUTA_LOCAL + \"certificados.zip\";\r",
                    "    File tempdir = Paths.get(RUTA_LOCAL).normalize().toFile();\r",
                    "    if (!tempdir.exists()) {\r",
                    "        tempdir.mkdirs();\r",
                    "    }\r",
                    "    String pathF = \"\", pathOut = \"\", pathAux = \"\";\r",
                    "    File out = new File(path);\r",
                    "    pathOut = out.getAbsolutePath();\r",
                    "    try (FileOutputStream os = new FileOutputStream(out)) {\r",
                    "        os.write(bytearray);\r",
                    "        System.out.println(\"Archivo escrito!\");\r",
                    "    } catch (Exception e) {\r",
                    "        LOGGER.error(e.getMessage());\r",
                    "        System.out.println(e);\r",
                    "    }\r",
                    "    byte[] buffer = new byte[1024];\r",
                    "    File tmp = Paths.get(TEMP_ZIP).normalize().toFile();\r",
                    "    if (!tmp.exists()) {\r",
                    "        tmp.mkdirs();\r",
                    "    }\r",
                    "    try {\r",
                    "        ZipFile zpf = new ZipFile(out, Charset.forName(\"Cp437\"));\r",
                    "        Enumeration<? extends ZipEntry> e = zpf.entries();\r",
                    "        ZipEntry ze;\r",
                    "        // System.out.println(\"PASE\");\r",
                    "        while (e.hasMoreElements()) {\r",
                    "            ze = (ZipEntry) e.nextElement();\r",
                    "            String fileName = ze.getName();\r",
                    "            File newFile = new File(TEMP_ZIP + fileName);\r",
                    "            new File(newFile.getParent()).mkdirs();\r",
                    "            BufferedInputStream bis = new BufferedInputStream(zpf.getInputStream(ze));\r",
                    "            FileOutputStream fos = new FileOutputStream(newFile);\r",
                    "            BufferedOutputStream bos = new BufferedOutputStream(fos);\r",
                    "            int len;\r",
                    "            while ((len = bis.read(buffer, 0, 1024)) != -1) {\r",
                    "                fos.write(buffer, 0, len);\r",
                    "                // System.out.println(\"Escribiendo\");\r",
                    "            }\r",
                    "            bos.flush();\r",
                    "            bos.close();\r",
                    "            bis.close();\r",
                    "        }\r",
                    "        zpf.close();\r",
                    "    } catch (java.util.zip.ZipException zx) {\r",
                    "        LOGGER.error(\"Zip file is empty!\");\r",
                    "        out = null;\r",
                    "        delete(pathOut);\r",
                    "        //System.out.println(\"Zip file is empty!\");\r",
                    "        return new int[] { 0, 0 };\r",
                    "    } catch (Exception e) {\r",
                    "        LOGGER.error(e.getMessage());\r",
                    "        out = null;\r",
                    "        delete(pathOut);\r",
                    "        //System.out.println(e);\r",
                    "        //e.printStackTrace();\r",
                    "        return new int[] { 0, 0 };\r",
                    "    }\r",
                    "    int nuevas2 = 0;\r",
                    "    int actual2 = 0;\r",
                    "    // comienza a mover los pdfs a la ruta elegida\r",
                    "    for (File f : tmp.listFiles()) {\r",
                    "        String[] ars = f.getName().split(\"_\");\r",
                    "        Curso c = bd_curso.findByUniqueClave(ars[0]);\r",
                    "        //clave del grupo\r",
                    "        String gg = ars[1];\r",
                    "        //se obtiene el grupo\r",
                    "        Grupo g = null;\r",
                    "        for (Grupo ggg : c.getGrupos()) {\r",
                    "            if (ggg.getClave().equals(gg)) {\r",
                    "                g = ggg;\r",
                    "            }\r",
                    "        }\r",
                    "        //se obtiene el codigo completo\r",
                    "        String codigo = c.getClave() + \"_\" + g.getClave();\r",
                    "        //Curso c = bd_curso.findByID(Integer.parseInt(f.getName()));\r",
                    "        // Curso c = bd_curso.findByNombre(f.getName());\r",
                    "        JSONObject ar = new JSONObject(json_r.get(f.getName()).toString());\r",
                    "        for (File f2 : f.listFiles()) {\r",
                    "            Profesor p = bd_profesor.findByCorreo(f2.getName());\r",
                    "            for (File f3 : f2.listFiles()) {\r",
                    "                // +\r",
                    "                String pt = RUTA_LOCAL + codigo + \"/\" + codigo + \"_\" + p.getPk_id_profesor() + \".pdf\";\r",
                    "                // f3.getName();\r",
                    "                FileInputStream fs = new FileInputStream(f3);\r",
                    "                File aux = new File(pt);\r",
                    "                new File(aux.getParent()).mkdirs();\r",
                    "                if (aux.exists()) {\r",
                    "                    pathAux = aux.getAbsolutePath();\r",
                    "                    aux = null;\r",
                    "                    delete(pathAux);\r",
                    "                }\r",
                    "                try (FileOutputStream os = new FileOutputStream(aux)) {\r",
                    "                    os.write(fs.readAllBytes());\r",
                    "                } catch (Exception e) {\r",
                    "                    LOGGER.error(e.getMessage());\r",
                    "                    System.out.println(e);\r",
                    "                }\r",
                    "                /**\r",
                    "                 * \t\t\t\t\tSeguridadPDF spdf = new SeguridadPDF();\r",
                    "                 * \t\t\t\t\tString nombrec = p.getNombre() + \" \" + p.getApellido_paterno() + \" \" + p.getApellido_materno();\r",
                    "                 * \t\t\t\t\tspdf.cifraPdf(pt, nombrec, codigo);\r",
                    "                 * \t\t\t\t\t/**\r",
                    "                 */\r",
                    "                // elimina archivo\r",
                    "                f3 = null;\r",
                    "                Certificado cert = bd_certificado.findByRuta(pt);\r",
                    "                if (cert == null) {\r",
                    "                    System.out.println(\"insertando nuevo certificado!\");\r",
                    "                    cert = new Certificado();\r",
                    "                    nuevas2++;\r",
                    "                } else {\r",
                    "                    actual2++;\r",
                    "                }\r",
                    "                // Certificado cert = new Certificado();\r",
                    "                cert.setRuta(pt);\r",
                    "                long tt = Long.parseLong((String) ar.get(p.getCorreo()));\r",
                    "                cert.setTiempo_creado(tt);\r",
                    "                cert.setFk_id_curso(c);\r",
                    "                cert.setFk_id_grupo(g);\r",
                    "                cert.setFk_id_profesor(p);\r",
                    "                bd_certificado.save(cert);\r",
                    "                fs.close();\r",
                    "            }\r",
                    "            // elimina directorio (usuario)\r",
                    "            f2 = null;\r",
                    "        }\r",
                    "        pathF = f.getAbsolutePath();\r",
                    "        // elimina directorio padre (curso)\r",
                    "        f = null;\r",
                    "    }\r",
                    "    // elimina zip\r",
                    "    out = null;\r",
                    "    /**/\r",
                    "    delete(pathF);\r",
                    "    delete(pathOut);\r",
                    "    return new int[] { nuevas2, actual2 };\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "deleteBach",
                "annotations": [
                    "@Scheduled(cron = \"${ws.scheduleClean}\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    LOGGER.debug(\"Batch Clean:  PDF Temporary Files\");\r",
                    "    delete(RUTA_LOCAL, \"_ax.pdf\");\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "delete",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "prefix",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (path == null || path.equals(\"\")) {\r",
                    "        return;\r",
                    "    }\r",
                    "    File f = new File(path);\r",
                    "    if (f.isDirectory()) {\r",
                    "        for (File c : f.listFiles()) delete(c.getAbsolutePath(), prefix);\r",
                    "    }\r",
                    "    if (f.getAbsolutePath().endsWith(prefix)) {\r",
                    "        if (!f.delete()) {\r",
                    "            LOGGER.error(\"Error deleting: \" + f.getAbsolutePath());\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.Logging": {
        "full_name": "com.cocay.sicecd.service.Logging",
        "constructor": [],
        "package": "com.cocay.sicecd.service",
        "begin": 1,
        "end": 100,
        "short_name": "Logging",
        "src": "com.cocay.sicecd.service.Logging",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "HttpServletRequest",
                "variable": "request",
                "lineBegin": 21,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "usuario",
                "lineBegin": 23,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Log_sysRep",
                "variable": "logr",
                "lineBegin": 25,
                "lineEnd": 26
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Log_evento_sysRep",
                "variable": "evento",
                "lineBegin": 27,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@Value(\"${host}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "host",
                "lineBegin": 29,
                "lineEnd": 30
            }
        ],
        "methods": {
            "setTrace": {
                "name": "setTrace",
                "lineBegin": 95,
                "lineEnd": 98,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "action",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "comments",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    logtrace(action, comments);\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "logtrace": {
                "name": "logtrace",
                "lineBegin": 34,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "action",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "comentario",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Log_sys",
                        "variable": "log",
                        "qualifedType": ""
                    },
                    {
                        "type": "Principal",
                        "variable": "principal",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Log_sys log = new Log_sys();\r\n    try {\r\n        request.getUserPrincipal();\r\n    } catch (Exception ex) {\r\n        request = null;\r\n    }\r\n    if (request != null) {\r\n        Principal principal = request.getUserPrincipal();\r\n        log.setIp(request.getRemoteAddr());\r\n        if (principal == null) {\r\n            log.setFk_id_usuario_sys(usuario.findById(1).get());\r\n        } else {\r\n            log.setFk_id_usuario_sys(usuario.findByRfc(principal.getName()).get(0));\r\n        }\r\n    } else {\r\n        log.setIp(host);\r\n        log.setFk_id_usuario_sys(usuario.findById(1).get());\r\n    }\r\n    log.setHora(new Date());\r\n    log.setFk_id_log_evento_sys(evento.findById(action).get());\r\n    if (comentario != null) {\r\n        if (comentario.length() > 1000) {\r\n            comentario = comentario.substring(0, 999);\r\n        }\r\n        log.setComentario(comentario);\r\n    }\r\n    logr.save(log);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "log",
                        "methodName": "setIp",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "usuario",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "usuario.findById(1)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setFk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setIp",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "principal",
                        "methodName": "getName",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "usuario",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "usuario.findByRfc(principal.getName())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setFk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "usuario",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "usuario.findById(1)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setFk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setHora",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "evento",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
                    },
                    {
                        "scopeName": "evento.findById(action)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setFk_id_log_evento_sys",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setComentario",
                        "targetClassName": "com.cocay.sicecd.model.Log_sys"
                    },
                    {
                        "scopeName": "logr",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Log_sysRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.security.Principal",
            "java.util.Date",
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.stereotype.Service",
            "org.springframework.web.context.request.RequestContextHolder",
            "org.springframework.web.context.request.ServletRequestAttributes",
            "com.cocay.sicecd.model.Log_sys",
            "com.cocay.sicecd.repo.Log_evento_sysRep",
            "com.cocay.sicecd.repo.Log_sysRep",
            "com.cocay.sicecd.repo.Usuario_sysRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "log",
                "methodName": "setIp",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "usuario",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "usuario.findById(1)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setIp",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "usuario",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "usuario.findByRfc(principal.getName())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "usuario",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "usuario.findById(1)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setHora",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "evento",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
            },
            {
                "scopeName": "evento.findById(action)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_log_evento_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setComentario",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "logr",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Log_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setHora",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setIp",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "usuario",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "usuario.findByRfc(rfc)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "evento",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
            },
            {
                "scopeName": "evento.findById(action)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Log_evento_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setFk_id_log_evento_sys",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setComentario",
                "targetClassName": "com.cocay.sicecd.model.Log_sys"
            },
            {
                "scopeName": "logr",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Log_sysRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setTrace",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "action",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "comments",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    logtrace(action, comments);\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "logtrace",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "action",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "comentario",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Log_sys log = new Log_sys();\r",
                    "    try {\r",
                    "        request.getUserPrincipal();\r",
                    "    } catch (Exception ex) {\r",
                    "        request = null;\r",
                    "    }\r",
                    "    if (request != null) {\r",
                    "        Principal principal = request.getUserPrincipal();\r",
                    "        log.setIp(request.getRemoteAddr());\r",
                    "        if (principal == null) {\r",
                    "            log.setFk_id_usuario_sys(usuario.findById(1).get());\r",
                    "        } else {\r",
                    "            log.setFk_id_usuario_sys(usuario.findByRfc(principal.getName()).get(0));\r",
                    "        }\r",
                    "    } else {\r",
                    "        log.setIp(host);\r",
                    "        log.setFk_id_usuario_sys(usuario.findById(1).get());\r",
                    "    }\r",
                    "    log.setHora(new Date());\r",
                    "    log.setFk_id_log_evento_sys(evento.findById(action).get());\r",
                    "    if (comentario != null) {\r",
                    "        if (comentario.length() > 1000) {\r",
                    "            comentario = comentario.substring(0, 999);\r",
                    "        }\r",
                    "        log.setComentario(comentario);\r",
                    "    }\r",
                    "    logr.save(log);\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Log_sysRep": {
        "full_name": "com.cocay.sicecd.repo.Log_sysRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 22,
        "short_name": "Log_sysRep",
        "src": "com.cocay.sicecd.repo.Log_sysRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findEv": {
                "name": "findEv",
                "lineBegin": 17,
                "lineEnd": 18,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Log_sys\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Log_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByIp": {
                "name": "findByIp",
                "lineBegin": 14,
                "lineEnd": 14,
                "annotations": [],
                "returnDataType": [
                    "List<Log_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Log_sys, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Log_sys"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findEv",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Log_sys\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_sys>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByIp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_sys>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Log_evento_sysRep": {
        "full_name": "com.cocay.sicecd.repo.Log_evento_sysRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 17,
        "short_name": "Log_evento_sysRep",
        "src": "com.cocay.sicecd.repo.Log_evento_sysRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findEv": {
                "name": "findEv",
                "lineBegin": 15,
                "lineEnd": 16,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Log_evento_sys\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Log_evento_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_evento_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 13,
                "lineEnd": 13,
                "annotations": [],
                "returnDataType": [
                    "List<Log_evento_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_evento_sys"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Log_evento_sys, String>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Log_evento_sys"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findEv",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Log_evento_sys\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_evento_sys>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_evento_sys>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Log_sys": {
        "full_name": "com.cocay.sicecd.model.Log_sys",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 92,
        "short_name": "Log_sys",
        "src": "com.cocay.sicecd.model.Log_sys",
        "annotations": [
            "@Entity",
            "@Table(name = \"Log_sys\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_log_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_log_sys",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"ip\", nullable = false, length = 15)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "ip",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@Column(name = \"hora\", nullable = false)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Date",
                "variable": "hora",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Column(name = \"comentario\", nullable = true, length = 1000)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "comentario",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Usuario_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_usuario_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sys",
                "variable": "fk_id_usuario_sys",
                "lineBegin": 35,
                "lineEnd": 38
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Log_evento_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_log_evento_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Log_evento_sys",
                "variable": "fk_id_log_evento_sys",
                "lineBegin": 40,
                "lineEnd": 43
            }
        ],
        "methods": {
            "setComentario": {
                "name": "setComentario",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "comentario",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.comentario = comentario;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_log_sys": {
                "name": "getPk_id_log_sys",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_log_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setHora": {
                "name": "setHora",
                "lineBegin": 65,
                "lineEnd": 67,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "hora",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.hora = hora;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_log_sys": {
                "name": "setPk_id_log_sys",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_log_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_log_sys = pk_id_log_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIp": {
                "name": "getIp",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return ip;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_usuario_sys": {
                "name": "setFk_id_usuario_sys",
                "lineBegin": 81,
                "lineEnd": 83,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "fk_id_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_usuario_sys = fk_id_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getComentario": {
                "name": "getComentario",
                "lineBegin": 69,
                "lineEnd": 71,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return comentario;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getHora": {
                "name": "getHora",
                "lineBegin": 61,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "Date"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return hora;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIp": {
                "name": "setIp",
                "lineBegin": 57,
                "lineEnd": 59,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ip",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.ip = ip;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_usuario_sys": {
                "name": "getFk_id_usuario_sys",
                "lineBegin": 77,
                "lineEnd": 79,
                "annotations": [],
                "returnDataType": [
                    "Usuario_sys"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_log_evento_sys": {
                "name": "setFk_id_log_evento_sys",
                "lineBegin": 89,
                "lineEnd": 91,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Log_evento_sys",
                        "variable": "fk_id_log_evento_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_log_evento_sys = fk_id_log_evento_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_log_evento_sys": {
                "name": "getFk_id_log_evento_sys",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "Log_evento_sys"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_log_evento_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.Date",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setComentario",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "comentario",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.comentario = comentario;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_log_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_log_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setHora",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "hora",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.hora = hora;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_log_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_log_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_log_sys = pk_id_log_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return ip;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "fk_id_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_usuario_sys = fk_id_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getComentario",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return comentario;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getHora",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Date",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return hora;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ip",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.ip = ip;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Usuario_sys",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_log_evento_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Log_evento_sys",
                        "variable": "fk_id_log_evento_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_log_evento_sys = fk_id_log_evento_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_log_evento_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Log_evento_sys",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_log_evento_sys;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Url_wsRep": {
        "full_name": "com.cocay.sicecd.repo.Url_wsRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 14,
        "short_name": "Url_wsRep",
        "src": "com.cocay.sicecd.repo.Url_wsRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findSimples": {
                "name": "findSimples",
                "lineBegin": 12,
                "lineEnd": 13,
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws c where c.varios = false AND c.activa = true\")"
                ],
                "returnDataType": [
                    "List<Url_ws>"
                ],
                "identifier": [
                    "List",
                    "Url_ws"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findVarios": {
                "name": "findVarios",
                "lineBegin": 10,
                "lineEnd": 11,
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws c where c.varios = true AND c.activa = true\")"
                ],
                "returnDataType": [
                    "List<Url_ws>"
                ],
                "identifier": [
                    "List",
                    "Url_ws"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Url_ws, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "com.cocay.sicecd.model.Url_ws"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findSimples",
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws c where c.varios = false AND c.activa = true\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Url_ws>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findVarios",
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws c where c.varios = true AND c.activa = true\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Url_ws>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Url_ws": {
        "full_name": "com.cocay.sicecd.model.Url_ws",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 53,
        "short_name": "Url_ws",
        "src": "com.cocay.sicecd.model.Url_ws",
        "annotations": [
            "@Entity",
            "@Table(name = \"Url_ws\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_url_ws\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_url_ws",
                "lineBegin": 14,
                "lineEnd": 17
            },
            {
                "annotations": [
                    "@Column(name = \"url\", nullable = false, length = 200, unique = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "url",
                "lineBegin": 19,
                "lineEnd": 20
            },
            {
                "annotations": [
                    "@Column(name = \"varios\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "boolean",
                "variable": "varios",
                "lineBegin": 22,
                "lineEnd": 23
            },
            {
                "annotations": [
                    "@Column(name = \"activa\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "boolean",
                "variable": "activa",
                "lineBegin": 25,
                "lineEnd": 26
            }
        ],
        "methods": {
            "isActiva": {
                "name": "isActiva",
                "lineBegin": 46,
                "lineEnd": 48,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUrl": {
                "name": "getUrl",
                "lineBegin": 34,
                "lineEnd": 36,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "isVarios": {
                "name": "isVarios",
                "lineBegin": 40,
                "lineEnd": 42,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return varios;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_url_ws": {
                "name": "getPk_id_url_ws",
                "lineBegin": 28,
                "lineEnd": 30,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_url_ws;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_url_ws": {
                "name": "setPk_id_url_ws",
                "lineBegin": 31,
                "lineEnd": 33,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_url_ws = pk_id_url_ws;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setVarios": {
                "name": "setVarios",
                "lineBegin": 43,
                "lineEnd": 45,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "boolean",
                        "variable": "varios",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.varios = varios;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUrl": {
                "name": "setUrl",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.url = url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setActiva": {
                "name": "setActiva",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.activa = activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "isActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return activa;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "isVarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return varios;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_url_ws",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_url_ws;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_url_ws",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_url_ws = pk_id_url_ws;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setVarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "boolean",
                        "variable": "varios",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.varios = varios;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.url = url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.activa = activa;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Log_evento_sys": {
        "full_name": "com.cocay.sicecd.model.Log_evento_sys",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 53,
        "short_name": "Log_evento_sys",
        "src": "com.cocay.sicecd.model.Log_evento_sys",
        "annotations": [
            "@Entity",
            "@Table(name = \"Log_evento_sys\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@Column(name = \"pk_id_log_evento_sys\", length = 6)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "pk_id_log_evento_sys",
                "lineBegin": 19,
                "lineEnd": 21
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 100, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 23,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_log_evento_sys\", targetEntity = Log_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "type": "List<Log_sys>",
                "variable": "Log_sys_s",
                "lineBegin": 26,
                "lineEnd": 28
            }
        ],
        "methods": {
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 38,
                "lineEnd": 40,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_log_evento_sys": {
                "name": "setPk_id_log_evento_sys",
                "lineBegin": 34,
                "lineEnd": 36,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pk_id_log_evento_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_log_evento_sys = pk_id_log_evento_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_log_evento_sys": {
                "name": "getPk_id_log_evento_sys",
                "lineBegin": 30,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_log_evento_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getLog_sys_s": {
                "name": "getLog_sys_s",
                "lineBegin": 46,
                "lineEnd": 48,
                "annotations": [],
                "returnDataType": [
                    "List<Log_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return Log_sys_s;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setLog_sys_s": {
                "name": "setLog_sys_s",
                "lineBegin": 50,
                "lineEnd": 52,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Log_sys>",
                        "variable": "log_sys_s",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    Log_sys_s = log_sys_s;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 42,
                "lineEnd": 44,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_log_evento_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pk_id_log_evento_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_log_evento_sys = pk_id_log_evento_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_log_evento_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_log_evento_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getLog_sys_s",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_sys>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return Log_sys_s;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setLog_sys_s",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Log_sys>",
                        "variable": "log_sys_s",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Log_sys_s = log_sys_s;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.AuditoriasController": {
        "full_name": "com.cocay.sicecd.controller.AuditoriasController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 33,
        "short_name": "AuditoriasController",
        "src": "com.cocay.sicecd.controller.AuditoriasController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Log_sysRep",
                "variable": "sysRep",
                "lineBegin": 18,
                "lineEnd": 19
            }
        ],
        "methods": {
            "consultarEventoSys": {
                "name": "consultarEventoSys",
                "lineBegin": 21,
                "lineEnd": 31,
                "annotations": [
                    "@RequestMapping(value = \"/listaAuditorias\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Log_sys> list_p1 = sysRep.findEv();\r\n    if (!list_p1.equals(null)) {\r\n        model.put(\"auditorias\", list_p1);\r\n        return new ModelAndView(\"Auditorias/listaAuditorias\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "sysRep",
                        "methodName": "findEv",
                        "targetClassName": "com.cocay.sicecd.repo.Log_sysRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.model.Log_sys",
            "com.cocay.sicecd.repo.Log_sysRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "sysRep",
                "methodName": "findEv",
                "targetClassName": "com.cocay.sicecd.repo.Log_sysRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultarEventoSys",
                "annotations": [
                    "@RequestMapping(value = \"/listaAuditorias\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Log_sys> list_p1 = sysRep.findEv();\r",
                    "    if (!list_p1.equals(null)) {\r",
                    "        model.put(\"auditorias\", list_p1);\r",
                    "        return new ModelAndView(\"Auditorias/listaAuditorias\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.CertificadoRep": {
        "full_name": "com.cocay.sicecd.repo.CertificadoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 19,
        "short_name": "CertificadoRep",
        "src": "com.cocay.sicecd.repo.CertificadoRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByRuta": {
                "name": "findByRuta",
                "lineBegin": 14,
                "lineEnd": 15,
                "annotations": [
                    "@Query(\"SELECT c FROM Certificado c where c.ruta = :ruta\")"
                ],
                "returnDataType": [
                    "Certificado"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "ruta",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findCertificado": {
                "name": "findCertificado",
                "lineBegin": 17,
                "lineEnd": 18,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Certificado WHERE fk_id_profesor = :id_profesor AND fk_id_curso = :id_curso AND fk_id_grupo = :id_grupo\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "Certificado"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Certificado, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Certificado",
            "com.cocay.sicecd.model.Curso"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByRuta",
                "annotations": [
                    "@Query(\"SELECT c FROM Certificado c where c.ruta = :ruta\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Certificado",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "ruta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findCertificado",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Certificado WHERE fk_id_profesor = :id_profesor AND fk_id_curso = :id_curso AND fk_id_grupo = :id_grupo\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Certificado",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.security.pdf.SeguridadPDF": {
        "full_name": "com.cocay.sicecd.security.pdf.SeguridadPDF",
        "constructor": [],
        "package": "com.cocay.sicecd.security.pdf",
        "begin": 1,
        "end": 105,
        "short_name": "SeguridadPDF",
        "src": "com.cocay.sicecd.security.pdf.SeguridadPDF",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "obtenHash": {
                "name": "obtenHash",
                "lineBegin": 40,
                "lineEnd": 46,
                "annotations": [],
                "returnDataType": [
                    "byte[]"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "hashed",
                        "qualifedType": ""
                    },
                    {
                        "type": "MessageDigest",
                        "variable": "digest",
                        "qualifedType": ""
                    },
                    {
                        "type": "byte[]",
                        "variable": "encodedhash",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String hashed = usuario + propietario;\r\n    MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\r\n    byte[] encodedhash = digest.digest(hashed.getBytes(StandardCharsets.UTF_8));\r\n    return encodedhash;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "hashed",
                        "methodName": "getBytes",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "digest",
                        "methodName": "digest",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "NoSuchAlgorithmException"
                ]
            },
            "renombra": {
                "name": "renombra",
                "lineBegin": 22,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "File",
                        "variable": "oldfile",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "newfile",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    File oldfile = new File(src);\r\n    File newfile = new File(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r\n    if (oldfile.renameTo(newfile)) {\r\n        System.out.println(\"Rename succesful\");\r\n    } else {\r\n        System.out.println(\"Rename failed\");\r\n    }\r\n    oldfile = null;\r\n    newfile = null;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "oldfile",
                        "methodName": "renameTo",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "cifraPdf": {
                "name": "cifraPdf",
                "lineBegin": 55,
                "lineEnd": 84,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "encodedhash",
                        "qualifedType": ""
                    },
                    {
                        "type": "PdfReader",
                        "variable": "reader",
                        "qualifedType": ""
                    },
                    {
                        "type": "WriterProperties",
                        "variable": "props",
                        "qualifedType": ""
                    },
                    {
                        "type": "FileOutputStream",
                        "variable": "fileOS",
                        "qualifedType": ""
                    },
                    {
                        "type": "PdfWriter",
                        "variable": "writer",
                        "qualifedType": ""
                    },
                    {
                        "type": "PdfDocument",
                        "variable": "pdfDoc",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "oldFile",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    renombra(src);\r\n    byte[] encodedhash = obtenHash(usuario, propietario);\r\n    PdfReader reader = new PdfReader(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r\n    WriterProperties props = new WriterProperties().setStandardEncryption(encodedhash, encodedhash, EncryptionConstants.ALLOW_PRINTING, EncryptionConstants.ENCRYPTION_AES_128 | EncryptionConstants.DO_NOT_ENCRYPT_METADATA);\r\n    FileOutputStream fileOS = new FileOutputStream(src);\r\n    PdfWriter writer = new PdfWriter(fileOS, props);\r\n    PdfDocument pdfDoc = new PdfDocument(reader, writer);\r\n    /*\r\n    \treader.setCloseStream(true);\r\n    \tpdfDoc.setCloseReader(true);\r\n    \tpdfDoc.setCloseWriter(true);\r\n    \tpdfDoc.setFlushUnusedObjects(true);\r\n    \t//*/\r\n    pdfDoc.close();\r\n    //fileOS.flush();\r\n    writer.close();\r\n    fileOS.close();\r\n    reader.close();\r\n    fileOS = null;\r\n    writer = null;\r\n    reader = null;\r\n    pdfDoc = null;\r\n    File oldFile = new File(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r\n    if (!oldFile.delete()) {\r\n        oldFile.deleteOnExit();\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "pdfDoc",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "writer",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fileOS",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "reader",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "oldFile",
                        "methodName": "delete",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "oldFile",
                        "methodName": "deleteOnExit",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "IOException",
                    "NoSuchAlgorithmException"
                ]
            },
            "descifraPdf": {
                "name": "descifraPdf",
                "lineBegin": 93,
                "lineEnd": 104,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "encodedhash",
                        "qualifedType": ""
                    },
                    {
                        "type": "PdfReader",
                        "variable": "reader",
                        "qualifedType": ""
                    },
                    {
                        "type": "PdfDocument",
                        "variable": "pdfDoc",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    renombra(src);\r\n    byte[] encodedhash = obtenHash(usuario, propietario);\r\n    PdfReader reader = new PdfReader(src.substring(0, src.length() - 4) + \"_ax.pdf\", new ReaderProperties().setPassword(encodedhash));\r\n    PdfDocument pdfDoc = new PdfDocument(reader, new PdfWriter(src));\r\n    System.out.println(new String(reader.computeUserPassword()));\r\n    pdfDoc.close();\r\n    pdfDoc = null;\r\n    reader.close();\r\n    reader = null;\r\n    new File(src.substring(0, src.length() - 4) + \"_ax.pdf\").delete();\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "reader",
                        "methodName": "computeUserPassword",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "pdfDoc",
                        "methodName": "close",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "reader",
                        "methodName": "close",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "IOException",
                    "NoSuchAlgorithmException"
                ]
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.io.IOException",
            "java.nio.charset.StandardCharsets",
            "java.security.MessageDigest",
            "java.security.NoSuchAlgorithmException",
            "com.itextpdf.kernel.pdf.EncryptionConstants",
            "com.itextpdf.kernel.pdf.PdfDocument",
            "com.itextpdf.kernel.pdf.PdfReader",
            "com.itextpdf.kernel.pdf.PdfWriter",
            "com.itextpdf.kernel.pdf.ReaderProperties",
            "com.itextpdf.kernel.pdf.WriterProperties"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "obtenHash",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "byte[]",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String hashed = usuario + propietario;\r",
                    "    MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\r",
                    "    byte[] encodedhash = digest.digest(hashed.getBytes(StandardCharsets.UTF_8));\r",
                    "    return encodedhash;\r",
                    "}"
                ],
                "exceptions": [
                    "NoSuchAlgorithmException"
                ]
            },
            {
                "name": "renombra",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    File oldfile = new File(src);\r",
                    "    File newfile = new File(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r",
                    "    if (oldfile.renameTo(newfile)) {\r",
                    "        System.out.println(\"Rename succesful\");\r",
                    "    } else {\r",
                    "        System.out.println(\"Rename failed\");\r",
                    "    }\r",
                    "    oldfile = null;\r",
                    "    newfile = null;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "cifraPdf",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    renombra(src);\r",
                    "    byte[] encodedhash = obtenHash(usuario, propietario);\r",
                    "    PdfReader reader = new PdfReader(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r",
                    "    WriterProperties props = new WriterProperties().setStandardEncryption(encodedhash, encodedhash, EncryptionConstants.ALLOW_PRINTING, EncryptionConstants.ENCRYPTION_AES_128 | EncryptionConstants.DO_NOT_ENCRYPT_METADATA);\r",
                    "    FileOutputStream fileOS = new FileOutputStream(src);\r",
                    "    PdfWriter writer = new PdfWriter(fileOS, props);\r",
                    "    PdfDocument pdfDoc = new PdfDocument(reader, writer);\r",
                    "    /*\r",
                    "    \treader.setCloseStream(true);\r",
                    "    \tpdfDoc.setCloseReader(true);\r",
                    "    \tpdfDoc.setCloseWriter(true);\r",
                    "    \tpdfDoc.setFlushUnusedObjects(true);\r",
                    "    \t//*/\r",
                    "    pdfDoc.close();\r",
                    "    //fileOS.flush();\r",
                    "    writer.close();\r",
                    "    fileOS.close();\r",
                    "    reader.close();\r",
                    "    fileOS = null;\r",
                    "    writer = null;\r",
                    "    reader = null;\r",
                    "    pdfDoc = null;\r",
                    "    File oldFile = new File(src.substring(0, src.length() - 4) + \"_ax.pdf\");\r",
                    "    if (!oldFile.delete()) {\r",
                    "        oldFile.deleteOnExit();\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "IOException",
                    "NoSuchAlgorithmException"
                ]
            },
            {
                "name": "descifraPdf",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "src",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "usuario",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "propietario",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    renombra(src);\r",
                    "    byte[] encodedhash = obtenHash(usuario, propietario);\r",
                    "    PdfReader reader = new PdfReader(src.substring(0, src.length() - 4) + \"_ax.pdf\", new ReaderProperties().setPassword(encodedhash));\r",
                    "    PdfDocument pdfDoc = new PdfDocument(reader, new PdfWriter(src));\r",
                    "    System.out.println(new String(reader.computeUserPassword()));\r",
                    "    pdfDoc.close();\r",
                    "    pdfDoc = null;\r",
                    "    reader.close();\r",
                    "    reader = null;\r",
                    "    new File(src.substring(0, src.length() - 4) + \"_ax.pdf\").delete();\r",
                    "}"
                ],
                "exceptions": [
                    "IOException",
                    "NoSuchAlgorithmException"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Grupo": {
        "full_name": "com.cocay.sicecd.model.Grupo",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 165,
        "short_name": "Grupo",
        "src": "com.cocay.sicecd.model.Grupo",
        "annotations": [
            "@Entity",
            "@Table(name = \"Grupo\", uniqueConstraints = @UniqueConstraint(columnNames = { \"fk_id_curso\", \"clave\" }))"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_grupo\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_grupo",
                "lineBegin": 25,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@Column(name = \"clave\", nullable = false, length = 8, unique = false)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Column(name = \"fecha_inicio\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Date",
                "variable": "fecha_inicio",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Column(name = \"fecha_fin\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Date",
                "variable": "fecha_fin",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Column(name = \"tempCurso\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "tempCurso",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@Column(name = \"tempProfesor\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "tempProfesor",
                "lineBegin": 42,
                "lineEnd": 43
            },
            {
                "annotations": [
                    "@Column(name = \"stTabla\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Integer",
                "variable": "stTabla",
                "lineBegin": 45,
                "lineEnd": 46
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Curso.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_curso\", referencedColumnName = \"pk_id_curso\", insertable = true, updatable = true, nullable = false)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Curso",
                "variable": "fk_id_curso",
                "lineBegin": 49,
                "lineEnd": 52
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Profesor.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_profesor\", referencedColumnName = \"pk_id_profesor\", insertable = true, updatable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Profesor",
                "variable": "fk_id_profesor",
                "lineBegin": 54,
                "lineEnd": 57
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_grupo\", targetEntity = Inscripcion.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "type": "List<Inscripcion>",
                "variable": "inscripciones",
                "lineBegin": 59,
                "lineEnd": 61
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_grupo\", targetEntity = Certificado.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "type": "List<Certificado>",
                "variable": "certificados",
                "lineBegin": 63,
                "lineEnd": 65
            }
        ],
        "methods": {
            "setCertificados": {
                "name": "setCertificados",
                "lineBegin": 71,
                "lineEnd": 73,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.certificados = certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_curso": {
                "name": "getFk_id_curso",
                "lineBegin": 83,
                "lineEnd": 85,
                "annotations": [],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempCurso": {
                "name": "getTempCurso",
                "lineBegin": 148,
                "lineEnd": 150,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempCurso": {
                "name": "setTempCurso",
                "lineBegin": 152,
                "lineEnd": 154,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempCurso = tempCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCertificados": {
                "name": "getCertificados",
                "lineBegin": 67,
                "lineEnd": 69,
                "annotations": [],
                "returnDataType": [
                    "List<Certificado>"
                ],
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_profesor": {
                "name": "getFk_id_profesor",
                "lineBegin": 132,
                "lineEnd": 134,
                "annotations": [],
                "returnDataType": [
                    "Profesor"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempProfesor": {
                "name": "setTempProfesor",
                "lineBegin": 160,
                "lineEnd": 162,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempProfesor = tempProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFecha_fin": {
                "name": "setFecha_fin",
                "lineBegin": 120,
                "lineEnd": 122,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fecha_fin = fecha_fin;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempProfesor": {
                "name": "getTempProfesor",
                "lineBegin": 156,
                "lineEnd": 158,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempProfesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getStTabla": {
                "name": "getStTabla",
                "lineBegin": 140,
                "lineEnd": 142,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFecha_inicio": {
                "name": "getFecha_inicio",
                "lineBegin": 108,
                "lineEnd": 110,
                "annotations": [],
                "returnDataType": [
                    "Date"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fecha_inicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setStTabla": {
                "name": "setStTabla",
                "lineBegin": 144,
                "lineEnd": 146,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.stTabla = stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_grupo": {
                "name": "setPk_id_grupo",
                "lineBegin": 79,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_grupo = pk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getInscripciones": {
                "name": "getInscripciones",
                "lineBegin": 124,
                "lineEnd": 126,
                "annotations": [],
                "returnDataType": [
                    "List<Inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Inscripcion"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return inscripciones;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_grupo": {
                "name": "getPk_id_grupo",
                "lineBegin": 75,
                "lineEnd": 77,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave": {
                "name": "getClave",
                "lineBegin": 100,
                "lineEnd": 102,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_curso": {
                "name": "setFk_id_curso",
                "lineBegin": 87,
                "lineEnd": 89,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_curso = curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setInscripciones": {
                "name": "setInscripciones",
                "lineBegin": 128,
                "lineEnd": 130,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "inscripciones",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.inscripciones = inscripciones;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave": {
                "name": "setClave",
                "lineBegin": 104,
                "lineEnd": 106,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave = clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFecha_inicio": {
                "name": "setFecha_inicio",
                "lineBegin": 112,
                "lineEnd": 114,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fecha_inicio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fecha_inicio = fecha_inicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_profesor": {
                "name": "setFk_id_profesor",
                "lineBegin": 136,
                "lineEnd": 138,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_profesor = fk_id_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFecha_fin": {
                "name": "getFecha_fin",
                "lineBegin": 116,
                "lineEnd": 118,
                "annotations": [],
                "returnDataType": [
                    "Date"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fecha_fin;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "javax.persistence.UniqueConstraint",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.certificados = certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempCurso = tempCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Certificado>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Profesor",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempProfesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempProfesor = tempProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFecha_fin",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fecha_fin = fecha_fin;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempProfesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempProfesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFecha_inicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Date",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fecha_inicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.stTabla = stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_grupo = pk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getInscripciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Inscripcion>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return inscripciones;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_curso = curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setInscripciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Inscripcion>",
                        "variable": "inscripciones",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.inscripciones = inscripciones;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave = clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFecha_inicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fecha_inicio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fecha_inicio = fecha_inicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Profesor",
                        "variable": "fk_id_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_profesor = fk_id_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFecha_fin",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Date",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fecha_fin;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.BatchController": {
        "full_name": "com.cocay.sicecd.controller.BatchController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 331,
        "short_name": "BatchController",
        "src": "com.cocay.sicecd.controller.BatchController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "JobLauncher",
                "variable": "jobLauncher",
                "lineBegin": 58,
                "lineEnd": 59
            },
            {
                "annotations": [
                    "@Autowired",
                    "@Qualifier(\"jobCurso\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Job",
                "variable": "jobCurso",
                "lineBegin": 61,
                "lineEnd": 63
            },
            {
                "annotations": [
                    "@Autowired",
                    "@Qualifier(\"jobGrupo\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Job",
                "variable": "jobGrupo",
                "lineBegin": 65,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired",
                    "@Qualifier(\"jobProfesor\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Job",
                "variable": "jobProfesor",
                "lineBegin": 69,
                "lineEnd": 71
            },
            {
                "annotations": [
                    "@Autowired",
                    "@Qualifier(\"jobInscripcion\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Job",
                "variable": "jobInscripcion",
                "lineBegin": 73,
                "lineEnd": 75
            },
            {
                "annotations": [
                    "@Autowired",
                    "@Qualifier(\"excelFileToDatabaseJob\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Job",
                "variable": "excelFileToDatabaseJob",
                "lineBegin": 77,
                "lineEnd": 79
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "curso",
                "lineBegin": 81,
                "lineEnd": 82
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupo",
                "lineBegin": 84,
                "lineEnd": 85
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesor",
                "lineBegin": 87,
                "lineEnd": 88
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "inscripcion",
                "lineBegin": 90,
                "lineEnd": 91
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "_email",
                "lineBegin": 93,
                "lineEnd": 94
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "carpeta",
                "lineBegin": 96,
                "lineEnd": 96
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "UPLOADED_FOLDER",
                "lineBegin": 98,
                "lineEnd": 98
            }
        ],
        "methods": {
            "consultarInscripcionBatch": {
                "name": "consultarInscripcionBatch",
                "lineBegin": 261,
                "lineEnd": 266,
                "annotations": [
                    "@RequestMapping(value = \"/consultarInscripcionBatch\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return new ModelAndView(\"/BatchTemplate/consultarInscripcionBatch\");\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "consultarCursos": {
                "name": "consultarCursos",
                "lineBegin": 222,
                "lineEnd": 233,
                "annotations": [
                    "@RequestMapping(value = \"/consultarCursos\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Curso> list_p = curso.loadAllCursos();\r\n    if (!list_p.isEmpty()) {\r\n        model.put(\"cursos\", list_p);\r\n        return new ModelAndView(\"/BatchTemplate/consultarCursos\", model);\r\n    } else {\r\n        return new ModelAndView(\"/BatchTemplate/consultarCursos\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "curso",
                        "methodName": "loadAllCursos",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": []
            },
            "consultarProfesor": {
                "name": "consultarProfesor",
                "lineBegin": 248,
                "lineEnd": 259,
                "annotations": [
                    "@RequestMapping(value = \"/consultarProfesor\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Profesor> list_p = profesor.loadAllProfesor();\r\n    if (!list_p.isEmpty()) {\r\n        model.put(\"profesores\", list_p);\r\n        return new ModelAndView(\"/BatchTemplate/consultarProfesor\", model);\r\n    } else {\r\n        return new ModelAndView(\"/BatchTemplate/consultarProfesor\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "loadAllProfesor",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "pruebaBatch": {
                "name": "pruebaBatch",
                "lineBegin": 268,
                "lineEnd": 279,
                "annotations": [
                    "@RequestMapping(value = \"/pruebaBatch\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Profesor> list_p = profesor.loadAllProfesor();\r\n    if (!list_p.isEmpty()) {\r\n        model.put(\"profesores\", list_p);\r\n        return new ModelAndView(\"/BatchTemplate/prueba\", model);\r\n    } else {\r\n        return new ModelAndView(\"/BatchTemplate/prueba\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "loadAllProfesor",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "singleFilegrupo": {
                "name": "singleFilegrupo",
                "lineBegin": 131,
                "lineEnd": 159,
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarGrupo\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "bytes",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "ruta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "fileToImport",
                        "qualifedType": ""
                    },
                    {
                        "type": "JobExecution",
                        "variable": "jobExecution",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        // Get the file and save it somewhere\r\n        byte[] bytes = file.getBytes();\r\n        Path ruta = Paths.get(UPLOADED_FOLDER);\r\n        if (!Files.exists(ruta)) {\r\n            Files.createDirectory(ruta);\r\n        }\r\n        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        Files.write(path, bytes);\r\n        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        //Launch the Batch Job\r\n        JobExecution jobExecution = jobLauncher.run(jobGrupo, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r\n        fileToImport.delete();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return new ModelAndView(\"BatchTemplate/consultarGrupo\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "fileToImport",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fileToImport",
                        "methodName": "delete",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            "avisos": {
                "name": "avisos",
                "lineBegin": 307,
                "lineEnd": 311,
                "annotations": [
                    "@RequestMapping(value = \"/AvisosCorreo\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "singleFileinscripcion": {
                "name": "singleFileinscripcion",
                "lineBegin": 191,
                "lineEnd": 219,
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarInscripcionBatch\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "bytes",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "ruta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "fileToImport",
                        "qualifedType": ""
                    },
                    {
                        "type": "JobExecution",
                        "variable": "jobExecution",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        // Get the file and save it somewhere\r\n        byte[] bytes = file.getBytes();\r\n        Path ruta = Paths.get(UPLOADED_FOLDER);\r\n        if (!Files.exists(ruta)) {\r\n            Files.createDirectory(ruta);\r\n        }\r\n        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        Files.write(path, bytes);\r\n        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        //Launch the Batch Job\r\n        JobExecution jobExecution = jobLauncher.run(jobInscripcion, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r\n        fileToImport.delete();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return new ModelAndView(\"BatchTemplate/consultarInscripcionBatch\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "fileToImport",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fileToImport",
                        "methodName": "delete",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            "busqueda": {
                "name": "busqueda",
                "lineBegin": 281,
                "lineEnd": 305,
                "annotations": [
                    "@RequestMapping(value = \"/BusquedaCorreo\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "mv",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nom",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String nombre = request.getParameter(\"nombre\").toUpperCase();\r\n    ModelAndView mv = new ModelAndView(\"search::search_list\");\r\n    List<Profesor> list_p1 = profesor.findAll();\r\n    List<Profesor> list_p2 = profesor.findAll();\r\n    //Filtrando por Nombre\r\n    if (nombre != \"\") {\r\n        for (Profesor p : list_p1) {\r\n            String nom = p.getNombre().toUpperCase();\r\n            if (!nom.contains(nombre)) {\r\n                list_p2.remove(p);\r\n            }\r\n        }\r\n    }\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"profesores\", list_p2);\r\n        mv.addObject(\"searchList\", list_p2);\r\n        return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r\n    } else {\r\n        return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesor",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p.getNombre()",
                        "methodName": "toUpperCase",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "nom",
                        "methodName": "contains",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mv",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "singleFileprofesor": {
                "name": "singleFileprofesor",
                "lineBegin": 161,
                "lineEnd": 189,
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarProfesor\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "bytes",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "ruta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "fileToImport",
                        "qualifedType": ""
                    },
                    {
                        "type": "JobExecution",
                        "variable": "jobExecution",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        // Get the file and save it somewhere\r\n        byte[] bytes = file.getBytes();\r\n        Path ruta = Paths.get(UPLOADED_FOLDER);\r\n        if (!Files.exists(ruta)) {\r\n            Files.createDirectory(ruta);\r\n        }\r\n        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        Files.write(path, bytes);\r\n        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        //Launch the Batch Job\r\n        JobExecution jobExecution = jobLauncher.run(jobProfesor, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r\n        fileToImport.delete();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return new ModelAndView(\"BatchTemplate/consultarProfesor\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "fileToImport",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fileToImport",
                        "methodName": "delete",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            "singleFileUpload": {
                "name": "singleFileUpload",
                "lineBegin": 100,
                "lineEnd": 129,
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarCursos\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "byte[]",
                        "variable": "bytes",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "ruta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Path",
                        "variable": "path",
                        "qualifedType": ""
                    },
                    {
                        "type": "File",
                        "variable": "fileToImport",
                        "qualifedType": ""
                    },
                    {
                        "type": "JobExecution",
                        "variable": "jobExecution",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        // Get the file and save it somewhere\r\n        byte[] bytes = file.getBytes();\r\n        Path ruta = Paths.get(UPLOADED_FOLDER);\r\n        if (!Files.exists(ruta)) {\r\n            Files.createDirectory(ruta);\r\n        }\r\n        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        Files.write(path, bytes);\r\n        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r\n        //Launch the Batch Job\r\n        JobExecution jobExecution = jobLauncher.run(jobCurso, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r\n        fileToImport.delete();\r\n    } catch (IOException e) {\r\n        e.printStackTrace();\r\n    }\r\n    return new ModelAndView(\"BatchTemplate/consultarCursos\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "fileToImport",
                        "methodName": "getAbsolutePath",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "fileToImport",
                        "methodName": "delete",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            "consultarGrupo": {
                "name": "consultarGrupo",
                "lineBegin": 235,
                "lineEnd": 246,
                "annotations": [
                    "@RequestMapping(value = \"/consultarGrupo\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    List<Grupo> list_p = grupo.loadAllGrupo();\r\n    if (!list_p.isEmpty()) {\r\n        model.put(\"grupos\", list_p);\r\n        return new ModelAndView(\"/BatchTemplate/consultarGrupo\", model);\r\n    } else {\r\n        return new ModelAndView(\"/BatchTemplate/consultarGrupo\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupo",
                        "methodName": "loadAllGrupo",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    }
                ],
                "exception": []
            },
            "insertaExcel": {
                "name": "insertaExcel",
                "lineBegin": 314,
                "lineEnd": 325,
                "annotations": [
                    "@RequestMapping(value = \"/runExcel\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Logger",
                        "variable": "logger",
                        "qualifedType": ""
                    },
                    {
                        "type": "JobParameters",
                        "variable": "jobParameters",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Logger logger = LoggerFactory.getLogger(this.getClass());\r\n    try {\r\n        JobParameters jobParameters = new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).toJobParameters();\r\n        jobLauncher.run(excelFileToDatabaseJob, jobParameters);\r\n    } catch (Exception e) {\r\n        logger.info(e.getMessage());\r\n    }\r\n    return new ModelAndView(\"/BatchTemplate/consultarProfesor\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "this",
                        "methodName": "getClass",
                        "targetClassName": "com.cocay.sicecd.controller.BatchController"
                    },
                    {
                        "scopeName": "logger",
                        "methodName": "info",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.IOException",
            "java.nio.file.Files",
            "java.nio.file.Path",
            "java.nio.file.Paths",
            "java.util.ArrayList",
            "java.util.HashMap",
            "java.util.List",
            "java.util.Map",
            "javax.servlet.http.HttpServletRequest",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.core.BatchStatus",
            "org.springframework.batch.core.Job",
            "org.springframework.batch.core.JobExecution",
            "org.springframework.batch.core.JobParameter",
            "org.springframework.batch.core.JobParameters",
            "org.springframework.batch.core.JobParametersBuilder",
            "org.springframework.batch.core.JobParametersInvalidException",
            "org.springframework.batch.core.launch.JobLauncher",
            "org.springframework.batch.core.repository.JobExecutionAlreadyRunningException",
            "org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException",
            "org.springframework.batch.core.repository.JobRestartException",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Qualifier",
            "org.springframework.core.io.ClassPathResource",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "org.springframework.web.servlet.mvc.support.RedirectAttributes",
            "com.cocay.sicecd.dto.CursoDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.service.SendMailService"
        ],
        "methodsInvocations": [
            {
                "scopeName": "curso",
                "methodName": "loadAllCursos",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "loadAllGrupo",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "loadAllProfesor",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "loadAllProfesor",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p.getNombre()",
                "methodName": "toUpperCase",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.BatchController"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultarInscripcionBatch",
                "annotations": [
                    "@RequestMapping(value = \"/consultarInscripcionBatch\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return new ModelAndView(\"/BatchTemplate/consultarInscripcionBatch\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultarCursos",
                "annotations": [
                    "@RequestMapping(value = \"/consultarCursos\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Curso> list_p = curso.loadAllCursos();\r",
                    "    if (!list_p.isEmpty()) {\r",
                    "        model.put(\"cursos\", list_p);\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarCursos\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarCursos\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultarProfesor",
                "annotations": [
                    "@RequestMapping(value = \"/consultarProfesor\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Profesor> list_p = profesor.loadAllProfesor();\r",
                    "    if (!list_p.isEmpty()) {\r",
                    "        model.put(\"profesores\", list_p);\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarProfesor\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarProfesor\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "pruebaBatch",
                "annotations": [
                    "@RequestMapping(value = \"/pruebaBatch\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Profesor> list_p = profesor.loadAllProfesor();\r",
                    "    if (!list_p.isEmpty()) {\r",
                    "        model.put(\"profesores\", list_p);\r",
                    "        return new ModelAndView(\"/BatchTemplate/prueba\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/BatchTemplate/prueba\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "singleFilegrupo",
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarGrupo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        // Get the file and save it somewhere\r",
                    "        byte[] bytes = file.getBytes();\r",
                    "        Path ruta = Paths.get(UPLOADED_FOLDER);\r",
                    "        if (!Files.exists(ruta)) {\r",
                    "            Files.createDirectory(ruta);\r",
                    "        }\r",
                    "        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        Files.write(path, bytes);\r",
                    "        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        //Launch the Batch Job\r",
                    "        JobExecution jobExecution = jobLauncher.run(jobGrupo, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r",
                    "        fileToImport.delete();\r",
                    "    } catch (IOException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return new ModelAndView(\"BatchTemplate/consultarGrupo\");\r",
                    "}"
                ],
                "exceptions": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            {
                "name": "avisos",
                "annotations": [
                    "@RequestMapping(value = \"/AvisosCorreo\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "singleFileinscripcion",
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarInscripcionBatch\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        // Get the file and save it somewhere\r",
                    "        byte[] bytes = file.getBytes();\r",
                    "        Path ruta = Paths.get(UPLOADED_FOLDER);\r",
                    "        if (!Files.exists(ruta)) {\r",
                    "            Files.createDirectory(ruta);\r",
                    "        }\r",
                    "        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        Files.write(path, bytes);\r",
                    "        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        //Launch the Batch Job\r",
                    "        JobExecution jobExecution = jobLauncher.run(jobInscripcion, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r",
                    "        fileToImport.delete();\r",
                    "    } catch (IOException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return new ModelAndView(\"BatchTemplate/consultarInscripcionBatch\");\r",
                    "}"
                ],
                "exceptions": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            {
                "name": "busqueda",
                "annotations": [
                    "@RequestMapping(value = \"/BusquedaCorreo\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String nombre = request.getParameter(\"nombre\").toUpperCase();\r",
                    "    ModelAndView mv = new ModelAndView(\"search::search_list\");\r",
                    "    List<Profesor> list_p1 = profesor.findAll();\r",
                    "    List<Profesor> list_p2 = profesor.findAll();\r",
                    "    //Filtrando por Nombre\r",
                    "    if (nombre != \"\") {\r",
                    "        for (Profesor p : list_p1) {\r",
                    "            String nom = p.getNombre().toUpperCase();\r",
                    "            if (!nom.contains(nombre)) {\r",
                    "                list_p2.remove(p);\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"profesores\", list_p2);\r",
                    "        mv.addObject(\"searchList\", list_p2);\r",
                    "        return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/CorreosTemplate/AvisosCorreo\", model);\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "singleFileprofesor",
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarProfesor\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        // Get the file and save it somewhere\r",
                    "        byte[] bytes = file.getBytes();\r",
                    "        Path ruta = Paths.get(UPLOADED_FOLDER);\r",
                    "        if (!Files.exists(ruta)) {\r",
                    "            Files.createDirectory(ruta);\r",
                    "        }\r",
                    "        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        Files.write(path, bytes);\r",
                    "        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        //Launch the Batch Job\r",
                    "        JobExecution jobExecution = jobLauncher.run(jobProfesor, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r",
                    "        fileToImport.delete();\r",
                    "    } catch (IOException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return new ModelAndView(\"BatchTemplate/consultarProfesor\");\r",
                    "}"
                ],
                "exceptions": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            {
                "name": "singleFileUpload",
                "annotations": [
                    "// //new annotation since 4.3\r\n@PostMapping(\"/consultarCursos\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "MultipartFile",
                        "variable": "file",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        // Get the file and save it somewhere\r",
                    "        byte[] bytes = file.getBytes();\r",
                    "        Path ruta = Paths.get(UPLOADED_FOLDER);\r",
                    "        if (!Files.exists(ruta)) {\r",
                    "            Files.createDirectory(ruta);\r",
                    "        }\r",
                    "        Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        Files.write(path, bytes);\r",
                    "        File fileToImport = new File(UPLOADED_FOLDER + file.getOriginalFilename());\r",
                    "        //Launch the Batch Job\r",
                    "        JobExecution jobExecution = jobLauncher.run(jobCurso, new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).addString(\"fullPathFileName\", fileToImport.getAbsolutePath()).toJobParameters());\r",
                    "        fileToImport.delete();\r",
                    "    } catch (IOException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    return new ModelAndView(\"BatchTemplate/consultarCursos\");\r",
                    "}"
                ],
                "exceptions": [
                    "JobExecutionAlreadyRunningException",
                    "JobRestartException",
                    "JobInstanceAlreadyCompleteException",
                    "JobParametersInvalidException"
                ]
            },
            {
                "name": "consultarGrupo",
                "annotations": [
                    "@RequestMapping(value = \"/consultarGrupo\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Grupo> list_p = grupo.loadAllGrupo();\r",
                    "    if (!list_p.isEmpty()) {\r",
                    "        model.put(\"grupos\", list_p);\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarGrupo\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/BatchTemplate/consultarGrupo\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "insertaExcel",
                "annotations": [
                    "@RequestMapping(value = \"/runExcel\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Logger logger = LoggerFactory.getLogger(this.getClass());\r",
                    "    try {\r",
                    "        JobParameters jobParameters = new JobParametersBuilder().addLong(\"time\", System.currentTimeMillis()).toJobParameters();\r",
                    "        jobLauncher.run(excelFileToDatabaseJob, jobParameters);\r",
                    "    } catch (Exception e) {\r",
                    "        logger.info(e.getMessage());\r",
                    "    }\r",
                    "    return new ModelAndView(\"/BatchTemplate/consultarProfesor\");\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ProcessorGrupo": {
        "full_name": "com.cocay.sicecd.step.ProcessorGrupo",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 88,
        "short_name": "ProcessorGrupo",
        "src": "com.cocay.sicecd.step.ProcessorGrupo",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "log",
                "lineBegin": 26,
                "lineEnd": 26
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesorRep",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 35,
                "lineEnd": 36
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 38,
                "lineEnd": 39
            }
        ],
        "methods": {
            "process": {
                "name": "process",
                "lineBegin": 41,
                "lineEnd": 87,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "cdCurso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cdProfesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grp",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String cdCurso = grupo.getTempCurso();\r\n    String cdProfesor = grupo.getTempProfesor();\r\n    System.out.println(cdCurso);\r\n    System.out.println(cdProfesor);\r\n    /*\r\n\t\t * Marca error Null\r\n\t\t */\r\n    Profesor profesor = profesorRep.findByRfc(cdProfesor);\r\n    Curso curso = cursoRep.findByNombre(cdCurso);\r\n    String clave = grupo.getClave();\r\n    Grupo grp = grupoRep.findByClaveGrupo(clave);\r\n    System.out.println(\"clave\" + clave);\r\n    System.out.println(\"grp\" + grp);\r\n    if (curso != null) {\r\n        if (grp == null) {\r\n            grupo.setFk_id_curso(curso);\r\n            grupo.setFk_id_profesor(profesor);\r\n            grupo.setStTabla(1);\r\n            System.out.println(\"Objeto convertido a grupo \");\r\n            return grupo;\r\n        } else {\r\n            String mensaje = \"El grupo: \" + clave + \" ya existe actualmente\";\r\n            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n            Query query = em.createNativeQuery(consulta);\r\n            query.executeUpdate();\r\n            return null;\r\n        }\r\n    } else {\r\n        String mensaje = \"Error al buscar: \" + cdCurso + \" (Verifique los datos)\";\r\n        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n        Query query = em.createNativeQuery(consulta);\r\n        query.executeUpdate();\r\n        return null;\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupo",
                        "methodName": "getTempCurso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getTempProfesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "profesorRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupoRep",
                        "methodName": "findByClaveGrupo",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setStTabla",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemProcessor<Grupo, Grupo>"
        ],
        "extends": [],
        "imports": [
            "java.util.Date",
            "java.util.LinkedList",
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.item.ItemProcessor",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.ProfesorRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "grupo",
                "methodName": "getTempCurso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "getTempProfesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "profesorRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupoRep",
                "methodName": "findByClaveGrupo",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setStTabla",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "process",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String cdCurso = grupo.getTempCurso();\r",
                    "    String cdProfesor = grupo.getTempProfesor();\r",
                    "    System.out.println(cdCurso);\r",
                    "    System.out.println(cdProfesor);\r",
                    "    /*\r",
                    "\t\t * Marca error Null\r",
                    "\t\t */\r",
                    "    Profesor profesor = profesorRep.findByRfc(cdProfesor);\r",
                    "    Curso curso = cursoRep.findByNombre(cdCurso);\r",
                    "    String clave = grupo.getClave();\r",
                    "    Grupo grp = grupoRep.findByClaveGrupo(clave);\r",
                    "    System.out.println(\"clave\" + clave);\r",
                    "    System.out.println(\"grp\" + grp);\r",
                    "    if (curso != null) {\r",
                    "        if (grp == null) {\r",
                    "            grupo.setFk_id_curso(curso);\r",
                    "            grupo.setFk_id_profesor(profesor);\r",
                    "            grupo.setStTabla(1);\r",
                    "            System.out.println(\"Objeto convertido a grupo \");\r",
                    "            return grupo;\r",
                    "        } else {\r",
                    "            String mensaje = \"El grupo: \" + clave + \" ya existe actualmente\";\r",
                    "            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "            Query query = em.createNativeQuery(consulta);\r",
                    "            query.executeUpdate();\r",
                    "            return null;\r",
                    "        }\r",
                    "    } else {\r",
                    "        String mensaje = \"Error al buscar: \" + cdCurso + \" (Verifique los datos)\";\r",
                    "        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "        Query query = em.createNativeQuery(consulta);\r",
                    "        query.executeUpdate();\r",
                    "        return null;\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.GrupoController": {
        "full_name": "com.cocay.sicecd.controller.GrupoController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 168,
        "short_name": "GrupoController",
        "src": "com.cocay.sicecd.controller.GrupoController",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionRegistroManual\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 34,
                "lineEnd": 35
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 37,
                "lineEnd": 38
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profRep",
                "lineBegin": 40,
                "lineEnd": 41
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 43,
                "lineEnd": 44
            }
        ],
        "methods": {
            "agregarGrupo": {
                "name": "agregarGrupo",
                "lineBegin": 108,
                "lineEnd": 166,
                "annotations": [
                    "@RequestMapping(value = \"/registrarGrupo\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "GrupoDto",
                        "variable": "gr",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "asesor",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fInicio",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fTermino",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fechaI",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fechaT",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "cursop",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "profe",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Grupo grupo = new Grupo();\r\n    String clave = gr.getClave();\r\n    String curso = gr.getCurso();\r\n    String asesor = gr.getAsesor();\r\n    String fInicio = gr.getInicio();\r\n    String fTermino = gr.getTermino();\r\n    Date fechaI = null;\r\n    if (fInicio != \"\") {\r\n        try {\r\n            fechaI = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fInicio);\r\n            grupo.setFecha_inicio(fechaI);\r\n        } catch (ParseException e1) {\r\n            e1.printStackTrace();\r\n            grupo.setFecha_inicio(null);\r\n        }\r\n    }\r\n    Date fechaT = null;\r\n    if (fTermino != \"\") {\r\n        try {\r\n            fechaT = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fTermino);\r\n            grupo.setFecha_fin(fechaT);\r\n        } catch (ParseException e) {\r\n            // TODO Auto-generated catch block\r\n            e.printStackTrace();\r\n            grupo.setFecha_fin(null);\r\n        }\r\n    }\r\n    grupo.setClave(clave);\r\n    System.out.println(curso);\r\n    Curso cursop = cursoRep.findForClave(curso);\r\n    if (cursop != null) {\r\n        grupo.setFk_id_curso(cursop);\r\n    }\r\n    Profesor profe = profRep.findByRfc(asesor);\r\n    if (profe != null) {\r\n        grupo.setFk_id_profesor(profe);\r\n    }\r\n    log.setTrace(LogTypes.REGISTRAR_GRUPO);\r\n    grupoRep.save(grupo);\r\n    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdGrupo agregado con exito!\\\"}\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "gr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "findForClave",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "grupoRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    }
                ],
                "exception": []
            },
            "registrarInscripcion": {
                "name": "registrarInscripcion",
                "lineBegin": 46,
                "lineEnd": 106,
                "annotations": [
                    "@RequestMapping(value = \"/registrarGrupo2\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "StringBuilder",
                        "variable": "sb1",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb2",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "nc",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "cc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "re",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nomc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rep",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombresc",
                        "qualifedType": ""
                    },
                    {
                        "type": "GrupoDto",
                        "variable": "gp",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Curso> list_p1 = cursoRep.findAll();\r\n    List<Profesor> list_p2 = profRep.findAll();\r\n    List<String> claves = new ArrayList<String>();\r\n    List<String> rfcs = new ArrayList<String>();\r\n    StringBuilder sb1 = new StringBuilder();\r\n    StringBuilder sb2 = new StringBuilder();\r\n    StringBuilder nc = new StringBuilder();\r\n    StringBuilder cc = new StringBuilder();\r\n    for (Curso c : list_p1) {\r\n        claves.add(c.getClave());\r\n        sb1.append(c.getClave() + \",\");\r\n    }\r\n    for (Curso c : list_p1) {\r\n        cc.append(c.getNombre() + \",\");\r\n        claves.add(cc.toString());\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        rfcs.add(p.getRfc());\r\n        sb2.append(p.getRfc() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r\n        rfcs.add(nc.toString());\r\n    }\r\n    String re = sb1.toString();\r\n    sb1.setLength(re.length() - 1);\r\n    String nomc = cc.toString();\r\n    cc.setLength(nomc.length() - 1);\r\n    String rep = sb2.toString();\r\n    sb2.setLength(rep.length() - 1);\r\n    String nombresc = nc.toString();\r\n    nc.setLength(nombresc.length() - 1);\r\n    GrupoDto gp = new GrupoDto();\r\n    gp.setJsonC(sb1.toString());\r\n    gp.setJsonP(sb2.toString());\r\n    gp.setJsonNombres(nc.toString());\r\n    gp.setJsonNombresCurso(cc.toString());\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"datos\", gp);\r\n        return new ModelAndView(\"GrupoController/registrarGrupo\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "cursoRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "profRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "re",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nomc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rep",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nombresc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gp",
                        "methodName": "setJsonC",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gp",
                        "methodName": "setJsonP",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gp",
                        "methodName": "setJsonNombres",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gp",
                        "methodName": "setJsonNombresCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.MediaType",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "cursoRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "profRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "gp",
                "methodName": "setJsonC",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gp",
                "methodName": "setJsonP",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gp",
                "methodName": "setJsonNombres",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gp",
                "methodName": "setJsonNombresCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grupo",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "findForClave",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "profRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "grupoRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "agregarGrupo",
                "annotations": [
                    "@RequestMapping(value = \"/registrarGrupo\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "GrupoDto",
                        "variable": "gr",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Grupo grupo = new Grupo();\r",
                    "    String clave = gr.getClave();\r",
                    "    String curso = gr.getCurso();\r",
                    "    String asesor = gr.getAsesor();\r",
                    "    String fInicio = gr.getInicio();\r",
                    "    String fTermino = gr.getTermino();\r",
                    "    Date fechaI = null;\r",
                    "    if (fInicio != \"\") {\r",
                    "        try {\r",
                    "            fechaI = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fInicio);\r",
                    "            grupo.setFecha_inicio(fechaI);\r",
                    "        } catch (ParseException e1) {\r",
                    "            e1.printStackTrace();\r",
                    "            grupo.setFecha_inicio(null);\r",
                    "        }\r",
                    "    }\r",
                    "    Date fechaT = null;\r",
                    "    if (fTermino != \"\") {\r",
                    "        try {\r",
                    "            fechaT = new SimpleDateFormat(\"dd/MM/yyyy\").parse(fTermino);\r",
                    "            grupo.setFecha_fin(fechaT);\r",
                    "        } catch (ParseException e) {\r",
                    "            // TODO Auto-generated catch block\r",
                    "            e.printStackTrace();\r",
                    "            grupo.setFecha_fin(null);\r",
                    "        }\r",
                    "    }\r",
                    "    grupo.setClave(clave);\r",
                    "    System.out.println(curso);\r",
                    "    Curso cursop = cursoRep.findForClave(curso);\r",
                    "    if (cursop != null) {\r",
                    "        grupo.setFk_id_curso(cursop);\r",
                    "    }\r",
                    "    Profesor profe = profRep.findByRfc(asesor);\r",
                    "    if (profe != null) {\r",
                    "        grupo.setFk_id_profesor(profe);\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.REGISTRAR_GRUPO);\r",
                    "    grupoRep.save(grupo);\r",
                    "    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdGrupo agregado con exito!\\\"}\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "registrarInscripcion",
                "annotations": [
                    "@RequestMapping(value = \"/registrarGrupo2\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Curso> list_p1 = cursoRep.findAll();\r",
                    "    List<Profesor> list_p2 = profRep.findAll();\r",
                    "    List<String> claves = new ArrayList<String>();\r",
                    "    List<String> rfcs = new ArrayList<String>();\r",
                    "    StringBuilder sb1 = new StringBuilder();\r",
                    "    StringBuilder sb2 = new StringBuilder();\r",
                    "    StringBuilder nc = new StringBuilder();\r",
                    "    StringBuilder cc = new StringBuilder();\r",
                    "    for (Curso c : list_p1) {\r",
                    "        claves.add(c.getClave());\r",
                    "        sb1.append(c.getClave() + \",\");\r",
                    "    }\r",
                    "    for (Curso c : list_p1) {\r",
                    "        cc.append(c.getNombre() + \",\");\r",
                    "        claves.add(cc.toString());\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        rfcs.add(p.getRfc());\r",
                    "        sb2.append(p.getRfc() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r",
                    "        rfcs.add(nc.toString());\r",
                    "    }\r",
                    "    String re = sb1.toString();\r",
                    "    sb1.setLength(re.length() - 1);\r",
                    "    String nomc = cc.toString();\r",
                    "    cc.setLength(nomc.length() - 1);\r",
                    "    String rep = sb2.toString();\r",
                    "    sb2.setLength(rep.length() - 1);\r",
                    "    String nombresc = nc.toString();\r",
                    "    nc.setLength(nombresc.length() - 1);\r",
                    "    GrupoDto gp = new GrupoDto();\r",
                    "    gp.setJsonC(sb1.toString());\r",
                    "    gp.setJsonP(sb2.toString());\r",
                    "    gp.setJsonNombres(nc.toString());\r",
                    "    gp.setJsonNombresCurso(cc.toString());\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"datos\", gp);\r",
                    "        return new ModelAndView(\"GrupoController/registrarGrupo\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ModificarGrupos": {
        "full_name": "com.cocay.sicecd.controller.ModificarGrupos",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 352,
        "short_name": "ModificarGrupos",
        "src": "com.cocay.sicecd.controller.ModificarGrupos",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionModificaciones\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "proRep",
                "lineBegin": 63,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 66,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grRep",
                "lineBegin": 69,
                "lineEnd": 70
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "crRep",
                "lineBegin": 72,
                "lineEnd": 73
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "genRep",
                "lineBegin": 75,
                "lineEnd": 76
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 78,
                "lineEnd": 79
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 81,
                "lineEnd": 82
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tcRep",
                "lineBegin": 84,
                "lineEnd": 85
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tnRep",
                "lineBegin": 87,
                "lineEnd": 88
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 90,
                "lineEnd": 91
            }
        ],
        "methods": {
            "consultarGrupos": {
                "name": "consultarGrupos",
                "lineBegin": 96,
                "lineEnd": 160,
                "annotations": [
                    "@RequestMapping(value = \"/listaGrupos\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Integer",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fi",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ft",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cm",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apaterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "GrupoDto",
                        "variable": "nm",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Grupo> list_p1 = grRep.findAll();\r\n    List<GrupoDto> lista = new ArrayList<>();\r\n    for (Grupo g : list_p1) {\r\n        Integer id = g.getPk_id_grupo();\r\n        String clave = g.getClave();\r\n        String fi = null;\r\n        if (g.getFecha_fin() != null) {\r\n            fi = g.getFecha_fin().toString().substring(0, 10);\r\n        }\r\n        String ft = null;\r\n        if (g.getFecha_fin() != null) {\r\n            ft = g.getFecha_fin().toString().substring(0, 10);\r\n        }\r\n        String cc = g.getFk_id_curso().getClave();\r\n        String cm = g.getFk_id_curso().getNombre();\r\n        String rfc = \"Sin definir\";\r\n        String nombre = null;\r\n        String apaterno = null;\r\n        if (g.getFk_id_profesor() != null) {\r\n            rfc = g.getFk_id_profesor().getRfc();\r\n            nombre = g.getFk_id_profesor().getNombre();\r\n            apaterno = g.getFk_id_profesor().getApellido_paterno();\r\n        }\r\n        GrupoDto nm = new GrupoDto();\r\n        nm.setIdGrupo(id.toString());\r\n        nm.setClave(clave);\r\n        nm.setInicio(fi);\r\n        nm.setTermino(ft);\r\n        nm.setCurso(cm);\r\n        nm.setClaveCurso(cc);\r\n        nm.setAsesor(rfc);\r\n        nm.setAnombre(nombre);\r\n        nm.setApaterno(apaterno);\r\n        lista.add(nm);\r\n    }\r\n    if (!lista.isEmpty()) {\r\n        model.put(\"grupos\", lista);\r\n        return new ModelAndView(\"ModificarUsuario/listaGrupos\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getPk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFecha_fin()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFecha_fin().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFecha_fin()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFecha_fin().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_profesor()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_profesor()",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "id",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setClaveCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setAnombre",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nm",
                        "methodName": "setApaterno",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    }
                ],
                "exception": []
            },
            "editarGrupo": {
                "name": "editarGrupo",
                "lineBegin": 251,
                "lineEnd": 351,
                "annotations": [
                    "@PostMapping(value = \"/editargrupo\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "GrupoDto",
                        "variable": "grp",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "idP",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "mod",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "pro",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "cur",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String id = grp.getIdentificador();\r\n    Integer idP = Integer.parseInt(id);\r\n    Grupo mod = grRep.findById(idP).get();\r\n    String cambios = \"\";\r\n    if (!mod.getClave().equals(grp.getClave())) {\r\n        cambios += \"Clave de \" + mod.getClave() + \" a \" + grp.getClave() + \"\\n\";\r\n        mod.setClave(grp.getClave());\r\n    }\r\n    if (mod.getFecha_inicio() == null) {\r\n        if (grp.getInicio() != \"\") {\r\n            Date fecha = null;\r\n            try {\r\n                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getInicio());\r\n            } catch (ParseException e) {\r\n                e.printStackTrace();\r\n            }\r\n            mod.setFecha_inicio(fecha);\r\n        }\r\n    } else {\r\n        if (grp.getInicio() != \"\") {\r\n            if (!mod.getFecha_inicio().toString().equals(grp.getInicio())) {\r\n                cambios += \"Fecha de inicio de \" + mod.getFecha_inicio().toString() + \" a \" + grp.getInicio() + \"\\n\";\r\n                Date fecha = null;\r\n                try {\r\n                    fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getInicio());\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                mod.setFecha_inicio(fecha);\r\n            }\r\n        }\r\n    }\r\n    if (mod.getFecha_fin() == null) {\r\n        if (grp.getTermino() != \"\") {\r\n            Date fecha = null;\r\n            try {\r\n                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getTermino());\r\n            } catch (ParseException e) {\r\n                e.printStackTrace();\r\n            }\r\n            mod.setFecha_fin(fecha);\r\n        }\r\n    } else {\r\n        if (grp.getTermino() != \"\") {\r\n            if (!mod.getFecha_fin().toString().equals(grp.getTermino())) {\r\n                cambios += \"Fecha de termino de \" + mod.getFecha_fin().toString() + \" a \" + grp.getTermino() + \"\\n\";\r\n                Date fecha = null;\r\n                try {\r\n                    fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getTermino());\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                mod.setFecha_fin(fecha);\r\n            }\r\n        }\r\n    }\r\n    Profesor pro = proRep.findByRfc(grp.getAsesor());\r\n    if (pro != null) {\r\n        if (mod.getFk_id_profesor() != null) {\r\n            if (!mod.getFk_id_profesor().getRfc().equals(grp.getAsesor())) {\r\n                mod.setFk_id_profesor(pro);\r\n            }\r\n        } else {\r\n            mod.setFk_id_profesor(pro);\r\n        }\r\n    }\r\n    if (grp.getAsesor().contains(\"Sin definir\")) {\r\n        mod.setFk_id_profesor(null);\r\n    }\r\n    Curso cur = crRep.findForClave(grp.getCurso());\r\n    if (cur != null) {\r\n        if (!mod.getFk_id_curso().getClave().equals(grp.getCurso())) {\r\n            mod.setFk_id_curso(cur);\r\n        }\r\n    }\r\n    System.out.println(cambios);\r\n    log.setTrace(LogTypes.MODIFICAR_GRUPO);\r\n    if (!cambios.equals(\"\")) {\r\n        grRep.save(mod);\r\n    }\r\n    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdGrupo editado con exito!\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grp",
                        "methodName": "getIdentificador",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grRep.findById(idP)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_inicio()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_inicio().toString()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_inicio()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_fin()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_fin().toString()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFecha_fin()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod.getFk_id_profesor().getRfc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "grp.getAsesor()",
                        "methodName": "contains",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "crRep",
                        "methodName": "findForClave",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grp",
                        "methodName": "getCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "mod.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod.getFk_id_curso().getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    }
                ],
                "exception": []
            },
            "formEditarGrupo": {
                "name": "formEditarGrupo",
                "lineBegin": 162,
                "lineEnd": 249,
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionG\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Grupo",
                        "variable": "gr",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb1",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "sb2",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "nc",
                        "qualifedType": ""
                    },
                    {
                        "type": "StringBuilder",
                        "variable": "cc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "p",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "re",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nomc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rep",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombresc",
                        "qualifedType": ""
                    },
                    {
                        "type": "GrupoDto",
                        "variable": "gdto",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "formatter",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ffecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "formatter",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ffecha",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Grupo gr = grRep.findById(Integer.parseInt(id)).get();\r\n    List<Curso> list_p1 = crRep.findAll();\r\n    List<Profesor> list_p2 = proRep.findAll();\r\n    List<String> claves = new ArrayList<String>();\r\n    List<String> rfcs = new ArrayList<String>();\r\n    StringBuilder sb1 = new StringBuilder();\r\n    StringBuilder sb2 = new StringBuilder();\r\n    StringBuilder nc = new StringBuilder();\r\n    StringBuilder cc = new StringBuilder();\r\n    for (Curso c : list_p1) {\r\n        claves.add(c.getClave());\r\n        sb1.append(c.getClave() + \",\");\r\n    }\r\n    for (Curso c : list_p1) {\r\n        cc.append(c.getNombre() + \",\");\r\n        claves.add(cc.toString());\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        rfcs.add(p.getRfc());\r\n        sb2.append(p.getRfc() + \",\");\r\n    }\r\n    for (Profesor p : list_p2) {\r\n        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r\n        rfcs.add(nc.toString());\r\n    }\r\n    String re = sb1.toString();\r\n    sb1.setLength(re.length() - 1);\r\n    String nomc = cc.toString();\r\n    cc.setLength(nomc.length() - 1);\r\n    String rep = sb2.toString();\r\n    sb2.setLength(rep.length() - 1);\r\n    String nombresc = nc.toString();\r\n    nc.setLength(nombresc.length() - 1);\r\n    GrupoDto gdto = new GrupoDto();\r\n    gdto.setIdentificador(Integer.toString(gr.getPk_id_grupo()));\r\n    gdto.setClave(gr.getClave());\r\n    if (gr.getFk_id_profesor() != null) {\r\n        gdto.setAsesor(gr.getFk_id_profesor().getRfc());\r\n    } else {\r\n        gdto.setAsesor(\"Sin definir\");\r\n    }\r\n    gdto.setCurso(gr.getFk_id_curso().getClave());\r\n    gdto.setJsonC(sb1.toString());\r\n    gdto.setJsonP(sb2.toString());\r\n    gdto.setJsonNombres(nc.toString());\r\n    gdto.setJsonNombresCurso(cc.toString());\r\n    if (gr.getFecha_inicio() != null) {\r\n        gdto.setInicio(gr.getFecha_inicio().toString().substring(0, 10));\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        String ffecha = formatter.format(gr.getFecha_inicio());\r\n        gdto.setFormatoInicio(ffecha);\r\n    }\r\n    if (gr.getFecha_fin() != null) {\r\n        gdto.setTermino(gr.getFecha_fin().toString().substring(0, 10));\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        String ffecha = formatter.format(gr.getFecha_fin());\r\n        gdto.setFormatoTermino(ffecha);\r\n    }\r\n    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionG\");\r\n    model.addObject(\"grupo\", gdto);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grRep.findById(Integer.parseInt(id))",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "crRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "proRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "append",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "re",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nomc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "rep",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nombresc",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "setLength",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getPk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setIdentificador",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFk_id_profesor()",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setAsesor",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "sb1",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setJsonC",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "sb2",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setJsonP",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "nc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setJsonNombres",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "cc",
                        "methodName": "toString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setJsonNombresCurso",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFecha_inicio()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFecha_inicio().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_inicio",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "formatter",
                        "methodName": "format",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setFormatoInicio",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFecha_fin()",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gr.getFecha_fin().toString()",
                        "methodName": "substring",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "gr",
                        "methodName": "getFecha_fin",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "formatter",
                        "methodName": "format",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "gdto",
                        "methodName": "setFormatoTermino",
                        "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Calendar",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "java.util.stream.Collectors",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "grRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "g",
                "methodName": "getPk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFecha_fin()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFecha_fin().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFecha_fin()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFecha_fin().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_profesor()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_profesor()",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "nm",
                "methodName": "setIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setClaveCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setAnombre",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "nm",
                "methodName": "setApaterno",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grRep.findById(Integer.parseInt(id))",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "crRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "proRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "c",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "p",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "gr",
                "methodName": "getPk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setIdentificador",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "gdto",
                "methodName": "setAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "gdto",
                "methodName": "setCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gdto",
                "methodName": "setJsonC",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gdto",
                "methodName": "setJsonP",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gdto",
                "methodName": "setJsonNombres",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gdto",
                "methodName": "setJsonNombresCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFecha_inicio()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFecha_inicio().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setFormatoInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFecha_fin()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gr.getFecha_fin().toString()",
                "methodName": "substring",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "gr",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "gdto",
                "methodName": "setFormatoTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getIdentificador",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grRep.findById(idP)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grp",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_inicio()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_inicio().toString()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_inicio()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getInicio",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFecha_inicio",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_fin()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_fin().toString()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "getFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFecha_fin()",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp",
                "methodName": "getTermino",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFecha_fin",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "proRep",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFk_id_profesor()",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod.getFk_id_profesor().getRfc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getAsesor",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "grp.getAsesor()",
                "methodName": "contains",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "grp",
                "methodName": "getCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "crRep",
                "methodName": "findForClave",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grp",
                "methodName": "getCurso",
                "targetClassName": "com.cocay.sicecd.dto.GrupoDto"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "mod.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod.getFk_id_curso().getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "grRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultarGrupos",
                "annotations": [
                    "@RequestMapping(value = \"/listaGrupos\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Grupo> list_p1 = grRep.findAll();\r",
                    "    List<GrupoDto> lista = new ArrayList<>();\r",
                    "    for (Grupo g : list_p1) {\r",
                    "        Integer id = g.getPk_id_grupo();\r",
                    "        String clave = g.getClave();\r",
                    "        String fi = null;\r",
                    "        if (g.getFecha_fin() != null) {\r",
                    "            fi = g.getFecha_fin().toString().substring(0, 10);\r",
                    "        }\r",
                    "        String ft = null;\r",
                    "        if (g.getFecha_fin() != null) {\r",
                    "            ft = g.getFecha_fin().toString().substring(0, 10);\r",
                    "        }\r",
                    "        String cc = g.getFk_id_curso().getClave();\r",
                    "        String cm = g.getFk_id_curso().getNombre();\r",
                    "        String rfc = \"Sin definir\";\r",
                    "        String nombre = null;\r",
                    "        String apaterno = null;\r",
                    "        if (g.getFk_id_profesor() != null) {\r",
                    "            rfc = g.getFk_id_profesor().getRfc();\r",
                    "            nombre = g.getFk_id_profesor().getNombre();\r",
                    "            apaterno = g.getFk_id_profesor().getApellido_paterno();\r",
                    "        }\r",
                    "        GrupoDto nm = new GrupoDto();\r",
                    "        nm.setIdGrupo(id.toString());\r",
                    "        nm.setClave(clave);\r",
                    "        nm.setInicio(fi);\r",
                    "        nm.setTermino(ft);\r",
                    "        nm.setCurso(cm);\r",
                    "        nm.setClaveCurso(cc);\r",
                    "        nm.setAsesor(rfc);\r",
                    "        nm.setAnombre(nombre);\r",
                    "        nm.setApaterno(apaterno);\r",
                    "        lista.add(nm);\r",
                    "    }\r",
                    "    if (!lista.isEmpty()) {\r",
                    "        model.put(\"grupos\", lista);\r",
                    "        return new ModelAndView(\"ModificarUsuario/listaGrupos\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "editarGrupo",
                "annotations": [
                    "@PostMapping(value = \"/editargrupo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "GrupoDto",
                        "variable": "grp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String id = grp.getIdentificador();\r",
                    "    Integer idP = Integer.parseInt(id);\r",
                    "    Grupo mod = grRep.findById(idP).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (!mod.getClave().equals(grp.getClave())) {\r",
                    "        cambios += \"Clave de \" + mod.getClave() + \" a \" + grp.getClave() + \"\\n\";\r",
                    "        mod.setClave(grp.getClave());\r",
                    "    }\r",
                    "    if (mod.getFecha_inicio() == null) {\r",
                    "        if (grp.getInicio() != \"\") {\r",
                    "            Date fecha = null;\r",
                    "            try {\r",
                    "                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getInicio());\r",
                    "            } catch (ParseException e) {\r",
                    "                e.printStackTrace();\r",
                    "            }\r",
                    "            mod.setFecha_inicio(fecha);\r",
                    "        }\r",
                    "    } else {\r",
                    "        if (grp.getInicio() != \"\") {\r",
                    "            if (!mod.getFecha_inicio().toString().equals(grp.getInicio())) {\r",
                    "                cambios += \"Fecha de inicio de \" + mod.getFecha_inicio().toString() + \" a \" + grp.getInicio() + \"\\n\";\r",
                    "                Date fecha = null;\r",
                    "                try {\r",
                    "                    fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getInicio());\r",
                    "                } catch (ParseException e) {\r",
                    "                    e.printStackTrace();\r",
                    "                }\r",
                    "                mod.setFecha_inicio(fecha);\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    if (mod.getFecha_fin() == null) {\r",
                    "        if (grp.getTermino() != \"\") {\r",
                    "            Date fecha = null;\r",
                    "            try {\r",
                    "                fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getTermino());\r",
                    "            } catch (ParseException e) {\r",
                    "                e.printStackTrace();\r",
                    "            }\r",
                    "            mod.setFecha_fin(fecha);\r",
                    "        }\r",
                    "    } else {\r",
                    "        if (grp.getTermino() != \"\") {\r",
                    "            if (!mod.getFecha_fin().toString().equals(grp.getTermino())) {\r",
                    "                cambios += \"Fecha de termino de \" + mod.getFecha_fin().toString() + \" a \" + grp.getTermino() + \"\\n\";\r",
                    "                Date fecha = null;\r",
                    "                try {\r",
                    "                    fecha = new SimpleDateFormat(\"dd/MM/yyyy\").parse(grp.getTermino());\r",
                    "                } catch (ParseException e) {\r",
                    "                    e.printStackTrace();\r",
                    "                }\r",
                    "                mod.setFecha_fin(fecha);\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "    Profesor pro = proRep.findByRfc(grp.getAsesor());\r",
                    "    if (pro != null) {\r",
                    "        if (mod.getFk_id_profesor() != null) {\r",
                    "            if (!mod.getFk_id_profesor().getRfc().equals(grp.getAsesor())) {\r",
                    "                mod.setFk_id_profesor(pro);\r",
                    "            }\r",
                    "        } else {\r",
                    "            mod.setFk_id_profesor(pro);\r",
                    "        }\r",
                    "    }\r",
                    "    if (grp.getAsesor().contains(\"Sin definir\")) {\r",
                    "        mod.setFk_id_profesor(null);\r",
                    "    }\r",
                    "    Curso cur = crRep.findForClave(grp.getCurso());\r",
                    "    if (cur != null) {\r",
                    "        if (!mod.getFk_id_curso().getClave().equals(grp.getCurso())) {\r",
                    "            mod.setFk_id_curso(cur);\r",
                    "        }\r",
                    "    }\r",
                    "    System.out.println(cambios);\r",
                    "    log.setTrace(LogTypes.MODIFICAR_GRUPO);\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        grRep.save(mod);\r",
                    "    }\r",
                    "    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdGrupo editado con exito!\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formEditarGrupo",
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionG\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Grupo gr = grRep.findById(Integer.parseInt(id)).get();\r",
                    "    List<Curso> list_p1 = crRep.findAll();\r",
                    "    List<Profesor> list_p2 = proRep.findAll();\r",
                    "    List<String> claves = new ArrayList<String>();\r",
                    "    List<String> rfcs = new ArrayList<String>();\r",
                    "    StringBuilder sb1 = new StringBuilder();\r",
                    "    StringBuilder sb2 = new StringBuilder();\r",
                    "    StringBuilder nc = new StringBuilder();\r",
                    "    StringBuilder cc = new StringBuilder();\r",
                    "    for (Curso c : list_p1) {\r",
                    "        claves.add(c.getClave());\r",
                    "        sb1.append(c.getClave() + \",\");\r",
                    "    }\r",
                    "    for (Curso c : list_p1) {\r",
                    "        cc.append(c.getNombre() + \",\");\r",
                    "        claves.add(cc.toString());\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        rfcs.add(p.getRfc());\r",
                    "        sb2.append(p.getRfc() + \",\");\r",
                    "    }\r",
                    "    for (Profesor p : list_p2) {\r",
                    "        nc.append(p.getApellido_paterno() + \" \" + p.getApellido_materno() + \" \" + p.getNombre() + \",\");\r",
                    "        rfcs.add(nc.toString());\r",
                    "    }\r",
                    "    String re = sb1.toString();\r",
                    "    sb1.setLength(re.length() - 1);\r",
                    "    String nomc = cc.toString();\r",
                    "    cc.setLength(nomc.length() - 1);\r",
                    "    String rep = sb2.toString();\r",
                    "    sb2.setLength(rep.length() - 1);\r",
                    "    String nombresc = nc.toString();\r",
                    "    nc.setLength(nombresc.length() - 1);\r",
                    "    GrupoDto gdto = new GrupoDto();\r",
                    "    gdto.setIdentificador(Integer.toString(gr.getPk_id_grupo()));\r",
                    "    gdto.setClave(gr.getClave());\r",
                    "    if (gr.getFk_id_profesor() != null) {\r",
                    "        gdto.setAsesor(gr.getFk_id_profesor().getRfc());\r",
                    "    } else {\r",
                    "        gdto.setAsesor(\"Sin definir\");\r",
                    "    }\r",
                    "    gdto.setCurso(gr.getFk_id_curso().getClave());\r",
                    "    gdto.setJsonC(sb1.toString());\r",
                    "    gdto.setJsonP(sb2.toString());\r",
                    "    gdto.setJsonNombres(nc.toString());\r",
                    "    gdto.setJsonNombresCurso(cc.toString());\r",
                    "    if (gr.getFecha_inicio() != null) {\r",
                    "        gdto.setInicio(gr.getFecha_inicio().toString().substring(0, 10));\r",
                    "        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r",
                    "        String ffecha = formatter.format(gr.getFecha_inicio());\r",
                    "        gdto.setFormatoInicio(ffecha);\r",
                    "    }\r",
                    "    if (gr.getFecha_fin() != null) {\r",
                    "        gdto.setTermino(gr.getFecha_fin().toString().substring(0, 10));\r",
                    "        SimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy\");\r",
                    "        String ffecha = formatter.format(gr.getFecha_fin());\r",
                    "        gdto.setFormatoTermino(ffecha);\r",
                    "    }\r",
                    "    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionG\");\r",
                    "    model.addObject(\"grupo\", gdto);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.GrupoRep": {
        "full_name": "com.cocay.sicecd.repo.GrupoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 95,
        "short_name": "GrupoRep",
        "src": "com.cocay.sicecd.repo.GrupoRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByFechaFin": {
                "name": "findByFechaFin",
                "lineBegin": 60,
                "lineEnd": 64,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_fin >= :fecha_ini \" + \"AND g.fecha_fin <= :fecha_fin \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByClave": {
                "name": "findByClave",
                "lineBegin": 40,
                "lineEnd": 41,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) LIKE CONCAT('%',:clave,'%')\")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "saveC": {
                "name": "saveC",
                "lineBegin": 82,
                "lineEnd": 85,
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Grupo (clave, fk_id_curso) VALUES (:clave, :fk_id_curso)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "fk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByFecha": {
                "name": "findByFecha",
                "lineBegin": 66,
                "lineEnd": 76,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_inicio >= :fecha_ini_1 \" + \"AND g.fecha_inicio <= :fecha_ini_2 \" + \"AND g.fecha_fin >= :fecha_fin_1 \" + \"AND g.fecha_fin <= :fecha_fin_2 \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findForClave": {
                "name": "findForClave",
                "lineBegin": 47,
                "lineEnd": 48,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE g.clave = :clave \")"
                ],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByIdAsesor": {
                "name": "findByIdAsesor",
                "lineBegin": 33,
                "lineEnd": 34,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Grupo WHERE fk_id_profesor = :id_asesor\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "id_asesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findAll": {
                "name": "findAll",
                "lineBegin": 20,
                "lineEnd": 21,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g\")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findId": {
                "name": "findId",
                "lineBegin": 23,
                "lineEnd": 24,
                "annotations": [
                    "@Query(\"SELECT pk_id_grupo FROM Grupo\")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByFechaInicio": {
                "name": "findByFechaInicio",
                "lineBegin": 54,
                "lineEnd": 58,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_inicio >= :fecha_ini \" + \"AND g.fecha_inicio <= :fecha_fin \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "loadAllGrupo": {
                "name": "loadAllGrupo",
                "lineBegin": 26,
                "lineEnd": 27,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Grupo\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByClaveGrupoIdCurso": {
                "name": "findByClaveGrupoIdCurso",
                "lineBegin": 87,
                "lineEnd": 88,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) = :clave AND g.fk_id_curso = :curso\")"
                ],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByClaveGrupo": {
                "name": "findByClaveGrupo",
                "lineBegin": 93,
                "lineEnd": 94,
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) = :clave\")"
                ],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Grupo, Integer>"
        ],
        "imports": [
            "java.util.Date",
            "java.util.List",
            "org.springframework.data.jpa.repository.Modifying",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "org.springframework.transaction.annotation.Transactional",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByFechaFin",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_fin >= :fecha_ini \" + \"AND g.fecha_fin <= :fecha_fin \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByClave",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) LIKE CONCAT('%',:clave,'%')\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "saveC",
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Grupo (clave, fk_id_curso) VALUES (:clave, :fk_id_curso)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "fk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByFecha",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_inicio >= :fecha_ini_1 \" + \"AND g.fecha_inicio <= :fecha_ini_2 \" + \"AND g.fecha_fin >= :fecha_fin_1 \" + \"AND g.fecha_fin <= :fecha_fin_2 \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findForClave",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE g.clave = :clave \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByIdAsesor",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Grupo WHERE fk_id_profesor = :id_asesor\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "id_asesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findAll",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findId",
                "annotations": [
                    "@Query(\"SELECT pk_id_grupo FROM Grupo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByFechaInicio",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g \" + \"WHERE g.fecha_inicio >= :fecha_ini \" + \"AND g.fecha_inicio <= :fecha_fin \" + \"AND upper(g.clave) LIKE CONCAT('%',:clave,'%') \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [
                    {
                        "type": "Date",
                        "variable": "fecha_ini",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "loadAllGrupo",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Grupo\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByClaveGrupoIdCurso",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) = :clave AND g.fk_id_curso = :curso\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByClaveGrupo",
                "annotations": [
                    "@Query(\"SELECT g FROM Grupo g WHERE upper(g.clave) = :clave\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ConsultaGrupoController": {
        "full_name": "com.cocay.sicecd.controller.ConsultaGrupoController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 199,
        "short_name": "ConsultaGrupoController",
        "src": "com.cocay.sicecd.controller.ConsultaGrupoController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupo",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ConsultaGrupoController",
                "variable": "controller",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 35,
                "lineEnd": 35
            }
        ],
        "methods": {
            "consultaSimpleGrupo": {
                "name": "consultaSimpleGrupo",
                "lineBegin": 46,
                "lineEnd": 90,
                "annotations": [
                    "@RequestMapping(value = \"/consultaSimpleGrupo\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "fecha_inicio_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_fin_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curso_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "format",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "gclave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        String fecha_inicio_grupo = request.getParameter(\"fecha_inicio_grupo\");\r\n        String fecha_fin_grupo = request.getParameter(\"fecha_fin_grupo\");\r\n        String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r\n        String curso_grupo = request.getParameter(\"curso_grupo\").toUpperCase().trim();\r\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        Date fecha_ini, fecha_fin;\r\n        List<Grupo> grupos;\r\n        if (fecha_inicio_grupo != \"\" && fecha_fin_grupo != \"\") {\r\n            fecha_ini = format.parse(fecha_inicio_grupo);\r\n            fecha_fin = format.parse(fecha_fin_grupo);\r\n            grupos = grupo.findByFechaInicio(fecha_ini, fecha_fin, clave_grupo);\r\n        } else {\r\n            grupos = grupo.findByClave(clave_grupo);\r\n        }\r\n        //Filtrando por clave de curso\r\n        if (curso_grupo != null) {\r\n            List<Grupo> grupos2 = new ArrayList<Grupo>(grupos);\r\n            for (Grupo g : grupos2) {\r\n                String gclave = normalizar(g.getFk_id_curso().getClave()).toUpperCase().trim();\r\n                if (!gclave.contains(curso_grupo)) {\r\n                    grupos.remove(g);\r\n                }\r\n            }\r\n        }\r\n        if (!grupos.isEmpty() || grupos.size() > 0) {\r\n            model.put(\"grupos\", grupos);\r\n            model.put(\"controller\", controller);\r\n            return new ModelAndView(\"ConsultarGrupo/muestraListaGrupo\", model);\r\n        } else {\r\n            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r\n            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n        }\r\n    } catch (NullPointerException e) {\r\n        LOGGER.error(\"En la Tabla Grupo se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r\n        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupo",
                        "methodName": "findByClave",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFechaInicio",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "gclave",
                        "methodName": "contains",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "ParseException"
                ]
            },
            "normalizar": {
                "name": "normalizar",
                "lineBegin": 163,
                "lineEnd": 174,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    if (cadena == null) {\r\n        return \"\";\r\n    }\r\n    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r\n    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "formatoNombre": {
                "name": "formatoNombre",
                "lineBegin": 182,
                "lineEnd": 198,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "cadenas",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String nombre = \"\";\r\n    if (profesor.isBlank()) {\r\n        return nombre;\r\n    }\r\n    String[] cadenas = profesor.split(\" \");\r\n    for (int i = 0; i < cadenas.length - 1; i++) {\r\n        nombre += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r\n    }\r\n    nombre += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "consultaAvanzadaGrupo": {
                "name": "consultaAvanzadaGrupo",
                "lineBegin": 96,
                "lineEnd": 155,
                "annotations": [
                    "@RequestMapping(value = \"/consultaAvanzadaGrupo\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "fecha_inicio_grupo_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_inicio_grupo_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_fin_grupo_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "fecha_fin_grupo_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curso_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "SimpleDateFormat",
                        "variable": "format",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_ini_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_1",
                        "qualifedType": ""
                    },
                    {
                        "type": "Date",
                        "variable": "fecha_fin_2",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "gclave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "g",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        String fecha_inicio_grupo_1 = request.getParameter(\"fecha_inicio_grupo_1\");\r\n        String fecha_inicio_grupo_2 = request.getParameter(\"fecha_inicio_grupo_2\");\r\n        String fecha_fin_grupo_1 = request.getParameter(\"fecha_fin_grupo_1\");\r\n        String fecha_fin_grupo_2 = request.getParameter(\"fecha_fin_grupo_2\");\r\n        String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r\n        String curso_grupo = request.getParameter(\"curso_grupo\").toUpperCase().trim();\r\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        Date fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2;\r\n        List<Grupo> grupos, grupos2;\r\n        if (fecha_inicio_grupo_1 != \"\" && fecha_fin_grupo_1 == \"\") {\r\n            fecha_ini_1 = format.parse(fecha_inicio_grupo_1);\r\n            fecha_ini_2 = format.parse(fecha_inicio_grupo_2);\r\n            grupos = grupo.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r\n            grupos2 = grupo.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r\n        } else if (fecha_inicio_grupo_1 == \"\" && fecha_fin_grupo_1 != \"\") {\r\n            fecha_fin_1 = format.parse(fecha_fin_grupo_1);\r\n            fecha_fin_2 = format.parse(fecha_fin_grupo_2);\r\n            grupos = grupo.findByFechaFin(fecha_fin_1, fecha_fin_2, clave_grupo);\r\n            grupos2 = grupo.findByFechaFin(fecha_fin_1, fecha_fin_2, clave_grupo);\r\n        } else if (fecha_inicio_grupo_1 != \"\" && fecha_fin_grupo_1 != \"\") {\r\n            fecha_ini_1 = format.parse(fecha_inicio_grupo_1);\r\n            fecha_ini_2 = format.parse(fecha_inicio_grupo_2);\r\n            fecha_fin_1 = format.parse(fecha_fin_grupo_1);\r\n            fecha_fin_2 = format.parse(fecha_fin_grupo_2);\r\n            grupos = grupo.findByFecha(fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2, clave_grupo);\r\n            grupos2 = grupo.findByFecha(fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2, clave_grupo);\r\n        } else {\r\n            grupos = grupo.findAll();\r\n            grupos2 = grupo.findAll();\r\n        }\r\n        //Filtrando por clave de curso\r\n        if (curso_grupo != null) {\r\n            for (Grupo g : grupos2) {\r\n                String gclave = normalizar(g.getFk_id_curso().getClave()).toUpperCase().trim();\r\n                if (!gclave.contains(curso_grupo)) {\r\n                    grupos.remove(g);\r\n                }\r\n            }\r\n        }\r\n        if (!grupos.isEmpty() || grupos.size() > 0) {\r\n            model.put(\"grupos\", grupos);\r\n            model.put(\"controller\", controller);\r\n            return new ModelAndView(\"ConsultarGrupo/muestraListaGrupo\", model);\r\n        } else {\r\n            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r\n            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n        }\r\n    } catch (NullPointerException e) {\r\n        LOGGER.error(\"En la Tabla Grupo se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r\n        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupo",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFecha",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFecha",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFechaFin",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFechaFin",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "format",
                        "methodName": "parse",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFechaInicio",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "findByFechaInicio",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "g",
                        "methodName": "getFk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "g.getFk_id_curso()",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "gclave",
                        "methodName": "contains",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "ParseException"
                ]
            },
            "consultaCurso": {
                "name": "consultaCurso",
                "lineBegin": 37,
                "lineEnd": 40,
                "annotations": [
                    "@RequestMapping(value = \"/consultaGrupo\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"ConsultarGrupo/consultaGrupo\";\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.text.Normalizer",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.ConsultaGrupoController"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByClave",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFechaInicio",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "grupo",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFecha",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFecha",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFechaFin",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFechaFin",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFechaInicio",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "findByFechaInicio",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "g",
                "methodName": "getFk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "g.getFk_id_curso()",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "consultaSimpleGrupo",
                "annotations": [
                    "@RequestMapping(value = \"/consultaSimpleGrupo\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        String fecha_inicio_grupo = request.getParameter(\"fecha_inicio_grupo\");\r",
                    "        String fecha_fin_grupo = request.getParameter(\"fecha_fin_grupo\");\r",
                    "        String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r",
                    "        String curso_grupo = request.getParameter(\"curso_grupo\").toUpperCase().trim();\r",
                    "        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r",
                    "        Date fecha_ini, fecha_fin;\r",
                    "        List<Grupo> grupos;\r",
                    "        if (fecha_inicio_grupo != \"\" && fecha_fin_grupo != \"\") {\r",
                    "            fecha_ini = format.parse(fecha_inicio_grupo);\r",
                    "            fecha_fin = format.parse(fecha_fin_grupo);\r",
                    "            grupos = grupo.findByFechaInicio(fecha_ini, fecha_fin, clave_grupo);\r",
                    "        } else {\r",
                    "            grupos = grupo.findByClave(clave_grupo);\r",
                    "        }\r",
                    "        //Filtrando por clave de curso\r",
                    "        if (curso_grupo != null) {\r",
                    "            List<Grupo> grupos2 = new ArrayList<Grupo>(grupos);\r",
                    "            for (Grupo g : grupos2) {\r",
                    "                String gclave = normalizar(g.getFk_id_curso().getClave()).toUpperCase().trim();\r",
                    "                if (!gclave.contains(curso_grupo)) {\r",
                    "                    grupos.remove(g);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        if (!grupos.isEmpty() || grupos.size() > 0) {\r",
                    "            model.put(\"grupos\", grupos);\r",
                    "            model.put(\"controller\", controller);\r",
                    "            return new ModelAndView(\"ConsultarGrupo/muestraListaGrupo\", model);\r",
                    "        } else {\r",
                    "            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r",
                    "            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "        }\r",
                    "    } catch (NullPointerException e) {\r",
                    "        LOGGER.error(\"En la Tabla Grupo se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r",
                    "        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "normalizar",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (cadena == null) {\r",
                    "        return \"\";\r",
                    "    }\r",
                    "    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r",
                    "    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formatoNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String nombre = \"\";\r",
                    "    if (profesor.isBlank()) {\r",
                    "        return nombre;\r",
                    "    }\r",
                    "    String[] cadenas = profesor.split(\" \");\r",
                    "    for (int i = 0; i < cadenas.length - 1; i++) {\r",
                    "        nombre += cadenas[i].substring(0, 1).toUpperCase() + cadenas[i].substring(1).toLowerCase() + \" \";\r",
                    "    }\r",
                    "    nombre += cadenas[cadenas.length - 1].substring(0, 1).toUpperCase() + cadenas[cadenas.length - 1].substring(1).toLowerCase();\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultaAvanzadaGrupo",
                "annotations": [
                    "@RequestMapping(value = \"/consultaAvanzadaGrupo\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        String fecha_inicio_grupo_1 = request.getParameter(\"fecha_inicio_grupo_1\");\r",
                    "        String fecha_inicio_grupo_2 = request.getParameter(\"fecha_inicio_grupo_2\");\r",
                    "        String fecha_fin_grupo_1 = request.getParameter(\"fecha_fin_grupo_1\");\r",
                    "        String fecha_fin_grupo_2 = request.getParameter(\"fecha_fin_grupo_2\");\r",
                    "        String clave_grupo = request.getParameter(\"clave_grupo\").toUpperCase().trim();\r",
                    "        String curso_grupo = request.getParameter(\"curso_grupo\").toUpperCase().trim();\r",
                    "        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\r",
                    "        Date fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2;\r",
                    "        List<Grupo> grupos, grupos2;\r",
                    "        if (fecha_inicio_grupo_1 != \"\" && fecha_fin_grupo_1 == \"\") {\r",
                    "            fecha_ini_1 = format.parse(fecha_inicio_grupo_1);\r",
                    "            fecha_ini_2 = format.parse(fecha_inicio_grupo_2);\r",
                    "            grupos = grupo.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r",
                    "            grupos2 = grupo.findByFechaInicio(fecha_ini_1, fecha_ini_2, clave_grupo);\r",
                    "        } else if (fecha_inicio_grupo_1 == \"\" && fecha_fin_grupo_1 != \"\") {\r",
                    "            fecha_fin_1 = format.parse(fecha_fin_grupo_1);\r",
                    "            fecha_fin_2 = format.parse(fecha_fin_grupo_2);\r",
                    "            grupos = grupo.findByFechaFin(fecha_fin_1, fecha_fin_2, clave_grupo);\r",
                    "            grupos2 = grupo.findByFechaFin(fecha_fin_1, fecha_fin_2, clave_grupo);\r",
                    "        } else if (fecha_inicio_grupo_1 != \"\" && fecha_fin_grupo_1 != \"\") {\r",
                    "            fecha_ini_1 = format.parse(fecha_inicio_grupo_1);\r",
                    "            fecha_ini_2 = format.parse(fecha_inicio_grupo_2);\r",
                    "            fecha_fin_1 = format.parse(fecha_fin_grupo_1);\r",
                    "            fecha_fin_2 = format.parse(fecha_fin_grupo_2);\r",
                    "            grupos = grupo.findByFecha(fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2, clave_grupo);\r",
                    "            grupos2 = grupo.findByFecha(fecha_ini_1, fecha_ini_2, fecha_fin_1, fecha_fin_2, clave_grupo);\r",
                    "        } else {\r",
                    "            grupos = grupo.findAll();\r",
                    "            grupos2 = grupo.findAll();\r",
                    "        }\r",
                    "        //Filtrando por clave de curso\r",
                    "        if (curso_grupo != null) {\r",
                    "            for (Grupo g : grupos2) {\r",
                    "                String gclave = normalizar(g.getFk_id_curso().getClave()).toUpperCase().trim();\r",
                    "                if (!gclave.contains(curso_grupo)) {\r",
                    "                    grupos.remove(g);\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "        if (!grupos.isEmpty() || grupos.size() > 0) {\r",
                    "            model.put(\"grupos\", grupos);\r",
                    "            model.put(\"controller\", controller);\r",
                    "            return new ModelAndView(\"ConsultarGrupo/muestraListaGrupo\", model);\r",
                    "        } else {\r",
                    "            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r",
                    "            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "        }\r",
                    "    } catch (NullPointerException e) {\r",
                    "        LOGGER.error(\"En la Tabla Grupo se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r",
                    "        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            },
            {
                "name": "consultaCurso",
                "annotations": [
                    "@RequestMapping(value = \"/consultaGrupo\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"ConsultarGrupo/consultaGrupo\";\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ReaderGrupo": {
        "full_name": "com.cocay.sicecd.step.ReaderGrupo",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 38,
        "short_name": "ReaderGrupo",
        "src": "com.cocay.sicecd.step.ReaderGrupo",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "reader": {
                "name": "reader",
                "lineBegin": 17,
                "lineEnd": 37,
                "annotations": [],
                "returnDataType": [
                    "FlatFileItemReader<Grupo>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Grupo> reader = new FlatFileItemReader<Grupo>();\r\n    reader.setResource(new ClassPathResource(path));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Grupo>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"clave\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Grupo>() {\r\n\r\n                {\r\n                    setTargetType(Grupo.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.batch.item.file.FlatFileItemReader",
            "org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper",
            "org.springframework.batch.item.file.mapping.DefaultLineMapper",
            "org.springframework.batch.item.file.transform.DelimitedLineTokenizer",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.core.io.ClassPathResource",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "reader",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Grupo>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Grupo> reader = new FlatFileItemReader<Grupo>();\r",
                    "    reader.setResource(new ClassPathResource(path));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Grupo>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"clave\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Grupo>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Grupo.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.GrupoDto": {
        "full_name": "com.cocay.sicecd.dto.GrupoDto",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 175,
        "short_name": "GrupoDto",
        "src": "com.cocay.sicecd.dto.GrupoDto",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "inicio",
                "lineBegin": 7,
                "lineEnd": 7
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "termino",
                "lineBegin": 9,
                "lineEnd": 9
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "curso",
                "lineBegin": 11,
                "lineEnd": 11
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "asesor",
                "lineBegin": 13,
                "lineEnd": 13
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "identificador",
                "lineBegin": 15,
                "lineEnd": 15
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "idGrupo",
                "lineBegin": 17,
                "lineEnd": 17
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonC",
                "lineBegin": 19,
                "lineEnd": 19
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonP",
                "lineBegin": 21,
                "lineEnd": 21
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonNombres",
                "lineBegin": 23,
                "lineEnd": 23
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "claveCurso",
                "lineBegin": 25,
                "lineEnd": 25
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "jsonNombresCurso",
                "lineBegin": 27,
                "lineEnd": 27
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "anombre",
                "lineBegin": 29,
                "lineEnd": 29
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "apaterno",
                "lineBegin": 31,
                "lineEnd": 31
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "temp_curso",
                "lineBegin": 33,
                "lineEnd": 33
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "formatoInicio",
                "lineBegin": 35,
                "lineEnd": 35
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "formatoTermino",
                "lineBegin": 37,
                "lineEnd": 37
            }
        ],
        "methods": {
            "getIdentificador": {
                "name": "getIdentificador",
                "lineBegin": 95,
                "lineEnd": 97,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return identificador;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFormatoTermino": {
                "name": "setFormatoTermino",
                "lineBegin": 51,
                "lineEnd": 53,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "formatoTermino",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.formatoTermino = formatoTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClaveCurso": {
                "name": "setClaveCurso",
                "lineBegin": 139,
                "lineEnd": 141,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "claveCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.claveCurso = claveCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonC": {
                "name": "getJsonC",
                "lineBegin": 111,
                "lineEnd": 113,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonC;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCurso": {
                "name": "setCurso",
                "lineBegin": 83,
                "lineEnd": 85,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.curso = curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTemp_curso": {
                "name": "getTemp_curso",
                "lineBegin": 159,
                "lineEnd": 161,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return temp_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonP": {
                "name": "setJsonP",
                "lineBegin": 123,
                "lineEnd": 125,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonP",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonP = jsonP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave": {
                "name": "getClave",
                "lineBegin": 55,
                "lineEnd": 57,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setAsesor": {
                "name": "setAsesor",
                "lineBegin": 91,
                "lineEnd": 93,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "asesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.asesor = asesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave": {
                "name": "setClave",
                "lineBegin": 59,
                "lineEnd": 61,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave = clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonNombres": {
                "name": "setJsonNombres",
                "lineBegin": 131,
                "lineEnd": 133,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonNombres",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonNombres = jsonNombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setAnombre": {
                "name": "setAnombre",
                "lineBegin": 147,
                "lineEnd": 149,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "anombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.anombre = anombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getInicio": {
                "name": "getInicio",
                "lineBegin": 63,
                "lineEnd": 65,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return inicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTermino": {
                "name": "setTermino",
                "lineBegin": 75,
                "lineEnd": 77,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "termino",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.termino = termino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getAsesor": {
                "name": "getAsesor",
                "lineBegin": 87,
                "lineEnd": 89,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return asesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonP": {
                "name": "getJsonP",
                "lineBegin": 119,
                "lineEnd": 121,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonP;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setInicio": {
                "name": "setInicio",
                "lineBegin": 67,
                "lineEnd": 69,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "inicio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.inicio = inicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCurso": {
                "name": "getCurso",
                "lineBegin": 79,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdentificador": {
                "name": "setIdentificador",
                "lineBegin": 99,
                "lineEnd": 101,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "identificador",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.identificador = identificador;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdGrupo": {
                "name": "setIdGrupo",
                "lineBegin": 107,
                "lineEnd": 109,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idGrupo = idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFormatoTermino": {
                "name": "getFormatoTermino",
                "lineBegin": 47,
                "lineEnd": 49,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return formatoTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setApaterno": {
                "name": "setApaterno",
                "lineBegin": 155,
                "lineEnd": 157,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "apaterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.apaterno = apaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdGrupo": {
                "name": "getIdGrupo",
                "lineBegin": 103,
                "lineEnd": 105,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonC": {
                "name": "setJsonC",
                "lineBegin": 115,
                "lineEnd": 117,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonC",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonC = jsonC;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFormatoInicio": {
                "name": "setFormatoInicio",
                "lineBegin": 43,
                "lineEnd": 45,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "formatoInicio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.formatoInicio = formatoInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClaveCurso": {
                "name": "getClaveCurso",
                "lineBegin": 135,
                "lineEnd": 137,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return claveCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFormatoInicio": {
                "name": "getFormatoInicio",
                "lineBegin": 39,
                "lineEnd": 41,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return formatoInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonNombresCurso": {
                "name": "getJsonNombresCurso",
                "lineBegin": 167,
                "lineEnd": 169,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonNombresCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getApaterno": {
                "name": "getApaterno",
                "lineBegin": 151,
                "lineEnd": 153,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return apaterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setJsonNombresCurso": {
                "name": "setJsonNombresCurso",
                "lineBegin": 171,
                "lineEnd": 173,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jsonNombresCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.jsonNombresCurso = jsonNombresCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getAnombre": {
                "name": "getAnombre",
                "lineBegin": 143,
                "lineEnd": 145,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return anombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTermino": {
                "name": "getTermino",
                "lineBegin": 71,
                "lineEnd": 73,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return termino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getJsonNombres": {
                "name": "getJsonNombres",
                "lineBegin": 127,
                "lineEnd": 129,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return jsonNombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTemp_curso": {
                "name": "setTemp_curso",
                "lineBegin": 163,
                "lineEnd": 165,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "temp_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.temp_curso = temp_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getIdentificador",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return identificador;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFormatoTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "formatoTermino",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.formatoTermino = formatoTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClaveCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "claveCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.claveCurso = claveCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonC",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonC;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.curso = curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTemp_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return temp_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonP",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonP = jsonP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setAsesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "asesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.asesor = asesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave = clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonNombres",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonNombres = jsonNombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setAnombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "anombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.anombre = anombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return inicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "termino",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.termino = termino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getAsesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return asesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonP",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonP;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "inicio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.inicio = inicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdentificador",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "identificador",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.identificador = identificador;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idGrupo = idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFormatoTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return formatoTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setApaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "apaterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.apaterno = apaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonC",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonC",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonC = jsonC;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFormatoInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "formatoInicio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.formatoInicio = formatoInicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClaveCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return claveCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFormatoInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return formatoInicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonNombresCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonNombresCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getApaterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return apaterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setJsonNombresCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jsonNombresCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.jsonNombresCurso = jsonNombresCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getAnombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return anombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return termino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getJsonNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return jsonNombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTemp_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "temp_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.temp_curso = temp_curso;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.WebService": {
        "full_name": "com.cocay.sicecd.service.WebService",
        "constructor": [],
        "package": "com.cocay.sicecd.service",
        "begin": 1,
        "end": 492,
        "short_name": "WebService",
        "src": "com.cocay.sicecd.service.WebService",
        "annotations": [
            "@Service",
            "@PropertySource(ignoreResourceNotFound = true, value = \"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesor",
                "lineBegin": 54,
                "lineEnd": 55
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupo_rep",
                "lineBegin": 56,
                "lineEnd": 57
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "curso_rep",
                "lineBegin": 58,
                "lineEnd": 59
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "inscripcionRep",
                "lineBegin": 60,
                "lineEnd": 61
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Url_ws_profesorRep",
                "variable": "urls",
                "lineBegin": 62,
                "lineEnd": 63
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Url_ws_cursoRep",
                "variable": "urls_curso",
                "lineBegin": 64,
                "lineEnd": 65
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Url_ws_inscripcionRep",
                "variable": "urls_inscripcion",
                "lineBegin": 66,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 68,
                "lineEnd": 69
            },
            {
                "annotations": [
                    "@Value(\"${ws.url_key}\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "key",
                "lineBegin": 70,
                "lineEnd": 71
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 72,
                "lineEnd": 72
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "FIRST_ELEMENT",
                "lineBegin": 73,
                "lineEnd": 73
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "SECOND_ELEMENT",
                "lineBegin": 74,
                "lineEnd": 74
            }
        ],
        "methods": {
            "aprobadoCalificacion": {
                "name": "aprobadoCalificacion",
                "lineBegin": 488,
                "lineEnd": 490,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "double",
                        "variable": "n",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return n >= 60 ? true : false;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "insert_update_Profesor": {
                "name": "insert_update_Profesor",
                "lineBegin": 343,
                "lineEnd": 412,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "JSONArray",
                        "variable": "arr",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "jsonProductObject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellidos",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "email",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "institucion",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "ciudad",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "exits_rfc",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    JSONArray arr = new JSONArray(jSonResultString);\r\n    String apellido_paterno = \"\";\r\n    String apellido_materno = \"\";\r\n    // para cada objeto del json\r\n    for (int i = 0; i < arr.length(); i++) {\r\n        JSONObject jsonProductObject = arr.getJSONObject(i);\r\n        String curp = jsonProductObject.getString(\"username\").toUpperCase();\r\n        String nombre = jsonProductObject.getString(\"firstname\");\r\n        String apellidos = jsonProductObject.getString(\"lastname\");\r\n        String email = jsonProductObject.getString(\"email\");\r\n        String institucion = jsonProductObject.getString(\"institution\");\r\n        String ciudad = jsonProductObject.getString(\"city\");\r\n        String rfc;\r\n        if (curp.length() > 10) {\r\n            rfc = curp.substring(0, 10);\r\n        } else {\r\n            rfc = curp;\r\n        }\r\n        ArrayList<String> completos = separaApellidos(apellidos);\r\n        if (!completos.isEmpty()) {\r\n            apellido_paterno = completos.get(0);\r\n            apellido_materno = completos.get(1);\r\n        }\r\n        //Profesor exits = profesor.findByCurp(curp);\r\n        Profesor exits_rfc = profesor.findByRFC(rfc);\r\n        // Considerando que nuestra base de datos ya esta poblada se hace esta condicion\r\n        // en caso de que no mandara un null\r\n        if (exits_rfc == null) {\r\n            try {\r\n                profesor.saveT(nombre, apellido_paterno, apellido_materno, curp, rfc, email, institucion, ciudad, 33, 5, 4, 3);\r\n            } catch (Exception ex) {\r\n                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r\n                error = error + \"Nombre:\" + nombre + \"\t|\t\";\r\n                error = error + \"Apellido Paterno:\" + apellido_paterno + \"\t|\t\";\r\n                error = error + \"Apellido Materno:\" + apellido_materno + \"\t|\t\";\r\n                error = error + \"CURP:\" + curp + \"\t|\t\";\r\n                error = error + \"RFC:\" + rfc + \"\t|\t\";\r\n                error = error + \"Email:\" + email + \"\t|\t\";\r\n                error = error + \"Institucion:\" + institucion + \"\t|\t\";\r\n                error = error + \"Ciudad:\" + ciudad;\r\n                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_PROFESOR, error);\r\n                LOGGER.error(\"Error guardando Profesor en carga Batch WS\", ex);\r\n                ex.printStackTrace();\r\n            }\r\n        } else if (rfc.equals(exits_rfc.getRfc())) {\r\n            profesor.updateProfesorByRFC(nombre, apellido_paterno, apellido_materno, email, institucion, ciudad, exits_rfc.getRfc());\r\n        } else /*if (exits == null) {\r\n\t\t\t\tprofesor.saveT(nombre, apellido_paterno, apellido_materno, curp, rfc, email, institucion, ciudad, 1, 1, 1,\r\n\t\t\t\t\t\t1);\r\n\r\n\t\t\t} else if (curp.equals(exits.getCurp())) {\r\n\t\t\t\t// Se guardan profesores\r\n\t\t\t\t// Algunos valores se guardan por default ya que no se tienen todos los datos\r\n\t\t\t\t// disponibles en Moodle\r\n\t\t\t\tprofesor.updateProfesor(nombre, apellido_paterno, apellido_materno, email, institucion, ciudad,\r\n\t\t\t\t\t\texits.getCurp());\r\n\r\n\t\t\t} */\r\n        {\r\n            LOGGER.debug(\"No se pudo agregar al profesor\");\r\n        }\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "arr",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getString(\"username\")",
                        "methodName": "toUpperCase",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "curp",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "curp",
                        "methodName": "substring",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "findByRFC",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "exits_rfc",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "rfc",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "exits_rfc",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "updateProfesorByRFC",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "saveT",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "arr",
                        "methodName": "length",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "insert_Course": {
                "name": "insert_Course",
                "lineBegin": 216,
                "lineEnd": 271,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "JSONArray",
                        "variable": "arr",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "jsonProductObject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "id_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "claves",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "exits",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "exits_group",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    JSONArray arr = new JSONArray(jSonResultString);\r\n    for (int i = 0; i < arr.length(); i++) {\r\n        JSONObject jsonProductObject = arr.getJSONObject(i);\r\n        String nombre_curso = jsonProductObject.getString(\"shortname\");\r\n        String id_grupo = jsonProductObject.getString(\"idnumber\");\r\n        String[] claves = separaNombreCurso(id_grupo);\r\n        if (claves.length != 2) {\r\n            String error = \"Error guardando Curso, formato IdNumber incorrecto:\" + id_grupo + \" - \" + nombre_curso;\r\n            log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r\n            LOGGER.error(error);\r\n            continue;\r\n        }\r\n        String clave_curso = claves[0];\r\n        String clave_grupo = claves[1];\r\n        Curso exits = curso_rep.findByUniqueClaveCurso(clave_curso);\r\n        if (exits == null) {\r\n            try {\r\n                curso_rep.saveC(clave_curso, nombre_curso);\r\n            } catch (Exception ex) {\r\n                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r\n                error = error + \"Clave Curso:\" + clave_curso + \"\t|\t\";\r\n                error = error + \"Nombre Curso:\" + nombre_curso;\r\n                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r\n                LOGGER.error(\"Error guardando Curso en carga Batch WS\", ex);\r\n                ex.printStackTrace();\r\n            }\r\n            exits = curso_rep.findByUniqueClaveCurso(clave_curso);\r\n        } else {\r\n            LOGGER.debug(\"Ya existe el curso\");\r\n        }\r\n        Grupo exits_group = grupo_rep.findByClaveGrupoIdCurso(clave_grupo, exits);\r\n        if (exits_group == null) {\r\n            try {\r\n                grupo_rep.saveC(clave_grupo, exits.getPk_id_curso());\r\n            } catch (Exception ex) {\r\n                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r\n                error = error + \"Clave Curso:\" + clave_curso + \"\t|\t\";\r\n                error = error + \"ID Curso:\" + exits.getPk_id_curso();\r\n                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_GRUPO, error);\r\n                LOGGER.error(\"Error guardando Grupo en carga Batch WS\", ex);\r\n                ex.printStackTrace();\r\n            }\r\n        } else {\r\n            LOGGER.debug(\"Ya existe el grupo\");\r\n        }\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "arr",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "curso_rep",
                        "methodName": "findByUniqueClaveCurso",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "curso_rep",
                        "methodName": "saveC",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "curso_rep",
                        "methodName": "findByUniqueClaveCurso",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupo_rep",
                        "methodName": "findByClaveGrupoIdCurso",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "exits",
                        "methodName": "getPk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "exits",
                        "methodName": "getPk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "grupo_rep",
                        "methodName": "saveC",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "arr",
                        "methodName": "length",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "insert_Grade": {
                "name": "insert_Grade",
                "lineBegin": 273,
                "lineEnd": 341,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "JSONArray",
                        "variable": "arr",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "id_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "curp",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "grade",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "jsonProductObject",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONArray",
                        "variable": "arrObj",
                        "qualifedType": ""
                    },
                    {
                        "type": "JSONObject",
                        "variable": "row",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "j",
                        "qualifedType": ""
                    },
                    {
                        "type": "String[]",
                        "variable": "claves",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "i",
                        "qualifedType": ""
                    },
                    {
                        "type": "double",
                        "variable": "result",
                        "qualifedType": ""
                    },
                    {
                        "type": "boolean",
                        "variable": "aprobado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Profesor",
                        "variable": "exits",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Grupo",
                        "variable": "grupo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "error",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    JSONArray arr = new JSONArray(jSonResultString);\r\n    String clave_curso = null;\r\n    String clave_grupo = null;\r\n    String nombre_curso = null;\r\n    String id_curso = null;\r\n    String curp = null;\r\n    String grade = null;\r\n    for (int i = 0; i < arr.length(); i++) {\r\n        JSONObject jsonProductObject = arr.getJSONObject(i);\r\n        nombre_curso = jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\").getString(\"shortname\");\r\n        id_curso = jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\").getString(\"idnumber\");\r\n        JSONArray arrObj = jsonProductObject.getJSONObject(\"materia\").getJSONArray(\"inscripcion\");\r\n        for (int j = 0; j < arrObj.length(); j++) {\r\n            JSONObject row = arrObj.getJSONObject(j);\r\n            curp = row.getJSONObject(\"profesor\").getString(\"username\");\r\n            grade = row.getJSONObject(\"profesor\").getString(\"grade\");\r\n        }\r\n        System.out.println(nombre_curso);\r\n        System.out.println(id_curso);\r\n        String[] claves = separaNombreCurso(id_curso);\r\n        if (claves.length != 2) {\r\n            String error = \"Error guardando Curso, formato IdNumber incorrecto:\" + id_curso + \" - \" + nombre_curso;\r\n            log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r\n            LOGGER.error(error);\r\n            continue;\r\n        }\r\n        clave_curso = claves[0];\r\n        clave_grupo = claves[1];\r\n    }\r\n    double result = Double.parseDouble(grade);\r\n    boolean aprobado = aprobadoCalificacion(result);\r\n    Profesor exits = profesor.findByCurp(curp);\r\n    Curso curso = curso_rep.findByUniqueClaveCurso(clave_curso);\r\n    if (curso == null) {\r\n        LOGGER.info(\"No existe el curso: \" + clave_grupo + \" - \" + curp);\r\n    } else {\r\n        Grupo grupo = grupo_rep.findByClaveGrupoIdCurso(clave_grupo, curso);\r\n        if (grupo == null) {\r\n            LOGGER.info(\"No existe el grupo: \" + clave_grupo + \" - \" + curp);\r\n        } else {\r\n            if (exits == null) {\r\n                LOGGER.info(\"No existe el profesor: \" + clave_grupo + \" - \" + curp);\r\n            } else {\r\n                if (grade.length() > 3) {\r\n                    grade = grade.substring(0, 3);\r\n                    grade = grade.replace(\".\", \"\");\r\n                }\r\n                try {\r\n                    inscripcionRep.saveI(grupo.getPk_id_grupo(), exits.getPk_id_profesor(), grade, aprobado);\r\n                } catch (Exception ex) {\r\n                    String error = \"Error: \" + ex.toString() + \"\t|\t\";\r\n                    error = error + \"ID Grupo:\" + grupo.getPk_id_grupo() + \"\t|\t\";\r\n                    error = error + \"ID Profesor:\" + exits.getPk_id_profesor() + \"\t|\t\";\r\n                    error = error + \"Calificacion:\" + grade + \"\t|\t\";\r\n                    error = error + \"Aprobado:\" + aprobado + \"\t|\t\";\r\n                    log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_INSCRIPCION, error);\r\n                    LOGGER.error(\"Error guardando Incripci\u00ef\u00bf\u00bdn en carga Batch WS\", ex);\r\n                    ex.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "arr",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getJSONObject(\"materia\")",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\")",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getJSONObject(\"materia\")",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\")",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "jsonProductObject.getJSONObject(\"materia\")",
                        "methodName": "getJSONArray",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "arrObj",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "row",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "row.getJSONObject(\"profesor\")",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "row",
                        "methodName": "getJSONObject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "row.getJSONObject(\"profesor\")",
                        "methodName": "getString",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "arrObj",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "arr",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "findByCurp",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    },
                    {
                        "scopeName": "curso_rep",
                        "methodName": "findByUniqueClaveCurso",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "grupo_rep",
                        "methodName": "findByClaveGrupoIdCurso",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
                    },
                    {
                        "scopeName": "grade",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grade",
                        "methodName": "substring",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grade",
                        "methodName": "replace",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getPk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "exits",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "logtrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "grupo",
                        "methodName": "getPk_id_grupo",
                        "targetClassName": "com.cocay.sicecd.model.Grupo"
                    },
                    {
                        "scopeName": "exits",
                        "methodName": "getPk_id_profesor",
                        "targetClassName": "com.cocay.sicecd.model.Profesor"
                    },
                    {
                        "scopeName": "inscripcionRep",
                        "methodName": "saveI",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
                    }
                ],
                "exception": []
            },
            "get_Calificaciones": {
                "name": "get_Calificaciones",
                "lineBegin": 199,
                "lineEnd": 214,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "String",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "Url_ws_inscripcion",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    LinkedList<Url_ws_inscripcion> links = new LinkedList<>(urls_inscripcion.findVarios());\r\n    if (links.size() == 0) {\r\n        LOGGER.debug(\"No hay urls para el proceso ObtenerCalificaciones\");\r\n        return;\r\n    }\r\n    for (Url_ws_inscripcion url : links) {\r\n        System.out.println(\"Se conecto\" + url.getUrl());\r\n        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r\n        System.out.println(json);\r\n        insert_Grade(json);\r\n        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR);\r\n        // log.setTrace(LogTypes.AGREGAR_PROFESOR);\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "urls_inscripcion",
                        "methodName": "findVarios",
                        "targetClassName": "com.cocay.sicecd.repo.Url_ws_inscripcionRep"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_inscripcion"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_inscripcion"
                    }
                ],
                "exception": []
            },
            "separaApellidos": {
                "name": "separaApellidos",
                "lineBegin": 444,
                "lineEnd": 465,
                "annotations": [],
                "returnDataType": [
                    "ArrayList<String>"
                ],
                "identifier": [
                    "ArrayList",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "espacio",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "count",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ArrayList<String> apellidos = new ArrayList();\r\n    String espacio = \" \";\r\n    String apellido_paterno = \"\";\r\n    String apellido_materno = \"\";\r\n    int count = contarEspacios(s);\r\n    if (count == 0) {\r\n        apellido_paterno = s;\r\n        apellido_materno = null;\r\n        apellidos.add(apellido_paterno);\r\n        apellidos.add(apellido_materno);\r\n    }\r\n    if (count >= 1) {\r\n        apellido_paterno = s.substring(0, s.indexOf(espacio));\r\n        apellido_materno = s.substring(s.indexOf(espacio) + 1, s.length());\r\n        apellidos.add(apellido_paterno);\r\n        apellidos.add(apellido_materno);\r\n    }\r\n    return apellidos;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "get_Curso": {
                "name": "get_Curso",
                "lineBegin": 179,
                "lineEnd": 197,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "String",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "Url_ws_curso",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    LinkedList<Url_ws_curso> links = new LinkedList<>(urls_curso.findVarios());\r\n    if (links.size() == 0) {\r\n        LOGGER.debug(\"No hay urls para el proceso obtener Cursos\");\r\n    }\r\n    for (Url_ws_curso url : links) {\r\n        System.out.println(\"Se conecto\" + url.getUrl());\r\n        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r\n        System.out.println(json);\r\n        insert_Course(json);\r\n        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR,\"Se agrego un profesor\");\r\n        // log.setTrace(LogTypes.AGREGAR_PROFESOR,\"Se actualizo un profesor\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "urls_curso",
                        "methodName": "findVarios",
                        "targetClassName": "com.cocay.sicecd.repo.Url_ws_cursoRep"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_curso"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_curso"
                    }
                ],
                "exception": []
            },
            "run": {
                "name": "run",
                "lineBegin": 101,
                "lineEnd": 157,
                "annotations": [
                    "@Scheduled(cron = \"${ws.scheduleImportData}\")"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "CountDownLatch",
                        "variable": "cdl1",
                        "qualifedType": ""
                    },
                    {
                        "type": "CountDownLatch",
                        "variable": "cdl2",
                        "qualifedType": ""
                    },
                    {
                        "type": "ExecutorService",
                        "variable": "executor",
                        "qualifedType": ""
                    },
                    {
                        "type": "ReturnTypeOne",
                        "variable": "firstValue",
                        "qualifedType": ""
                    },
                    {
                        "type": "ReturnTypeTwo",
                        "variable": "secondValue",
                        "qualifedType": ""
                    },
                    {
                        "type": "ReturnTypeThree",
                        "variable": "thirdValue",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    final CountDownLatch cdl1 = new CountDownLatch(1);\r\n    final CountDownLatch cdl2 = new CountDownLatch(1);\r\n    ExecutorService executor = Executors.newFixedThreadPool(3);\r\n    // Tenemos listas las tareas()\r\n    Future<ReturnTypeOne> first = executor.submit(new Callable<ReturnTypeOne>() {\r\n\r\n        @Override\r\n        public ReturnTypeOne call() throws Exception {\r\n            LOGGER.info(\"Start Thread WS One\");\r\n            get_Profesores();\r\n            cdl1.countDown();\r\n            LOGGER.info(\"Finish Thread WS One\");\r\n            return null;\r\n        }\r\n    });\r\n    Future<ReturnTypeTwo> second = executor.submit(new Callable<ReturnTypeTwo>() {\r\n\r\n        @Override\r\n        public ReturnTypeTwo call() throws Exception {\r\n            LOGGER.info(\"Start Thread WS Second\");\r\n            get_Curso();\r\n            cdl2.countDown();\r\n            LOGGER.info(\"Finish Thread WS Second\");\r\n            return null;\r\n        }\r\n    });\r\n    Future<ReturnTypeThree> third = executor.submit(new Callable<ReturnTypeThree>() {\r\n\r\n        @Override\r\n        public ReturnTypeThree call() throws Exception {\r\n            try {\r\n                cdl1.await();\r\n                cdl2.await();\r\n            } catch (InterruptedException e) {\r\n                e.printStackTrace();\r\n            }\r\n            LOGGER.info(\"Start Thread WS Three\");\r\n            get_Calificaciones();\r\n            LOGGER.info(\"Finish Thread WS Three\");\r\n            return null;\r\n        }\r\n    });\r\n    // Obtenemos resultados\r\n    try {\r\n        ReturnTypeOne firstValue = first.get();\r\n        ReturnTypeTwo secondValue = second.get();\r\n        ReturnTypeThree thirdValue = third.get();\r\n    } catch (InterruptedException e) {\r\n        e.printStackTrace();\r\n    } catch (ExecutionException e) {\r\n        e.printStackTrace();\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "cdl1",
                        "methodName": "countDown",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "executor",
                        "methodName": "submit",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cdl2",
                        "methodName": "countDown",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "executor",
                        "methodName": "submit",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cdl1",
                        "methodName": "await",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "cdl2",
                        "methodName": "await",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "executor",
                        "methodName": "submit",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "jsonGetRequest": {
                "name": "jsonGetRequest",
                "lineBegin": 419,
                "lineEnd": 436,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "urlQueryString",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "URL",
                        "variable": "url",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpURLConnection",
                        "variable": "connection",
                        "qualifedType": ""
                    },
                    {
                        "type": "InputStream",
                        "variable": "inStream",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String json = null;\r\n    try {\r\n        URL url = new URL(urlQueryString);\r\n        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n        connection.setDoOutput(true);\r\n        connection.setInstanceFollowRedirects(false);\r\n        connection.setRequestMethod(\"GET\");\r\n        connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n        connection.setRequestProperty(\"charset\", \"utf-8\");\r\n        connection.connect();\r\n        InputStream inStream = connection.getInputStream();\r\n        json = streamToString(inStream);\r\n    } catch (IOException ex) {\r\n        ex.printStackTrace();\r\n    }\r\n    return json;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "url",
                        "methodName": "openConnection",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "setDoOutput",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "setInstanceFollowRedirects",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "setRequestMethod",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "setRequestProperty",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "setRequestProperty",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "connect",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "connection",
                        "methodName": "getInputStream",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "separaNombreCurso": {
                "name": "separaNombreCurso",
                "lineBegin": 467,
                "lineEnd": 470,
                "annotations": [],
                "returnDataType": [
                    "String[]"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String[]",
                        "variable": "parts",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String[] parts = s.split(\"_\");\r\n    return parts;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "call": {
                "name": "call",
                "lineBegin": 132,
                "lineEnd": 144,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ReturnTypeThree"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    try {\r\n        cdl1.await();\r\n        cdl2.await();\r\n    } catch (InterruptedException e) {\r\n        e.printStackTrace();\r\n    }\r\n    LOGGER.info(\"Start Thread WS Three\");\r\n    get_Calificaciones();\r\n    LOGGER.info(\"Finish Thread WS Three\");\r\n    return null;\r\n}",
                "methodInvocations": [],
                "exception": [
                    "Exception"
                ]
            },
            "streamToString": {
                "name": "streamToString",
                "lineBegin": 414,
                "lineEnd": 417,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "InputStream",
                        "variable": "inputStream",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "text",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String text = new Scanner(inputStream, \"UTF-8\").useDelimiter(\"\\\\Z\").next();\r\n    return text;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "contarEspacios": {
                "name": "contarEspacios",
                "lineBegin": 478,
                "lineEnd": 481,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "int",
                        "variable": "n",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    int n = s.length() - s.replaceAll(\" \", \"\").length();\r\n    return n;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "get_Profesores": {
                "name": "get_Profesores",
                "lineBegin": 159,
                "lineEnd": 177,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "String",
                        "variable": "json",
                        "qualifedType": ""
                    },
                    {
                        "type": "Url_ws_profesor",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    LinkedList<Url_ws_profesor> links = new LinkedList<>(urls.findVarios());\r\n    if (links.size() == 0) {\r\n        LOGGER.debug(\"No hay urls para el proceso obtener Profesores\");\r\n    }\r\n    for (Url_ws_profesor url : links) {\r\n        System.out.println(\"Se conecto\" + url.getUrl());\r\n        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r\n        System.out.println(json);\r\n        insert_update_Profesor(json);\r\n        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR,\"Se agrego un profesor\");\r\n        // log.setTrace(LogTypes.AGREGAR_PROFESOR,\"Se actualizo un profesor\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "urls",
                        "methodName": "findVarios",
                        "targetClassName": "com.cocay.sicecd.repo.Url_ws_profesorRep"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_profesor"
                    },
                    {
                        "scopeName": "url",
                        "methodName": "getUrl",
                        "targetClassName": "com.cocay.sicecd.model.Url_ws_profesor"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.IOException",
            "java.io.InputStream",
            "java.net.HttpURLConnection",
            "java.net.URL",
            "java.util.ArrayList",
            "java.util.Arrays",
            "java.util.LinkedList",
            "java.util.List",
            "java.util.Scanner",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "org.json.JSONArray",
            "org.json.JSONObject",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.scheduling.annotation.Scheduled",
            "org.springframework.stereotype.Component",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws_curso",
            "com.cocay.sicecd.model.Url_ws_inscripcion",
            "com.cocay.sicecd.model.Url_ws_profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_ws_cursoRep",
            "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
            "com.cocay.sicecd.repo.Url_ws_profesorRep",
            "java.util.concurrent.Callable",
            "java.util.concurrent.CountDownLatch",
            "java.util.concurrent.ExecutionException",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "java.util.concurrent.Future",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.service.WebService"
            },
            {
                "scopeName": "urls",
                "methodName": "findVarios",
                "targetClassName": "com.cocay.sicecd.repo.Url_ws_profesorRep"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_profesor"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_profesor"
            },
            {
                "scopeName": "urls_curso",
                "methodName": "findVarios",
                "targetClassName": "com.cocay.sicecd.repo.Url_ws_cursoRep"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_curso"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_curso"
            },
            {
                "scopeName": "urls_inscripcion",
                "methodName": "findVarios",
                "targetClassName": "com.cocay.sicecd.repo.Url_ws_inscripcionRep"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_inscripcion"
            },
            {
                "scopeName": "url",
                "methodName": "getUrl",
                "targetClassName": "com.cocay.sicecd.model.Url_ws_inscripcion"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "curso_rep",
                "methodName": "findByUniqueClaveCurso",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "curso_rep",
                "methodName": "saveC",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "curso_rep",
                "methodName": "findByUniqueClaveCurso",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo_rep",
                "methodName": "findByClaveGrupoIdCurso",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "exits",
                "methodName": "getPk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "exits",
                "methodName": "getPk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "grupo_rep",
                "methodName": "saveC",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "profesor",
                "methodName": "findByCurp",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "curso_rep",
                "methodName": "findByUniqueClaveCurso",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "grupo_rep",
                "methodName": "findByClaveGrupoIdCurso",
                "targetClassName": "com.cocay.sicecd.repo.GrupoRep"
            },
            {
                "scopeName": "grupo",
                "methodName": "getPk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "exits",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "grupo",
                "methodName": "getPk_id_grupo",
                "targetClassName": "com.cocay.sicecd.model.Grupo"
            },
            {
                "scopeName": "exits",
                "methodName": "getPk_id_profesor",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "inscripcionRep",
                "methodName": "saveI",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "findByRFC",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "exits_rfc",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "exits_rfc",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Profesor"
            },
            {
                "scopeName": "profesor",
                "methodName": "updateProfesorByRFC",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            },
            {
                "scopeName": "log",
                "methodName": "logtrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "profesor",
                "methodName": "saveT",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "aprobadoCalificacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "double",
                        "variable": "n",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return n >= 60 ? true : false;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "insert_update_Profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    JSONArray arr = new JSONArray(jSonResultString);\r",
                    "    String apellido_paterno = \"\";\r",
                    "    String apellido_materno = \"\";\r",
                    "    // para cada objeto del json\r",
                    "    for (int i = 0; i < arr.length(); i++) {\r",
                    "        JSONObject jsonProductObject = arr.getJSONObject(i);\r",
                    "        String curp = jsonProductObject.getString(\"username\").toUpperCase();\r",
                    "        String nombre = jsonProductObject.getString(\"firstname\");\r",
                    "        String apellidos = jsonProductObject.getString(\"lastname\");\r",
                    "        String email = jsonProductObject.getString(\"email\");\r",
                    "        String institucion = jsonProductObject.getString(\"institution\");\r",
                    "        String ciudad = jsonProductObject.getString(\"city\");\r",
                    "        String rfc;\r",
                    "        if (curp.length() > 10) {\r",
                    "            rfc = curp.substring(0, 10);\r",
                    "        } else {\r",
                    "            rfc = curp;\r",
                    "        }\r",
                    "        ArrayList<String> completos = separaApellidos(apellidos);\r",
                    "        if (!completos.isEmpty()) {\r",
                    "            apellido_paterno = completos.get(0);\r",
                    "            apellido_materno = completos.get(1);\r",
                    "        }\r",
                    "        //Profesor exits = profesor.findByCurp(curp);\r",
                    "        Profesor exits_rfc = profesor.findByRFC(rfc);\r",
                    "        // Considerando que nuestra base de datos ya esta poblada se hace esta condicion\r",
                    "        // en caso de que no mandara un null\r",
                    "        if (exits_rfc == null) {\r",
                    "            try {\r",
                    "                profesor.saveT(nombre, apellido_paterno, apellido_materno, curp, rfc, email, institucion, ciudad, 33, 5, 4, 3);\r",
                    "            } catch (Exception ex) {\r",
                    "                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r",
                    "                error = error + \"Nombre:\" + nombre + \"\t|\t\";\r",
                    "                error = error + \"Apellido Paterno:\" + apellido_paterno + \"\t|\t\";\r",
                    "                error = error + \"Apellido Materno:\" + apellido_materno + \"\t|\t\";\r",
                    "                error = error + \"CURP:\" + curp + \"\t|\t\";\r",
                    "                error = error + \"RFC:\" + rfc + \"\t|\t\";\r",
                    "                error = error + \"Email:\" + email + \"\t|\t\";\r",
                    "                error = error + \"Institucion:\" + institucion + \"\t|\t\";\r",
                    "                error = error + \"Ciudad:\" + ciudad;\r",
                    "                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_PROFESOR, error);\r",
                    "                LOGGER.error(\"Error guardando Profesor en carga Batch WS\", ex);\r",
                    "                ex.printStackTrace();\r",
                    "            }\r",
                    "        } else if (rfc.equals(exits_rfc.getRfc())) {\r",
                    "            profesor.updateProfesorByRFC(nombre, apellido_paterno, apellido_materno, email, institucion, ciudad, exits_rfc.getRfc());\r",
                    "        } else /*if (exits == null) {\r",
                    "\t\t\t\tprofesor.saveT(nombre, apellido_paterno, apellido_materno, curp, rfc, email, institucion, ciudad, 1, 1, 1,\r",
                    "\t\t\t\t\t\t1);\r",
                    "\r",
                    "\t\t\t} else if (curp.equals(exits.getCurp())) {\r",
                    "\t\t\t\t// Se guardan profesores\r",
                    "\t\t\t\t// Algunos valores se guardan por default ya que no se tienen todos los datos\r",
                    "\t\t\t\t// disponibles en Moodle\r",
                    "\t\t\t\tprofesor.updateProfesor(nombre, apellido_paterno, apellido_materno, email, institucion, ciudad,\r",
                    "\t\t\t\t\t\texits.getCurp());\r",
                    "\r",
                    "\t\t\t} */\r",
                    "        {\r",
                    "            LOGGER.debug(\"No se pudo agregar al profesor\");\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "insert_Course",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    JSONArray arr = new JSONArray(jSonResultString);\r",
                    "    for (int i = 0; i < arr.length(); i++) {\r",
                    "        JSONObject jsonProductObject = arr.getJSONObject(i);\r",
                    "        String nombre_curso = jsonProductObject.getString(\"shortname\");\r",
                    "        String id_grupo = jsonProductObject.getString(\"idnumber\");\r",
                    "        String[] claves = separaNombreCurso(id_grupo);\r",
                    "        if (claves.length != 2) {\r",
                    "            String error = \"Error guardando Curso, formato IdNumber incorrecto:\" + id_grupo + \" - \" + nombre_curso;\r",
                    "            log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r",
                    "            LOGGER.error(error);\r",
                    "            continue;\r",
                    "        }\r",
                    "        String clave_curso = claves[0];\r",
                    "        String clave_grupo = claves[1];\r",
                    "        Curso exits = curso_rep.findByUniqueClaveCurso(clave_curso);\r",
                    "        if (exits == null) {\r",
                    "            try {\r",
                    "                curso_rep.saveC(clave_curso, nombre_curso);\r",
                    "            } catch (Exception ex) {\r",
                    "                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r",
                    "                error = error + \"Clave Curso:\" + clave_curso + \"\t|\t\";\r",
                    "                error = error + \"Nombre Curso:\" + nombre_curso;\r",
                    "                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r",
                    "                LOGGER.error(\"Error guardando Curso en carga Batch WS\", ex);\r",
                    "                ex.printStackTrace();\r",
                    "            }\r",
                    "            exits = curso_rep.findByUniqueClaveCurso(clave_curso);\r",
                    "        } else {\r",
                    "            LOGGER.debug(\"Ya existe el curso\");\r",
                    "        }\r",
                    "        Grupo exits_group = grupo_rep.findByClaveGrupoIdCurso(clave_grupo, exits);\r",
                    "        if (exits_group == null) {\r",
                    "            try {\r",
                    "                grupo_rep.saveC(clave_grupo, exits.getPk_id_curso());\r",
                    "            } catch (Exception ex) {\r",
                    "                String error = \"Error: \" + ex.toString() + \"\t|\t\";\r",
                    "                error = error + \"Clave Curso:\" + clave_curso + \"\t|\t\";\r",
                    "                error = error + \"ID Curso:\" + exits.getPk_id_curso();\r",
                    "                log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_GRUPO, error);\r",
                    "                LOGGER.error(\"Error guardando Grupo en carga Batch WS\", ex);\r",
                    "                ex.printStackTrace();\r",
                    "            }\r",
                    "        } else {\r",
                    "            LOGGER.debug(\"Ya existe el grupo\");\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "insert_Grade",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "jSonResultString",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    JSONArray arr = new JSONArray(jSonResultString);\r",
                    "    String clave_curso = null;\r",
                    "    String clave_grupo = null;\r",
                    "    String nombre_curso = null;\r",
                    "    String id_curso = null;\r",
                    "    String curp = null;\r",
                    "    String grade = null;\r",
                    "    for (int i = 0; i < arr.length(); i++) {\r",
                    "        JSONObject jsonProductObject = arr.getJSONObject(i);\r",
                    "        nombre_curso = jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\").getString(\"shortname\");\r",
                    "        id_curso = jsonProductObject.getJSONObject(\"materia\").getJSONObject(\"datos\").getString(\"idnumber\");\r",
                    "        JSONArray arrObj = jsonProductObject.getJSONObject(\"materia\").getJSONArray(\"inscripcion\");\r",
                    "        for (int j = 0; j < arrObj.length(); j++) {\r",
                    "            JSONObject row = arrObj.getJSONObject(j);\r",
                    "            curp = row.getJSONObject(\"profesor\").getString(\"username\");\r",
                    "            grade = row.getJSONObject(\"profesor\").getString(\"grade\");\r",
                    "        }\r",
                    "        System.out.println(nombre_curso);\r",
                    "        System.out.println(id_curso);\r",
                    "        String[] claves = separaNombreCurso(id_curso);\r",
                    "        if (claves.length != 2) {\r",
                    "            String error = \"Error guardando Curso, formato IdNumber incorrecto:\" + id_curso + \" - \" + nombre_curso;\r",
                    "            log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_CURSO, error);\r",
                    "            LOGGER.error(error);\r",
                    "            continue;\r",
                    "        }\r",
                    "        clave_curso = claves[0];\r",
                    "        clave_grupo = claves[1];\r",
                    "    }\r",
                    "    double result = Double.parseDouble(grade);\r",
                    "    boolean aprobado = aprobadoCalificacion(result);\r",
                    "    Profesor exits = profesor.findByCurp(curp);\r",
                    "    Curso curso = curso_rep.findByUniqueClaveCurso(clave_curso);\r",
                    "    if (curso == null) {\r",
                    "        LOGGER.info(\"No existe el curso: \" + clave_grupo + \" - \" + curp);\r",
                    "    } else {\r",
                    "        Grupo grupo = grupo_rep.findByClaveGrupoIdCurso(clave_grupo, curso);\r",
                    "        if (grupo == null) {\r",
                    "            LOGGER.info(\"No existe el grupo: \" + clave_grupo + \" - \" + curp);\r",
                    "        } else {\r",
                    "            if (exits == null) {\r",
                    "                LOGGER.info(\"No existe el profesor: \" + clave_grupo + \" - \" + curp);\r",
                    "            } else {\r",
                    "                if (grade.length() > 3) {\r",
                    "                    grade = grade.substring(0, 3);\r",
                    "                    grade = grade.replace(\".\", \"\");\r",
                    "                }\r",
                    "                try {\r",
                    "                    inscripcionRep.saveI(grupo.getPk_id_grupo(), exits.getPk_id_profesor(), grade, aprobado);\r",
                    "                } catch (Exception ex) {\r",
                    "                    String error = \"Error: \" + ex.toString() + \"\t|\t\";\r",
                    "                    error = error + \"ID Grupo:\" + grupo.getPk_id_grupo() + \"\t|\t\";\r",
                    "                    error = error + \"ID Profesor:\" + exits.getPk_id_profesor() + \"\t|\t\";\r",
                    "                    error = error + \"Calificacion:\" + grade + \"\t|\t\";\r",
                    "                    error = error + \"Aprobado:\" + aprobado + \"\t|\t\";\r",
                    "                    log.logtrace(LogTypes.CARGA_WS_BATCH_ERROR_INSCRIPCION, error);\r",
                    "                    LOGGER.error(\"Error guardando Incripci\u00ef\u00bf\u00bdn en carga Batch WS\", ex);\r",
                    "                    ex.printStackTrace();\r",
                    "                }\r",
                    "            }\r",
                    "        }\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "get_Calificaciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    LinkedList<Url_ws_inscripcion> links = new LinkedList<>(urls_inscripcion.findVarios());\r",
                    "    if (links.size() == 0) {\r",
                    "        LOGGER.debug(\"No hay urls para el proceso ObtenerCalificaciones\");\r",
                    "        return;\r",
                    "    }\r",
                    "    for (Url_ws_inscripcion url : links) {\r",
                    "        System.out.println(\"Se conecto\" + url.getUrl());\r",
                    "        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r",
                    "        System.out.println(json);\r",
                    "        insert_Grade(json);\r",
                    "        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR);\r",
                    "        // log.setTrace(LogTypes.AGREGAR_PROFESOR);\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "separaApellidos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "ArrayList<String>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ArrayList<String> apellidos = new ArrayList();\r",
                    "    String espacio = \" \";\r",
                    "    String apellido_paterno = \"\";\r",
                    "    String apellido_materno = \"\";\r",
                    "    int count = contarEspacios(s);\r",
                    "    if (count == 0) {\r",
                    "        apellido_paterno = s;\r",
                    "        apellido_materno = null;\r",
                    "        apellidos.add(apellido_paterno);\r",
                    "        apellidos.add(apellido_materno);\r",
                    "    }\r",
                    "    if (count >= 1) {\r",
                    "        apellido_paterno = s.substring(0, s.indexOf(espacio));\r",
                    "        apellido_materno = s.substring(s.indexOf(espacio) + 1, s.length());\r",
                    "        apellidos.add(apellido_paterno);\r",
                    "        apellidos.add(apellido_materno);\r",
                    "    }\r",
                    "    return apellidos;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "get_Curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    LinkedList<Url_ws_curso> links = new LinkedList<>(urls_curso.findVarios());\r",
                    "    if (links.size() == 0) {\r",
                    "        LOGGER.debug(\"No hay urls para el proceso obtener Cursos\");\r",
                    "    }\r",
                    "    for (Url_ws_curso url : links) {\r",
                    "        System.out.println(\"Se conecto\" + url.getUrl());\r",
                    "        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r",
                    "        System.out.println(json);\r",
                    "        insert_Course(json);\r",
                    "        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR,\"Se agrego un profesor\");\r",
                    "        // log.setTrace(LogTypes.AGREGAR_PROFESOR,\"Se actualizo un profesor\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "run",
                "annotations": [
                    "@Scheduled(cron = \"${ws.scheduleImportData}\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    final CountDownLatch cdl1 = new CountDownLatch(1);\r",
                    "    final CountDownLatch cdl2 = new CountDownLatch(1);\r",
                    "    ExecutorService executor = Executors.newFixedThreadPool(3);\r",
                    "    // Tenemos listas las tareas()\r",
                    "    Future<ReturnTypeOne> first = executor.submit(new Callable<ReturnTypeOne>() {\r",
                    "\r",
                    "        @Override\r",
                    "        public ReturnTypeOne call() throws Exception {\r",
                    "            LOGGER.info(\"Start Thread WS One\");\r",
                    "            get_Profesores();\r",
                    "            cdl1.countDown();\r",
                    "            LOGGER.info(\"Finish Thread WS One\");\r",
                    "            return null;\r",
                    "        }\r",
                    "    });\r",
                    "    Future<ReturnTypeTwo> second = executor.submit(new Callable<ReturnTypeTwo>() {\r",
                    "\r",
                    "        @Override\r",
                    "        public ReturnTypeTwo call() throws Exception {\r",
                    "            LOGGER.info(\"Start Thread WS Second\");\r",
                    "            get_Curso();\r",
                    "            cdl2.countDown();\r",
                    "            LOGGER.info(\"Finish Thread WS Second\");\r",
                    "            return null;\r",
                    "        }\r",
                    "    });\r",
                    "    Future<ReturnTypeThree> third = executor.submit(new Callable<ReturnTypeThree>() {\r",
                    "\r",
                    "        @Override\r",
                    "        public ReturnTypeThree call() throws Exception {\r",
                    "            try {\r",
                    "                cdl1.await();\r",
                    "                cdl2.await();\r",
                    "            } catch (InterruptedException e) {\r",
                    "                e.printStackTrace();\r",
                    "            }\r",
                    "            LOGGER.info(\"Start Thread WS Three\");\r",
                    "            get_Calificaciones();\r",
                    "            LOGGER.info(\"Finish Thread WS Three\");\r",
                    "            return null;\r",
                    "        }\r",
                    "    });\r",
                    "    // Obtenemos resultados\r",
                    "    try {\r",
                    "        ReturnTypeOne firstValue = first.get();\r",
                    "        ReturnTypeTwo secondValue = second.get();\r",
                    "        ReturnTypeThree thirdValue = third.get();\r",
                    "    } catch (InterruptedException e) {\r",
                    "        e.printStackTrace();\r",
                    "    } catch (ExecutionException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "jsonGetRequest",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "urlQueryString",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String json = null;\r",
                    "    try {\r",
                    "        URL url = new URL(urlQueryString);\r",
                    "        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r",
                    "        connection.setDoOutput(true);\r",
                    "        connection.setInstanceFollowRedirects(false);\r",
                    "        connection.setRequestMethod(\"GET\");\r",
                    "        connection.setRequestProperty(\"Content-Type\", \"application/json\");\r",
                    "        connection.setRequestProperty(\"charset\", \"utf-8\");\r",
                    "        connection.connect();\r",
                    "        InputStream inStream = connection.getInputStream();\r",
                    "        json = streamToString(inStream);\r",
                    "    } catch (IOException ex) {\r",
                    "        ex.printStackTrace();\r",
                    "    }\r",
                    "    return json;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "separaNombreCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String[]",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String[] parts = s.split(\"_\");\r",
                    "    return parts;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "call",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ReturnTypeThree",
                "parameters": [],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        cdl1.await();\r",
                    "        cdl2.await();\r",
                    "    } catch (InterruptedException e) {\r",
                    "        e.printStackTrace();\r",
                    "    }\r",
                    "    LOGGER.info(\"Start Thread WS Three\");\r",
                    "    get_Calificaciones();\r",
                    "    LOGGER.info(\"Finish Thread WS Three\");\r",
                    "    return null;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "streamToString",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "InputStream",
                        "variable": "inputStream",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String text = new Scanner(inputStream, \"UTF-8\").useDelimiter(\"\\\\Z\").next();\r",
                    "    return text;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "contarEspacios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "s",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    int n = s.length() - s.replaceAll(\" \", \"\").length();\r",
                    "    return n;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "get_Profesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    LinkedList<Url_ws_profesor> links = new LinkedList<>(urls.findVarios());\r",
                    "    if (links.size() == 0) {\r",
                    "        LOGGER.debug(\"No hay urls para el proceso obtener Profesores\");\r",
                    "    }\r",
                    "    for (Url_ws_profesor url : links) {\r",
                    "        System.out.println(\"Se conecto\" + url.getUrl());\r",
                    "        String json = jsonGetRequest(url.getUrl() + \"?clave=\" + key);\r",
                    "        System.out.println(json);\r",
                    "        insert_update_Profesor(json);\r",
                    "        // log.setTrace(LogTypes.ACTUALIZAR_PROFESOR,\"Se agrego un profesor\");\r",
                    "        // log.setTrace(LogTypes.AGREGAR_PROFESOR,\"Se actualizo un profesor\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Url_ws_profesorRep": {
        "full_name": "com.cocay.sicecd.repo.Url_ws_profesorRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 14,
        "short_name": "Url_ws_profesorRep",
        "src": "com.cocay.sicecd.repo.Url_ws_profesorRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findVarios": {
                "name": "findVarios",
                "lineBegin": 12,
                "lineEnd": 13,
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_profesor c where c.activa = true\")"
                ],
                "returnDataType": [
                    "List<Url_ws_profesor>"
                ],
                "identifier": [
                    "List",
                    "Url_ws_profesor"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Url_ws_profesor, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "com.cocay.sicecd.model.Url_ws_profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findVarios",
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_profesor c where c.activa = true\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Url_ws_profesor>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Url_ws_cursoRep": {
        "full_name": "com.cocay.sicecd.repo.Url_ws_cursoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 13,
        "short_name": "Url_ws_cursoRep",
        "src": "com.cocay.sicecd.repo.Url_ws_cursoRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findVarios": {
                "name": "findVarios",
                "lineBegin": 11,
                "lineEnd": 12,
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_curso c where c.activa = true\")"
                ],
                "returnDataType": [
                    "List<Url_ws_curso>"
                ],
                "identifier": [
                    "List",
                    "Url_ws_curso"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Url_ws_curso, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "com.cocay.sicecd.model.Url_ws_curso"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findVarios",
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_curso c where c.activa = true\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Url_ws_curso>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Url_ws_inscripcionRep": {
        "full_name": "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 13,
        "short_name": "Url_ws_inscripcionRep",
        "src": "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findVarios": {
                "name": "findVarios",
                "lineBegin": 11,
                "lineEnd": 12,
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_inscripcion c where c.activa = true\")"
                ],
                "returnDataType": [
                    "List<Url_ws_inscripcion>"
                ],
                "identifier": [
                    "List",
                    "Url_ws_inscripcion"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Url_ws_inscripcion, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "com.cocay.sicecd.model.Url_ws_inscripcion"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findVarios",
                "annotations": [
                    "@Query(\"SELECT c FROM Url_ws_inscripcion c where c.activa = true\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Url_ws_inscripcion>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.WebService.ReturnTypeOne": {
        "full_name": "com.cocay.sicecd.service.WebService.ReturnTypeOne",
        "constructor": [],
        "package": "com.cocay.sicecd.service.WebService",
        "begin": 1,
        "end": 492,
        "short_name": "ReturnTypeOne",
        "src": "com.cocay.sicecd.service.WebService.ReturnTypeOne",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.IOException",
            "java.io.InputStream",
            "java.net.HttpURLConnection",
            "java.net.URL",
            "java.util.ArrayList",
            "java.util.Arrays",
            "java.util.LinkedList",
            "java.util.List",
            "java.util.Scanner",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "org.json.JSONArray",
            "org.json.JSONObject",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.scheduling.annotation.Scheduled",
            "org.springframework.stereotype.Component",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws_curso",
            "com.cocay.sicecd.model.Url_ws_inscripcion",
            "com.cocay.sicecd.model.Url_ws_profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_ws_cursoRep",
            "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
            "com.cocay.sicecd.repo.Url_ws_profesorRep",
            "java.util.concurrent.Callable",
            "java.util.concurrent.CountDownLatch",
            "java.util.concurrent.ExecutionException",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "java.util.concurrent.Future",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.WebService.ReturnTypeTwo": {
        "full_name": "com.cocay.sicecd.service.WebService.ReturnTypeTwo",
        "constructor": [],
        "package": "com.cocay.sicecd.service.WebService",
        "begin": 1,
        "end": 492,
        "short_name": "ReturnTypeTwo",
        "src": "com.cocay.sicecd.service.WebService.ReturnTypeTwo",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.IOException",
            "java.io.InputStream",
            "java.net.HttpURLConnection",
            "java.net.URL",
            "java.util.ArrayList",
            "java.util.Arrays",
            "java.util.LinkedList",
            "java.util.List",
            "java.util.Scanner",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "org.json.JSONArray",
            "org.json.JSONObject",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.scheduling.annotation.Scheduled",
            "org.springframework.stereotype.Component",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws_curso",
            "com.cocay.sicecd.model.Url_ws_inscripcion",
            "com.cocay.sicecd.model.Url_ws_profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_ws_cursoRep",
            "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
            "com.cocay.sicecd.repo.Url_ws_profesorRep",
            "java.util.concurrent.Callable",
            "java.util.concurrent.CountDownLatch",
            "java.util.concurrent.ExecutionException",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "java.util.concurrent.Future",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.WebService.ReturnTypeThree": {
        "full_name": "com.cocay.sicecd.service.WebService.ReturnTypeThree",
        "constructor": [],
        "package": "com.cocay.sicecd.service.WebService",
        "begin": 1,
        "end": 492,
        "short_name": "ReturnTypeThree",
        "src": "com.cocay.sicecd.service.WebService.ReturnTypeThree",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.IOException",
            "java.io.InputStream",
            "java.net.HttpURLConnection",
            "java.net.URL",
            "java.util.ArrayList",
            "java.util.Arrays",
            "java.util.LinkedList",
            "java.util.List",
            "java.util.Scanner",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "org.json.JSONArray",
            "org.json.JSONObject",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.scheduling.annotation.Scheduled",
            "org.springframework.stereotype.Component",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Url_ws_curso",
            "com.cocay.sicecd.model.Url_ws_inscripcion",
            "com.cocay.sicecd.model.Url_ws_profesor",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Url_ws_cursoRep",
            "com.cocay.sicecd.repo.Url_ws_inscripcionRep",
            "com.cocay.sicecd.repo.Url_ws_profesorRep",
            "java.util.concurrent.Callable",
            "java.util.concurrent.CountDownLatch",
            "java.util.concurrent.ExecutionException",
            "java.util.concurrent.ExecutorService",
            "java.util.concurrent.Executors",
            "java.util.concurrent.Future",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Url_ws_profesor": {
        "full_name": "com.cocay.sicecd.model.Url_ws_profesor",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 49,
        "short_name": "Url_ws_profesor",
        "src": "com.cocay.sicecd.model.Url_ws_profesor",
        "annotations": [
            "@Entity",
            "@Table(name = \"Url_ws_profesor\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_url_ws_profesor\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_url_ws_profesor",
                "lineBegin": 13,
                "lineEnd": 16
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 17,
                "lineEnd": 18
            },
            {
                "annotations": [
                    "@Column(name = \"url\", nullable = false, length = 200, unique = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "url",
                "lineBegin": 19,
                "lineEnd": 20
            },
            {
                "annotations": [
                    "@Column(name = \"activa\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "boolean",
                "variable": "activa",
                "lineBegin": 21,
                "lineEnd": 22
            }
        ],
        "methods": {
            "isActiva": {
                "name": "isActiva",
                "lineBegin": 42,
                "lineEnd": 44,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUrl": {
                "name": "getUrl",
                "lineBegin": 36,
                "lineEnd": 38,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 30,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_url_ws_profesor": {
                "name": "setPk_id_url_ws_profesor",
                "lineBegin": 27,
                "lineEnd": 29,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_url_ws_profesor = pk_id_url_ws_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_url_ws_profesor": {
                "name": "getPk_id_url_ws_profesor",
                "lineBegin": 24,
                "lineEnd": 26,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_url_ws_profesor;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUrl": {
                "name": "setUrl",
                "lineBegin": 39,
                "lineEnd": 41,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.url = url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setActiva": {
                "name": "setActiva",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.activa = activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "isActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return activa;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_url_ws_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_url_ws_profesor = pk_id_url_ws_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_url_ws_profesor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_url_ws_profesor;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.url = url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.activa = activa;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Url_ws_curso": {
        "full_name": "com.cocay.sicecd.model.Url_ws_curso",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 53,
        "short_name": "Url_ws_curso",
        "src": "com.cocay.sicecd.model.Url_ws_curso",
        "annotations": [
            "@Entity",
            "@Table(name = \"Url_ws_curso\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_url_ws_curso\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_url_ws_curso",
                "lineBegin": 13,
                "lineEnd": 16
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 18,
                "lineEnd": 19
            },
            {
                "annotations": [
                    "@Column(name = \"url\", nullable = false, length = 200, unique = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "url",
                "lineBegin": 21,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Column(name = \"activa\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "boolean",
                "variable": "activa",
                "lineBegin": 24,
                "lineEnd": 25
            }
        ],
        "methods": {
            "isActiva": {
                "name": "isActiva",
                "lineBegin": 46,
                "lineEnd": 48,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUrl": {
                "name": "getUrl",
                "lineBegin": 40,
                "lineEnd": 42,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 34,
                "lineEnd": 36,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_url_ws_curso": {
                "name": "getPk_id_url_ws_curso",
                "lineBegin": 28,
                "lineEnd": 30,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_url_ws_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_url_ws_curso": {
                "name": "setPk_id_url_ws_curso",
                "lineBegin": 31,
                "lineEnd": 33,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_url_ws_curso = pk_id_url_ws_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUrl": {
                "name": "setUrl",
                "lineBegin": 43,
                "lineEnd": 45,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.url = url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setActiva": {
                "name": "setActiva",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.activa = activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "isActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return activa;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_url_ws_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_url_ws_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_url_ws_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_url_ws_curso = pk_id_url_ws_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.url = url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.activa = activa;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Url_ws_inscripcion": {
        "full_name": "com.cocay.sicecd.model.Url_ws_inscripcion",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 52,
        "short_name": "Url_ws_inscripcion",
        "src": "com.cocay.sicecd.model.Url_ws_inscripcion",
        "annotations": [
            "@Entity",
            "@Table(name = \"Url_ws_inscripcion\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_url_ws_inscripcion\")"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_url_ws_inscripcion",
                "lineBegin": 13,
                "lineEnd": 16
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 18,
                "lineEnd": 19
            },
            {
                "annotations": [
                    "@Column(name = \"url\", nullable = false, length = 200, unique = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "url",
                "lineBegin": 21,
                "lineEnd": 22
            },
            {
                "annotations": [
                    "@Column(name = \"activa\", nullable = true)"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "boolean",
                "variable": "activa",
                "lineBegin": 24,
                "lineEnd": 25
            }
        ],
        "methods": {
            "isActiva": {
                "name": "isActiva",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUrl": {
                "name": "getUrl",
                "lineBegin": 39,
                "lineEnd": 41,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_url_ws_inscripcion": {
                "name": "getPk_id_url_ws_inscripcion",
                "lineBegin": 27,
                "lineEnd": 29,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_url_ws_inscripcion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 36,
                "lineEnd": 38,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_url_ws_inscripcion": {
                "name": "setPk_id_url_ws_inscripcion",
                "lineBegin": 30,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_inscripcion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_url_ws_inscripcion = pk_id_url_ws_inscripcion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUrl": {
                "name": "setUrl",
                "lineBegin": 42,
                "lineEnd": 44,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.url = url;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setActiva": {
                "name": "setActiva",
                "lineBegin": 48,
                "lineEnd": 50,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.activa = activa;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.Table"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "isActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return activa;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_url_ws_inscripcion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_url_ws_inscripcion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_url_ws_inscripcion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_url_ws_inscripcion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_url_ws_inscripcion = pk_id_url_ws_inscripcion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUrl",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "url",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.url = url;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setActiva",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "boolean",
                        "variable": "activa",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.activa = activa;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.config.BatchConfig": {
        "full_name": "com.cocay.sicecd.config.BatchConfig",
        "constructor": [],
        "package": "com.cocay.sicecd.config",
        "begin": 1,
        "end": 227,
        "short_name": "BatchConfig",
        "src": "com.cocay.sicecd.config.BatchConfig",
        "annotations": [
            "@Configuration",
            "@EnableBatchProcessing"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "public ",
                "identifier": [],
                "type": "JobBuilderFactory",
                "variable": "jobBuilderFactory",
                "lineBegin": 48,
                "lineEnd": 49
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "public ",
                "identifier": [],
                "type": "StepBuilderFactory",
                "variable": "stepBuilderFactory",
                "lineBegin": 51,
                "lineEnd": 52
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "CursoBatchRep",
                "variable": "cursoRep",
                "lineBegin": 54,
                "lineEnd": 55
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "GrupoBatchRep",
                "variable": "grupoRep",
                "lineBegin": 57,
                "lineEnd": 58
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProfesorBatchRep",
                "variable": "profesorRep",
                "lineBegin": 60,
                "lineEnd": 61
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "InscripcionBatchRep",
                "variable": "inscripcionRep",
                "lineBegin": 63,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProcessorGrupo",
                "variable": "processorGrupo",
                "lineBegin": 66,
                "lineEnd": 67
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProcessorCurso",
                "variable": "processorCurso",
                "lineBegin": 69,
                "lineEnd": 70
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProcessorInscripcion",
                "variable": "processorInscripcion",
                "lineBegin": 72,
                "lineEnd": 73
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProcessorProfesor",
                "variable": "processorProfesor",
                "lineBegin": 75,
                "lineEnd": 76
            }
        ],
        "methods": {
            "stepInscripcion": {
                "name": "stepInscripcion",
                "lineBegin": 215,
                "lineEnd": 226,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Step"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Inscripcion>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return stepBuilderFactory.get(\"stepInscripcion\").<Inscripcion, Inscripcion>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorInscripcion).writer(new WriterInscripcion(inscripcionRep)).build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "fileVerificationSkipper": {
                "name": "fileVerificationSkipper",
                "lineBegin": 78,
                "lineEnd": 81,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "SkipPolicy"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return new VerificacionArchivo();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "importReaderGrupo": {
                "name": "importReaderGrupo",
                "lineBegin": 119,
                "lineEnd": 134,
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "returnDataType": [
                    "FlatFileItemReader<Grupo>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Grupo"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Grupo> reader = new FlatFileItemReader<>();\r\n    reader.setResource(new FileSystemResource(pathToFile));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Grupo>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"clave\", \"tempCurso\", \"tempProfesor\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Grupo>() {\r\n\r\n                {\r\n                    setTargetType(Grupo.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "importReader": {
                "name": "importReader",
                "lineBegin": 83,
                "lineEnd": 98,
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "returnDataType": [
                    "FlatFileItemReader<Curso>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Curso"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Curso> reader = new FlatFileItemReader<>();\r\n    reader.setResource(new FileSystemResource(pathToFile));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Curso>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"clave\", \"nombre\", \"tempTipoCurso\", \"horas\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Curso>() {\r\n\r\n                {\r\n                    setTargetType(Curso.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "jobGrupo": {
                "name": "jobGrupo",
                "lineBegin": 136,
                "lineEnd": 140,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Job"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Grupo>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return jobBuilderFactory.get(\"jobGrupo\").incrementer(new RunIdIncrementer()).flow(stepGrupo(importReader)).end().build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "stepGrupo": {
                "name": "stepGrupo",
                "lineBegin": 142,
                "lineEnd": 153,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Step"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Grupo>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return stepBuilderFactory.get(\"stepGrupo\").<Grupo, Grupo>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorGrupo).writer(new WriterGrupo(grupoRep)).build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "importReaderProfesor": {
                "name": "importReaderProfesor",
                "lineBegin": 155,
                "lineEnd": 170,
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "returnDataType": [
                    "FlatFileItemReader<Profesor>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Profesor"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Profesor> reader = new FlatFileItemReader<>();\r\n    reader.setResource(new FileSystemResource(pathToFile));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Profesor>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"nombre\", \"apellido_paterno\", \"apellido_materno\", \"rfc\", \"correo\", \"telefono\", \"tempEstado\", \"ciudad_localidad\", \"tempGenero\", \"plantel\", \"clave_plantel\", \"tempTurno\", \"tempGradoP\", \"ocupacion\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Profesor>() {\r\n\r\n                {\r\n                    setTargetType(Profesor.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "stepProfesor": {
                "name": "stepProfesor",
                "lineBegin": 178,
                "lineEnd": 189,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Step"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Profesor>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return stepBuilderFactory.get(\"stepProfesor\").<Profesor, Profesor>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorProfesor).writer(new WriterProfesor(profesorRep)).build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "jobInscripcion": {
                "name": "jobInscripcion",
                "lineBegin": 209,
                "lineEnd": 213,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Job"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Inscripcion>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return jobBuilderFactory.get(\"jobInscripcion\").incrementer(new RunIdIncrementer()).flow(stepInscripcion(importReader)).end().build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "importReaderInscripcion": {
                "name": "importReaderInscripcion",
                "lineBegin": 191,
                "lineEnd": 207,
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "returnDataType": [
                    "FlatFileItemReader<Inscripcion>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Inscripcion"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Inscripcion> reader = new FlatFileItemReader<>();\r\n    reader.setResource(new FileSystemResource(pathToFile));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Inscripcion>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"tempGrupo\", \"tempCurso\", \"tempProfesor\", \"calif\" });\r\n                    setStrict(false);\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Inscripcion>() {\r\n\r\n                {\r\n                    setTargetType(Inscripcion.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "jobCurso": {
                "name": "jobCurso",
                "lineBegin": 100,
                "lineEnd": 104,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Job"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Curso>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return jobBuilderFactory.get(\"jobCurso\").incrementer(new RunIdIncrementer()).flow(step1(importReader)).end().build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "step1": {
                "name": "step1",
                "lineBegin": 106,
                "lineEnd": 117,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Step"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Curso>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return stepBuilderFactory.get(\"step1\").<Curso, Curso>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorCurso).writer(new WriterCurso(cursoRep)).build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "jobProfesor": {
                "name": "jobProfesor",
                "lineBegin": 172,
                "lineEnd": 176,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Job"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<Profesor>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return jobBuilderFactory.get(\"jobProfesor\").incrementer(new RunIdIncrementer()).flow(stepProfesor(importReader)).end().build();\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.hibernate.exception.DataException",
            "org.springframework.batch.core.Job",
            "org.springframework.batch.core.Step",
            "org.springframework.batch.core.configuration.annotation.EnableBatchProcessing",
            "org.springframework.batch.core.configuration.annotation.JobBuilderFactory",
            "org.springframework.batch.core.configuration.annotation.StepBuilderFactory",
            "org.springframework.batch.core.configuration.annotation.StepScope",
            "org.springframework.batch.core.launch.support.RunIdIncrementer",
            "org.springframework.batch.core.step.skip.SkipPolicy",
            "org.springframework.batch.item.ItemReader",
            "org.springframework.batch.item.file.FlatFileItemReader",
            "org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper",
            "org.springframework.batch.item.file.mapping.DefaultLineMapper",
            "org.springframework.batch.item.file.transform.DelimitedLineTokenizer",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.Bean",
            "org.springframework.context.annotation.Configuration",
            "org.springframework.core.io.FileSystemResource",
            "org.springframework.dao.DataIntegrityViolationException",
            "org.springframework.retry.ExhaustedRetryException",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoBatchRep",
            "com.cocay.sicecd.repo.GrupoBatchRep",
            "com.cocay.sicecd.repo.InscripcionBatchRep",
            "com.cocay.sicecd.repo.ProfesorBatchRep",
            "com.cocay.sicecd.step.ProcessorCurso",
            "com.cocay.sicecd.step.ProcessorGrupo",
            "com.cocay.sicecd.step.ProcessorInscripcion",
            "com.cocay.sicecd.step.ProcessorProfesor",
            "com.cocay.sicecd.step.VerificacionArchivo",
            "com.cocay.sicecd.step.WriterCurso",
            "com.cocay.sicecd.step.WriterGrupo",
            "com.cocay.sicecd.step.WriterInscripcion",
            "com.cocay.sicecd.step.WriterProfesor"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "stepInscripcion",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Step",
                "parameters": [
                    {
                        "type": "ItemReader<Inscripcion>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return stepBuilderFactory.get(\"stepInscripcion\").<Inscripcion, Inscripcion>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorInscripcion).writer(new WriterInscripcion(inscripcionRep)).build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "fileVerificationSkipper",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "SkipPolicy",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return new VerificacionArchivo();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "importReaderGrupo",
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Grupo>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Grupo> reader = new FlatFileItemReader<>();\r",
                    "    reader.setResource(new FileSystemResource(pathToFile));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Grupo>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"clave\", \"tempCurso\", \"tempProfesor\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Grupo>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Grupo.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "importReader",
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Curso>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Curso> reader = new FlatFileItemReader<>();\r",
                    "    reader.setResource(new FileSystemResource(pathToFile));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Curso>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"clave\", \"nombre\", \"tempTipoCurso\", \"horas\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Curso>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Curso.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "jobGrupo",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Job",
                "parameters": [
                    {
                        "type": "ItemReader<Grupo>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return jobBuilderFactory.get(\"jobGrupo\").incrementer(new RunIdIncrementer()).flow(stepGrupo(importReader)).end().build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "stepGrupo",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Step",
                "parameters": [
                    {
                        "type": "ItemReader<Grupo>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return stepBuilderFactory.get(\"stepGrupo\").<Grupo, Grupo>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorGrupo).writer(new WriterGrupo(grupoRep)).build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "importReaderProfesor",
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Profesor>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Profesor> reader = new FlatFileItemReader<>();\r",
                    "    reader.setResource(new FileSystemResource(pathToFile));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Profesor>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"nombre\", \"apellido_paterno\", \"apellido_materno\", \"rfc\", \"correo\", \"telefono\", \"tempEstado\", \"ciudad_localidad\", \"tempGenero\", \"plantel\", \"clave_plantel\", \"tempTurno\", \"tempGradoP\", \"ocupacion\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Profesor>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Profesor.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "stepProfesor",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Step",
                "parameters": [
                    {
                        "type": "ItemReader<Profesor>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return stepBuilderFactory.get(\"stepProfesor\").<Profesor, Profesor>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorProfesor).writer(new WriterProfesor(profesorRep)).build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "jobInscripcion",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Job",
                "parameters": [
                    {
                        "type": "ItemReader<Inscripcion>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return jobBuilderFactory.get(\"jobInscripcion\").incrementer(new RunIdIncrementer()).flow(stepInscripcion(importReader)).end().build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "importReaderInscripcion",
                "annotations": [
                    "@Bean",
                    "@StepScope"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Inscripcion>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "pathToFile",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Inscripcion> reader = new FlatFileItemReader<>();\r",
                    "    reader.setResource(new FileSystemResource(pathToFile));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Inscripcion>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"tempGrupo\", \"tempCurso\", \"tempProfesor\", \"calif\" });\r",
                    "                    setStrict(false);\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Inscripcion>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Inscripcion.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "jobCurso",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Job",
                "parameters": [
                    {
                        "type": "ItemReader<Curso>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return jobBuilderFactory.get(\"jobCurso\").incrementer(new RunIdIncrementer()).flow(step1(importReader)).end().build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "step1",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Step",
                "parameters": [
                    {
                        "type": "ItemReader<Curso>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return stepBuilderFactory.get(\"step1\").<Curso, Curso>chunk(1000).reader(importReader).faultTolerant().skip(ExhaustedRetryException.class).skip(DataIntegrityViolationException.class).skip(DataException.class).skipLimit(100000).skipPolicy(fileVerificationSkipper()).processor(processorCurso).writer(new WriterCurso(cursoRep)).build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "jobProfesor",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Job",
                "parameters": [
                    {
                        "type": "ItemReader<Profesor>",
                        "variable": "importReader",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return jobBuilderFactory.get(\"jobProfesor\").incrementer(new RunIdIncrementer()).flow(stepProfesor(importReader)).end().build();\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.WriterCurso": {
        "full_name": "com.cocay.sicecd.step.WriterCurso",
        "constructor": [
            "public WriterCurso(CursoBatchRep cursoRep) {\r\n    this.cursoRep = cursoRep;\r\n}"
        ],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 29,
        "short_name": "WriterCurso",
        "src": "com.cocay.sicecd.step.WriterCurso",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "CursoBatchRep",
                "variable": "cursoRep",
                "lineBegin": 13,
                "lineEnd": 14
            }
        ],
        "methods": {
            "write": {
                "name": "write",
                "lineBegin": 20,
                "lineEnd": 26,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<? extends Curso>",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    System.out.println(\"Data Saved for Users: \" + curso);\r\n    cursoRep.saveAll(curso);\r\n    //cursoRep.save(curso);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "cursoRep",
                        "methodName": "saveAll",
                        "targetClassName": "com.cocay.sicecd.repo.CursoBatchRep"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemWriter<Curso>"
        ],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.batch.item.ItemWriter",
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.repo.CursoBatchRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "cursoRep",
                "methodName": "saveAll",
                "targetClassName": "com.cocay.sicecd.repo.CursoBatchRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "write",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<? extends Curso>",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    System.out.println(\"Data Saved for Users: \" + curso);\r",
                    "    cursoRep.saveAll(curso);\r",
                    "    //cursoRep.save(curso);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.CursoBatchRep": {
        "full_name": "com.cocay.sicecd.repo.CursoBatchRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 9,
        "short_name": "CursoBatchRep",
        "src": "com.cocay.sicecd.repo.CursoBatchRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [
            "JpaRepository<Curso, Integer>"
        ],
        "imports": [
            "org.springframework.data.jpa.repository.JpaRepository",
            "com.cocay.sicecd.model.Curso"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.WriterGrupo": {
        "full_name": "com.cocay.sicecd.step.WriterGrupo",
        "constructor": [
            "public WriterGrupo(GrupoBatchRep grupoRep) {\r\n    this.grupoRep = grupoRep;\r\n}"
        ],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 27,
        "short_name": "WriterGrupo",
        "src": "com.cocay.sicecd.step.WriterGrupo",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "GrupoBatchRep",
                "variable": "grupoRep",
                "lineBegin": 13,
                "lineEnd": 14
            }
        ],
        "methods": {
            "write": {
                "name": "write",
                "lineBegin": 20,
                "lineEnd": 25,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<? extends Grupo>",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    System.out.println(\"Data Saved for Users: \" + grupo);\r\n    grupoRep.saveAll(grupo);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "grupoRep",
                        "methodName": "saveAll",
                        "targetClassName": "com.cocay.sicecd.repo.GrupoBatchRep"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemWriter<Grupo>"
        ],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.batch.item.ItemWriter",
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.repo.GrupoBatchRep",
            "com.cocay.sicecd.model.Grupo"
        ],
        "methodsInvocations": [
            {
                "scopeName": "grupoRep",
                "methodName": "saveAll",
                "targetClassName": "com.cocay.sicecd.repo.GrupoBatchRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "write",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<? extends Grupo>",
                        "variable": "grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    System.out.println(\"Data Saved for Users: \" + grupo);\r",
                    "    grupoRep.saveAll(grupo);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.GrupoBatchRep": {
        "full_name": "com.cocay.sicecd.repo.GrupoBatchRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 9,
        "short_name": "GrupoBatchRep",
        "src": "com.cocay.sicecd.repo.GrupoBatchRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [
            "JpaRepository<Grupo, Integer>"
        ],
        "imports": [
            "org.springframework.data.jpa.repository.JpaRepository",
            "com.cocay.sicecd.model.Grupo"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.WriterInscripcion": {
        "full_name": "com.cocay.sicecd.step.WriterInscripcion",
        "constructor": [
            "public WriterInscripcion(InscripcionBatchRep inscripcionRep) {\r\n    this.inscripcionRep = inscripcionRep;\r\n}"
        ],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 25,
        "short_name": "WriterInscripcion",
        "src": "com.cocay.sicecd.step.WriterInscripcion",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "InscripcionBatchRep",
                "variable": "inscripcionRep",
                "lineBegin": 13,
                "lineEnd": 14
            }
        ],
        "methods": {
            "write": {
                "name": "write",
                "lineBegin": 20,
                "lineEnd": 24,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<? extends Inscripcion>",
                        "variable": "inscripcion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    inscripcionRep.saveAll(inscripcion);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "inscripcionRep",
                        "methodName": "saveAll",
                        "targetClassName": "com.cocay.sicecd.repo.InscripcionBatchRep"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemWriter<Inscripcion>"
        ],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.batch.item.ItemWriter",
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.repo.InscripcionBatchRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "inscripcionRep",
                "methodName": "saveAll",
                "targetClassName": "com.cocay.sicecd.repo.InscripcionBatchRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "write",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<? extends Inscripcion>",
                        "variable": "inscripcion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    inscripcionRep.saveAll(inscripcion);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.InscripcionBatchRep": {
        "full_name": "com.cocay.sicecd.repo.InscripcionBatchRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 9,
        "short_name": "InscripcionBatchRep",
        "src": "com.cocay.sicecd.repo.InscripcionBatchRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [
            "JpaRepository<Inscripcion, Integer>"
        ],
        "imports": [
            "org.springframework.data.jpa.repository.JpaRepository",
            "com.cocay.sicecd.model.Inscripcion"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.ProfesorBatchRep": {
        "full_name": "com.cocay.sicecd.repo.ProfesorBatchRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 9,
        "short_name": "ProfesorBatchRep",
        "src": "com.cocay.sicecd.repo.ProfesorBatchRep",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {},
        "implements": [],
        "extends": [
            "JpaRepository<Profesor, Integer>"
        ],
        "imports": [
            "org.springframework.data.jpa.repository.JpaRepository",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.WriterProfesor": {
        "full_name": "com.cocay.sicecd.step.WriterProfesor",
        "constructor": [
            "public WriterProfesor(ProfesorBatchRep profesorRep) {\r\n    this.profesorRep = profesorRep;\r\n}"
        ],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 25,
        "short_name": "WriterProfesor",
        "src": "com.cocay.sicecd.step.WriterProfesor",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "ProfesorBatchRep",
                "variable": "profesorRep",
                "lineBegin": 13,
                "lineEnd": 14
            }
        ],
        "methods": {
            "write": {
                "name": "write",
                "lineBegin": 20,
                "lineEnd": 24,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<? extends Profesor>",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    profesorRep.saveAll(profesor);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "profesorRep",
                        "methodName": "saveAll",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorBatchRep"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemWriter<Profesor>"
        ],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.batch.item.ItemWriter",
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.ProfesorBatchRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "profesorRep",
                "methodName": "saveAll",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorBatchRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "write",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<? extends Profesor>",
                        "variable": "profesor",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    profesorRep.saveAll(profesor);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ModificarCursos": {
        "full_name": "com.cocay.sicecd.controller.ModificarCursos",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 168,
        "short_name": "ModificarCursos",
        "src": "com.cocay.sicecd.controller.ModificarCursos",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionModificaciones\")",
            "@PropertySource(\"classpath:application.properties\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "proRep",
                "lineBegin": 62,
                "lineEnd": 63
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "InscripcionRep",
                "variable": "insRep",
                "lineBegin": 65,
                "lineEnd": 66
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grRep",
                "lineBegin": 68,
                "lineEnd": 69
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "crRep",
                "lineBegin": 71,
                "lineEnd": 72
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GeneroRep",
                "variable": "genRep",
                "lineBegin": 74,
                "lineEnd": 75
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "EstadoRep",
                "variable": "stRep",
                "lineBegin": 77,
                "lineEnd": 78
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grado_profesorRep",
                "variable": "gpRep",
                "lineBegin": 80,
                "lineEnd": 81
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tcRep",
                "lineBegin": 83,
                "lineEnd": 84
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "TurnoRep",
                "variable": "tnRep",
                "lineBegin": 86,
                "lineEnd": 87
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 89,
                "lineEnd": 90
            }
        ],
        "methods": {
            "formEditarCurso": {
                "name": "formEditarCurso",
                "lineBegin": 117,
                "lineEnd": 123,
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionC\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Curso",
                        "variable": "cr",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Curso cr = crRep.findById(id).get();\r\n    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionC\");\r\n    model.addObject(\"curso\", cr);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "crRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "crRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "consultarCursos": {
                "name": "consultarCursos",
                "lineBegin": 95,
                "lineEnd": 115,
                "annotations": [
                    "@RequestMapping(value = \"/listaCursos\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Tipo_curso",
                        "variable": "tpc",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<Curso> list_p1 = crRep.findAll();\r\n    for (Curso c : list_p1) {\r\n        if (c.getFk_id_tipo_curso() == null) {\r\n            Optional<Tipo_curso> tp = tcRep.findById(6);\r\n            Tipo_curso tpc = tp.get();\r\n            c.setFk_id_tipo_curso(tpc);\r\n            crRep.save(c);\r\n        }\r\n    }\r\n    if (!list_p1.isEmpty()) {\r\n        model.put(\"cursos\", list_p1);\r\n        return new ModelAndView(\"ModificarUsuario/listaCursos\", model);\r\n    } else {\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "crRep",
                        "methodName": "findAll",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "tcRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "c",
                        "methodName": "setFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "crRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": []
            },
            "editarCurso": {
                "name": "editarCurso",
                "lineBegin": 125,
                "lineEnd": 167,
                "annotations": [
                    "@PostMapping(value = \"/editarcurso\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Curso",
                        "variable": "cr",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "mod",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    int id = cr.getPk_id_curso();\r\n    Curso mod = crRep.findById(id).get();\r\n    String cambios = \"\";\r\n    if (!mod.getClave().equals(cr.getClave())) {\r\n        cambios += \"Clave de \" + mod.getClave() + \" a \" + cr.getClave() + \"\\n\";\r\n        mod.setClave(cr.getClave());\r\n    }\r\n    if (!mod.getFk_id_tipo_curso().getNombre().equals(cr.getFk_id_tipo_curso().getNombre())) {\r\n        cambios += \"Tipo curso de \" + mod.getFk_id_tipo_curso().getNombre() + \" a \" + cr.getFk_id_tipo_curso().getNombre() + \"\\n\";\r\n        mod.setFk_id_tipo_curso(cr.getFk_id_tipo_curso());\r\n    }\r\n    if (mod.getHoras() == 0) {\r\n        mod.setHoras(cr.getHoras());\r\n    } else {\r\n        if (mod.getHoras() != cr.getHoras()) {\r\n            cambios += \"Horas de \" + mod.getHoras() + \" a \" + cr.getHoras() + \"\\n\";\r\n            mod.setHoras(cr.getHoras());\r\n        }\r\n    }\r\n    if (!mod.getNombre().equals(cr.getNombre())) {\r\n        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + cr.getNombre() + \"\\n\";\r\n        mod.setNombre(cr.getNombre());\r\n    }\r\n    System.out.println(cambios);\r\n    log.setTrace(LogTypes.MODIFICAR_CURSO);\r\n    if (!cambios.equals(\"\")) {\r\n        crRep.save(mod);\r\n    }\r\n    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdCurso editado con exito!\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "cr",
                        "methodName": "getPk_id_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "crRep",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "crRep.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr.getFk_id_tipo_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod.getFk_id_tipo_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "mod.getFk_id_tipo_curso().getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod.getFk_id_tipo_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr.getFk_id_tipo_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod.getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "mod",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "crRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.File",
            "java.io.FileOutputStream",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Calendar",
            "java.util.Date",
            "java.util.List",
            "java.util.Locale",
            "java.util.Optional",
            "java.util.stream.Collectors",
            "javax.validation.Valid",
            "org.apache.commons.io.FileUtils",
            "org.apache.commons.io.IOUtils",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.HttpStatus",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.multipart.MultipartFile",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Estado",
            "com.cocay.sicecd.model.Genero",
            "com.cocay.sicecd.model.Grado_profesor",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.model.Turno",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.EstadoRep",
            "com.cocay.sicecd.repo.GeneroRep",
            "com.cocay.sicecd.repo.Grado_profesorRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.repo.TurnoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "crRep",
                "methodName": "findAll",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "c",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "tcRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "c",
                "methodName": "setFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "crRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "crRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "crRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "cr",
                "methodName": "getPk_id_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "crRep",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "crRep.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "cr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr.getFk_id_tipo_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod.getFk_id_tipo_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "mod.getFk_id_tipo_curso().getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod.getFk_id_tipo_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr.getFk_id_tipo_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod.getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cr",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "mod",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "crRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "formEditarCurso",
                "annotations": [
                    "@GetMapping(value = \"/pantallaModificacionC\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Curso cr = crRep.findById(id).get();\r",
                    "    ModelAndView model = new ModelAndView(\"ModificarUsuario/pantallaModificacionC\");\r",
                    "    model.addObject(\"curso\", cr);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultarCursos",
                "annotations": [
                    "@RequestMapping(value = \"/listaCursos\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<Curso> list_p1 = crRep.findAll();\r",
                    "    for (Curso c : list_p1) {\r",
                    "        if (c.getFk_id_tipo_curso() == null) {\r",
                    "            Optional<Tipo_curso> tp = tcRep.findById(6);\r",
                    "            Tipo_curso tpc = tp.get();\r",
                    "            c.setFk_id_tipo_curso(tpc);\r",
                    "            crRep.save(c);\r",
                    "        }\r",
                    "    }\r",
                    "    if (!list_p1.isEmpty()) {\r",
                    "        model.put(\"cursos\", list_p1);\r",
                    "        return new ModelAndView(\"ModificarUsuario/listaCursos\", model);\r",
                    "    } else {\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "editarCurso",
                "annotations": [
                    "@PostMapping(value = \"/editarcurso\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Curso",
                        "variable": "cr",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    int id = cr.getPk_id_curso();\r",
                    "    Curso mod = crRep.findById(id).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (!mod.getClave().equals(cr.getClave())) {\r",
                    "        cambios += \"Clave de \" + mod.getClave() + \" a \" + cr.getClave() + \"\\n\";\r",
                    "        mod.setClave(cr.getClave());\r",
                    "    }\r",
                    "    if (!mod.getFk_id_tipo_curso().getNombre().equals(cr.getFk_id_tipo_curso().getNombre())) {\r",
                    "        cambios += \"Tipo curso de \" + mod.getFk_id_tipo_curso().getNombre() + \" a \" + cr.getFk_id_tipo_curso().getNombre() + \"\\n\";\r",
                    "        mod.setFk_id_tipo_curso(cr.getFk_id_tipo_curso());\r",
                    "    }\r",
                    "    if (mod.getHoras() == 0) {\r",
                    "        mod.setHoras(cr.getHoras());\r",
                    "    } else {\r",
                    "        if (mod.getHoras() != cr.getHoras()) {\r",
                    "            cambios += \"Horas de \" + mod.getHoras() + \" a \" + cr.getHoras() + \"\\n\";\r",
                    "            mod.setHoras(cr.getHoras());\r",
                    "        }\r",
                    "    }\r",
                    "    if (!mod.getNombre().equals(cr.getNombre())) {\r",
                    "        cambios += \"Nombre de \" + mod.getNombre() + \" a \" + cr.getNombre() + \"\\n\";\r",
                    "        mod.setNombre(cr.getNombre());\r",
                    "    }\r",
                    "    System.out.println(cambios);\r",
                    "    log.setTrace(LogTypes.MODIFICAR_CURSO);\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        crRep.save(mod);\r",
                    "    }\r",
                    "    return ResponseEntity.ok(\"\u00ef\u00bf\u00bdCurso editado con exito!\");\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.CursoRep": {
        "full_name": "com.cocay.sicecd.repo.CursoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 63,
        "short_name": "CursoRep",
        "src": "com.cocay.sicecd.repo.CursoRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "loadAllCursos": {
                "name": "loadAllCursos",
                "lineBegin": 19,
                "lineEnd": 20,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Curso\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Curso>"
                ],
                "identifier": [
                    "List",
                    "Curso"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByClave": {
                "name": "findByClave",
                "lineBegin": 25,
                "lineEnd": 26,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) LIKE CONCAT('%',:clave,'%')\")"
                ],
                "returnDataType": [
                    "List<Curso>"
                ],
                "identifier": [
                    "List",
                    "Curso"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByUniqueClave": {
                "name": "findByUniqueClave",
                "lineBegin": 57,
                "lineEnd": 58,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) = :clave\")"
                ],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "saveC": {
                "name": "saveC",
                "lineBegin": 52,
                "lineEnd": 55,
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Curso (clave, nombre) VALUES (:clave, :nombre)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findForClave": {
                "name": "findForClave",
                "lineBegin": 28,
                "lineEnd": 29,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE c.clave = :clave\")"
                ],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByParams": {
                "name": "findByParams",
                "lineBegin": 42,
                "lineEnd": 46,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Curso \" + \"WHERE TRANSLATE(UPPER(nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND UPPER(clave) LIKE CONCAT('%',:clave,'%') \" + \"AND fk_id_tipo_curso=:tipo\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Curso>"
                ],
                "identifier": [
                    "List",
                    "Curso"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findAll": {
                "name": "findAll",
                "lineBegin": 34,
                "lineEnd": 35,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c\")"
                ],
                "returnDataType": [
                    "List<Curso>"
                ],
                "identifier": [
                    "List",
                    "Curso"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByUniqueClaveCurso": {
                "name": "findByUniqueClaveCurso",
                "lineBegin": 61,
                "lineEnd": 62,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) = :clave\")"
                ],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 22,
                "lineEnd": 23,
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c where c.nombre = :nombre\")"
                ],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Curso, Integer>"
        ],
        "imports": [
            "java.util.Date",
            "java.util.List",
            "org.springframework.data.jpa.repository.Modifying",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "org.springframework.transaction.annotation.Transactional",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Profesor"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "loadAllCursos",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Curso\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Curso>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByClave",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) LIKE CONCAT('%',:clave,'%')\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Curso>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByUniqueClave",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) = :clave\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "saveC",
                "annotations": [
                    "@Modifying",
                    "@Query(value = \"insert into Curso (clave, nombre) VALUES (:clave, :nombre)\", nativeQuery = true)",
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findForClave",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE c.clave = :clave\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByParams",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Curso \" + \"WHERE TRANSLATE(UPPER(nombre),'\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd\u00ef\u00bf\u00bd','AEIOUAEIOU') LIKE CONCAT('%',:nombre,'%') \" + \"AND UPPER(clave) LIKE CONCAT('%',:clave,'%') \" + \"AND fk_id_tipo_curso=:tipo\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Curso>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findAll",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Curso>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByUniqueClaveCurso",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c WHERE upper(c.clave) = :clave\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombre",
                "annotations": [
                    "@Query(\"SELECT c FROM Curso c where c.nombre = :nombre\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Tipo_cursoRep": {
        "full_name": "com.cocay.sicecd.repo.Tipo_cursoRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 23,
        "short_name": "Tipo_cursoRep",
        "src": "com.cocay.sicecd.repo.Tipo_cursoRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombreTipo": {
                "name": "findByNombreTipo",
                "lineBegin": 20,
                "lineEnd": 21,
                "annotations": [
                    "@Query(\"SELECT t FROM Tipo_curso t where t.nombre = :nombre\")"
                ],
                "returnDataType": [
                    "Tipo_curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByID": {
                "name": "findByID",
                "lineBegin": 17,
                "lineEnd": 18,
                "annotations": [
                    "@Query(\"SELECT t FROM Tipo_curso t where t.pk_id_tipo_curso = :fk_id_tipo_curso \")"
                ],
                "returnDataType": [
                    "List<Tipo_curso>"
                ],
                "identifier": [
                    "List",
                    "Tipo_curso"
                ],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "fk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 15,
                "lineEnd": 15,
                "annotations": [],
                "returnDataType": [
                    "List<Tipo_curso>"
                ],
                "identifier": [
                    "List",
                    "Tipo_curso"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Tipo_curso, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.data.repository.query.Param",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Tipo_curso"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombreTipo",
                "annotations": [
                    "@Query(\"SELECT t FROM Tipo_curso t where t.nombre = :nombre\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Tipo_curso",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByID",
                "annotations": [
                    "@Query(\"SELECT t FROM Tipo_curso t where t.pk_id_tipo_curso = :fk_id_tipo_curso \")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Tipo_curso>",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "fk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Tipo_curso>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Curso": {
        "full_name": "com.cocay.sicecd.model.Curso",
        "constructor": [
            "public Curso() {\r\n}",
            "public Curso(String clave, String nombre, int horas) {\r\n    super();\r\n    this.clave = clave;\r\n    this.nombre = nombre;\r\n    this.horas = horas;\r\n}"
        ],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 181,
        "short_name": "Curso",
        "src": "com.cocay.sicecd.model.Curso",
        "annotations": [
            "@Entity",
            "@Table(name = \"Curso\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_curso\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_curso",
                "lineBegin": 25,
                "lineEnd": 28
            },
            {
                "annotations": [
                    "@Column(name = \"clave\", nullable = false, length = 8, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Column(name = \"horas\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Integer",
                "variable": "horas",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Column(name = \"temp\", nullable = true)"
                ],
                "modifier": "public ",
                "identifier": [],
                "type": "Integer",
                "variable": "temp",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@Column(name = \"tempGrupo\", nullable = true)"
                ],
                "modifier": "public ",
                "identifier": [],
                "type": "String",
                "variable": "tempGrupo",
                "lineBegin": 42,
                "lineEnd": 43
            },
            {
                "annotations": [
                    "@Column(name = \"tempTipoCurso\", nullable = true)"
                ],
                "modifier": "public ",
                "identifier": [],
                "type": "String",
                "variable": "tempTipoCurso",
                "lineBegin": 45,
                "lineEnd": 46
            },
            {
                "annotations": [
                    "@Column(name = \"stTabla\", nullable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Integer",
                "variable": "stTabla",
                "lineBegin": 48,
                "lineEnd": 49
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Grupo.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_grupo\", referencedColumnName = \"pk_id_grupo\", insertable = true, updatable = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Grupo",
                "variable": "fk_id_grupo",
                "lineBegin": 51,
                "lineEnd": 54
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Tipo_curso.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)",
                    "@JoinColumn(name = \"fk_id_tipo_curso\", referencedColumnName = \"pk_id_tipo_curso\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_curso",
                "variable": "fk_id_tipo_curso",
                "lineBegin": 57,
                "lineEnd": 60
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_curso\", targetEntity = Grupo.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "type": "List<Grupo>",
                "variable": "grupos",
                "lineBegin": 62,
                "lineEnd": 64
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_curso\", targetEntity = Certificado.class)",
                    "@LazyCollection(LazyCollectionOption.TRUE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "type": "List<Certificado>",
                "variable": "certificados",
                "lineBegin": 66,
                "lineEnd": 68
            }
        ],
        "methods": {
            "getFk_id_tipo_curso": {
                "name": "getFk_id_tipo_curso",
                "lineBegin": 103,
                "lineEnd": 105,
                "annotations": [],
                "returnDataType": [
                    "Tipo_curso"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_tipo_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setGrupos": {
                "name": "setGrupos",
                "lineBegin": 123,
                "lineEnd": 125,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Grupo>",
                        "variable": "grupos",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.grupos = grupos;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCertificados": {
                "name": "setCertificados",
                "lineBegin": 131,
                "lineEnd": 133,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.certificados = certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setHoras": {
                "name": "setHoras",
                "lineBegin": 175,
                "lineEnd": 177,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "horas",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.horas = horas;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCertificados": {
                "name": "getCertificados",
                "lineBegin": 127,
                "lineEnd": 129,
                "annotations": [],
                "returnDataType": [
                    "List<Certificado>"
                ],
                "identifier": [
                    "List",
                    "Certificado"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return certificados;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 95,
                "lineEnd": 97,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTemp": {
                "name": "setTemp",
                "lineBegin": 139,
                "lineEnd": 141,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "temp",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.temp = temp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_grupo": {
                "name": "setFk_id_grupo",
                "lineBegin": 155,
                "lineEnd": 157,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_grupo = fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_curso": {
                "name": "setPk_id_curso",
                "lineBegin": 83,
                "lineEnd": 85,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_curso = pk_id_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_curso": {
                "name": "getPk_id_curso",
                "lineBegin": 79,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getStTabla": {
                "name": "getStTabla",
                "lineBegin": 143,
                "lineEnd": 145,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getHoras": {
                "name": "getHoras",
                "lineBegin": 111,
                "lineEnd": 113,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return horas;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setStTabla": {
                "name": "setStTabla",
                "lineBegin": 147,
                "lineEnd": 149,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.stTabla = stTabla;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempGrupo": {
                "name": "setTempGrupo",
                "lineBegin": 163,
                "lineEnd": 165,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempGrupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempGrupo = tempGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTemp": {
                "name": "getTemp",
                "lineBegin": 135,
                "lineEnd": 137,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return temp;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempTipoCurso": {
                "name": "getTempTipoCurso",
                "lineBegin": 167,
                "lineEnd": 169,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempTipoCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_tipo_curso": {
                "name": "setFk_id_tipo_curso",
                "lineBegin": 107,
                "lineEnd": 109,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Tipo_curso",
                        "variable": "fk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_tipo_curso = fk_id_tipo_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave": {
                "name": "getClave",
                "lineBegin": 87,
                "lineEnd": 89,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave": {
                "name": "setClave",
                "lineBegin": 91,
                "lineEnd": 93,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave = clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTempGrupo": {
                "name": "getTempGrupo",
                "lineBegin": 159,
                "lineEnd": 161,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tempGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTempTipoCurso": {
                "name": "setTempTipoCurso",
                "lineBegin": 171,
                "lineEnd": 173,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tempTipoCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tempTipoCurso = tempTipoCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getGrupos": {
                "name": "getGrupos",
                "lineBegin": 119,
                "lineEnd": 121,
                "annotations": [],
                "returnDataType": [
                    "List<Grupo>"
                ],
                "identifier": [
                    "List",
                    "Grupo"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return grupos;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 99,
                "lineEnd": 101,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_grupo": {
                "name": "getFk_id_grupo",
                "lineBegin": 151,
                "lineEnd": 153,
                "annotations": [],
                "returnDataType": [
                    "Grupo"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_grupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption",
            "org.springframework.format.annotation.DateTimeFormat"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getFk_id_tipo_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Tipo_curso",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_tipo_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setGrupos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Grupo>",
                        "variable": "grupos",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.grupos = grupos;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Certificado>",
                        "variable": "certificados",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.certificados = certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setHoras",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "horas",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.horas = horas;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCertificados",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Certificado>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return certificados;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTemp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "temp",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.temp = temp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Grupo",
                        "variable": "fk_id_grupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_grupo = fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_curso = pk_id_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getHoras",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return horas;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setStTabla",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "stTabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.stTabla = stTabla;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempGrupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempGrupo = tempGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTemp",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return temp;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempTipoCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempTipoCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_tipo_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Tipo_curso",
                        "variable": "fk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_tipo_curso = fk_id_tipo_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave = clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTempGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tempGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTempTipoCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tempTipoCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tempTipoCurso = tempTipoCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getGrupos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Grupo>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return grupos;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_grupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Grupo",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_grupo;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Tipo_curso": {
        "full_name": "com.cocay.sicecd.model.Tipo_curso",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 57,
        "short_name": "Tipo_curso",
        "src": "com.cocay.sicecd.model.Tipo_curso",
        "annotations": [
            "@Entity",
            "@Table(name = \"Tipo_curso\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_tipo_curso\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_tipo_curso",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 40)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_tipo_curso\", targetEntity = Curso.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Curso"
                ],
                "type": "List<Curso>",
                "variable": "cursos",
                "lineBegin": 29,
                "lineEnd": 31
            }
        ],
        "methods": {
            "getCursos": {
                "name": "getCursos",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "List<Curso>"
                ],
                "identifier": [
                    "List",
                    "Curso"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cursos;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_tipo_curso": {
                "name": "setPk_id_tipo_curso",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_tipo_curso = pk_id_tipo_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_tipo_curso": {
                "name": "getPk_id_tipo_curso",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_tipo_curso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCursos": {
                "name": "setCursos",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Curso>",
                        "variable": "cursos",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cursos = cursos;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getCursos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Curso>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cursos;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_tipo_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_tipo_curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_tipo_curso = pk_id_tipo_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_tipo_curso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_tipo_curso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCursos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Curso>",
                        "variable": "cursos",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cursos = cursos;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ConsultaController": {
        "full_name": "com.cocay.sicecd.controller.ConsultaController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 81,
        "short_name": "ConsultaController",
        "src": "com.cocay.sicecd.controller.ConsultaController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "ProfesorRep",
                "variable": "profesor",
                "lineBegin": 20,
                "lineEnd": 21
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 23,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tipo_cursoRep",
                "lineBegin": 26,
                "lineEnd": 27
            }
        ],
        "methods": {
            "show": {
                "name": "show",
                "lineBegin": 29,
                "lineEnd": 34,
                "annotations": [
                    "@RequestMapping(value = \"/consultas\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    // model.addAttribute(\"profesores\", profesor.findAll());\r\n    return \"consultas/consultas\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "resultadosProfesores": {
                "name": "resultadosProfesores",
                "lineBegin": 65,
                "lineEnd": 79,
                "annotations": [
                    "@RequestMapping(value = \"/resultadosProfesores\", method = { RequestMethod.GET, RequestMethod.POST })"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String nombre = request.getParameter(\"nombre\");\r\n    String apellido_paterno = request.getParameter(\"apellido_paterno\");\r\n    String apellido_materno = request.getParameter(\"apellido_materno\");\r\n    if (nombre == null) {\r\n        nombre = \"\";\r\n    } else {\r\n        nombre = nombre.toUpperCase();\r\n    }\r\n    if (apellido_paterno == null) {\r\n        apellido_paterno = \"\";\r\n    } else {\r\n        apellido_paterno = apellido_paterno.toUpperCase();\r\n    }\r\n    if (apellido_materno == null) {\r\n        apellido_materno = \"\";\r\n    } else {\r\n        apellido_materno = apellido_materno.toUpperCase();\r\n    }\r\n    System.out.println(nombre + \"-___-\" + apellido_paterno + \"-___-\" + apellido_materno);\r\n    model.addAttribute(\"profesores\", profesor.findByCompleteNameList(nombre, apellido_paterno, apellido_materno));\r\n    return \"consultas/resultados-profesores\";\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "nombre",
                        "methodName": "toUpperCase",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "apellido_paterno",
                        "methodName": "toUpperCase",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "apellido_materno",
                        "methodName": "toUpperCase",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "profesor",
                        "methodName": "findByCompleteNameList",
                        "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
                    }
                ],
                "exception": []
            },
            "consultasProfesores": {
                "name": "consultasProfesores",
                "lineBegin": 36,
                "lineEnd": 63,
                "annotations": [
                    "@RequestMapping(value = \"/consultasProfesores\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Tipo_curso",
                        "variable": "tipo_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    //*\r\n    Tipo_curso tipo_curso = tipo_cursoRep.findByNombre(\"Curso\").get(0);\r\n    System.out.println(\"====================\");\r\n    System.out.println(tipo_curso.toString());\r\n    System.out.println(tipo_curso.getPk_id_tipo_curso());\r\n    System.out.println(tipo_curso.getNombre());\r\n    tipo_cursoRep.save(tipo_curso);\r\n    Curso curso = new Curso();\r\n    curso.setClave(\"100\");\r\n    curso.setNombre(\"TEST\");\r\n    curso.setHoras(20);\r\n    curso.setFk_id_tipo_curso(tipo_curso);\r\n    System.out.println(curso.toString());\r\n    System.out.println(curso.getFk_id_tipo_curso().getPk_id_tipo_curso());\r\n    System.out.println(curso.getFk_id_tipo_curso().getNombre());\r\n    cursoRep.save(curso);\r\n    //*/\r\n    //cursoRep.insertCurso(\"001\", \"TEST\", 1, 20);\r\n    return \"consultas/profesores\";\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "tipo_cursoRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "tipo_cursoRep.findByNombre(\"Curso\")",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "tipo_curso",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "tipo_curso",
                        "methodName": "getPk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "tipo_curso",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "tipo_cursoRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "toString",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso.getFk_id_tipo_curso()",
                        "methodName": "getPk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso.getFk_id_tipo_curso()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "tipo_cursoRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "tipo_cursoRep.findByNombre(\"Curso\")",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "tipo_curso",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "tipo_curso",
                "methodName": "getPk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "tipo_curso",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "tipo_cursoRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "curso",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "setHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "setFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "toString",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso.getFk_id_tipo_curso()",
                "methodName": "getPk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "curso",
                "methodName": "getFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso.getFk_id_tipo_curso()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Tipo_curso"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "profesor",
                "methodName": "findByCompleteNameList",
                "targetClassName": "com.cocay.sicecd.repo.ProfesorRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "show",
                "annotations": [
                    "@RequestMapping(value = \"/consultas\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    // model.addAttribute(\"profesores\", profesor.findAll());\r",
                    "    return \"consultas/consultas\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "resultadosProfesores",
                "annotations": [
                    "@RequestMapping(value = \"/resultadosProfesores\", method = { RequestMethod.GET, RequestMethod.POST })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String nombre = request.getParameter(\"nombre\");\r",
                    "    String apellido_paterno = request.getParameter(\"apellido_paterno\");\r",
                    "    String apellido_materno = request.getParameter(\"apellido_materno\");\r",
                    "    if (nombre == null) {\r",
                    "        nombre = \"\";\r",
                    "    } else {\r",
                    "        nombre = nombre.toUpperCase();\r",
                    "    }\r",
                    "    if (apellido_paterno == null) {\r",
                    "        apellido_paterno = \"\";\r",
                    "    } else {\r",
                    "        apellido_paterno = apellido_paterno.toUpperCase();\r",
                    "    }\r",
                    "    if (apellido_materno == null) {\r",
                    "        apellido_materno = \"\";\r",
                    "    } else {\r",
                    "        apellido_materno = apellido_materno.toUpperCase();\r",
                    "    }\r",
                    "    System.out.println(nombre + \"-___-\" + apellido_paterno + \"-___-\" + apellido_materno);\r",
                    "    model.addAttribute(\"profesores\", profesor.findByCompleteNameList(nombre, apellido_paterno, apellido_materno));\r",
                    "    return \"consultas/resultados-profesores\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultasProfesores",
                "annotations": [
                    "@RequestMapping(value = \"/consultasProfesores\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    //*\r",
                    "    Tipo_curso tipo_curso = tipo_cursoRep.findByNombre(\"Curso\").get(0);\r",
                    "    System.out.println(\"====================\");\r",
                    "    System.out.println(tipo_curso.toString());\r",
                    "    System.out.println(tipo_curso.getPk_id_tipo_curso());\r",
                    "    System.out.println(tipo_curso.getNombre());\r",
                    "    tipo_cursoRep.save(tipo_curso);\r",
                    "    Curso curso = new Curso();\r",
                    "    curso.setClave(\"100\");\r",
                    "    curso.setNombre(\"TEST\");\r",
                    "    curso.setHoras(20);\r",
                    "    curso.setFk_id_tipo_curso(tipo_curso);\r",
                    "    System.out.println(curso.toString());\r",
                    "    System.out.println(curso.getFk_id_tipo_curso().getPk_id_tipo_curso());\r",
                    "    System.out.println(curso.getFk_id_tipo_curso().getNombre());\r",
                    "    cursoRep.save(curso);\r",
                    "    //*/\r",
                    "    //cursoRep.insertCurso(\"001\", \"TEST\", 1, 20);\r",
                    "    return \"consultas/profesores\";\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ProcessorCurso": {
        "full_name": "com.cocay.sicecd.step.ProcessorCurso",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 74,
        "short_name": "ProcessorCurso",
        "src": "com.cocay.sicecd.step.ProcessorCurso",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "log",
                "lineBegin": 22,
                "lineEnd": 22
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_curso",
                "variable": "tp_curso",
                "lineBegin": 24,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tipoCursoRep",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "GrupoRep",
                "variable": "grupoRep",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 35,
                "lineEnd": 36
            }
        ],
        "methods": {
            "process": {
                "name": "process",
                "lineBegin": 38,
                "lineEnd": 73,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "Curso"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombreCurso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Tipo_curso",
                        "variable": "tpC",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "claveCurso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Curso",
                        "variable": "c",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String name = curso.getTempTipoCurso();\r\n    String nombreCurso = curso.getNombre();\r\n    System.out.println(nombreCurso);\r\n    Tipo_curso tpC = tipoCursoRep.findByNombreTipo(name);\r\n    if (tpC != null) {\r\n        curso.setFk_id_tipo_curso(tpC);\r\n        String claveCurso = curso.getClave();\r\n        //\t\t\tCurso c = cursoRep.findByUniqueClave(claveCurso);\r\n        Curso c = cursoRep.findByNombre(nombreCurso);\r\n        if (c == null) {\r\n            curso.setStTabla(1);\r\n            return curso;\r\n        } else {\r\n            String mensaje = \"El curso: \" + nombreCurso + \" ya existe actualmente\";\r\n            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n            Query query = em.createNativeQuery(consulta);\r\n            query.executeUpdate();\r\n            return null;\r\n        }\r\n    } else {\r\n        String mensaje = \"Error al buscar: \" + name + \" \";\r\n        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r\n        Query query = em.createNativeQuery(consulta);\r\n        query.executeUpdate();\r\n        return null;\r\n    }\r\n    //\t\tString grupoNombre = curso.getTempGrupo();\r\n    //\t\tGrupo grupo = grupoRep.findByClaveGrupo(grupoNombre);\r\n    //\t\tcurso.setFk_id_grupo(grupo);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "curso",
                        "methodName": "getTempTipoCurso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "tipoCursoRep",
                        "methodName": "findByNombreTipo",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setStTabla",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemProcessor<Curso, Curso>"
        ],
        "extends": [],
        "imports": [
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.item.ItemProcessor",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.GrupoRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "curso",
                "methodName": "getTempTipoCurso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "tipoCursoRep",
                "methodName": "findByNombreTipo",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "curso",
                "methodName": "setFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "curso",
                "methodName": "setStTabla",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "process",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Curso",
                "parameters": [
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String name = curso.getTempTipoCurso();\r",
                    "    String nombreCurso = curso.getNombre();\r",
                    "    System.out.println(nombreCurso);\r",
                    "    Tipo_curso tpC = tipoCursoRep.findByNombreTipo(name);\r",
                    "    if (tpC != null) {\r",
                    "        curso.setFk_id_tipo_curso(tpC);\r",
                    "        String claveCurso = curso.getClave();\r",
                    "        //\t\t\tCurso c = cursoRep.findByUniqueClave(claveCurso);\r",
                    "        Curso c = cursoRep.findByNombre(nombreCurso);\r",
                    "        if (c == null) {\r",
                    "            curso.setStTabla(1);\r",
                    "            return curso;\r",
                    "        } else {\r",
                    "            String mensaje = \"El curso: \" + nombreCurso + \" ya existe actualmente\";\r",
                    "            String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "            Query query = em.createNativeQuery(consulta);\r",
                    "            query.executeUpdate();\r",
                    "            return null;\r",
                    "        }\r",
                    "    } else {\r",
                    "        String mensaje = \"Error al buscar: \" + name + \" \";\r",
                    "        String consulta = \"INSERT INTO errores (mensaje, estado) VALUES ('\" + mensaje + \"', 1)\";\r",
                    "        Query query = em.createNativeQuery(consulta);\r",
                    "        query.executeUpdate();\r",
                    "        return null;\r",
                    "    }\r",
                    "    //\t\tString grupoNombre = curso.getTempGrupo();\r",
                    "    //\t\tGrupo grupo = grupoRep.findByClaveGrupo(grupoNombre);\r",
                    "    //\t\tcurso.setFk_id_grupo(grupo);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ConsultaCursoController": {
        "full_name": "com.cocay.sicecd.controller.ConsultaCursoController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 93,
        "short_name": "ConsultaCursoController",
        "src": "com.cocay.sicecd.controller.ConsultaCursoController",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "curso",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 33,
                "lineEnd": 33
            }
        ],
        "methods": {
            "normalizar": {
                "name": "normalizar",
                "lineBegin": 81,
                "lineEnd": 92,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    if (cadena == null) {\r\n        return \"\";\r\n    }\r\n    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r\n    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "consultaCurso": {
                "name": "consultaCurso",
                "lineBegin": 44,
                "lineEnd": 73,
                "annotations": [
                    "@RequestMapping(value = \"/consultaCurso\", method = RequestMethod.POST)"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "nombre_curso_acento",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave_curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "id_tipo",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        String nombre_curso_acento = request.getParameter(\"nombre_curso\").toUpperCase().trim();\r\n        String nombre_curso = normalizar(nombre_curso_acento);\r\n        String clave_curso = request.getParameter(\"clave_curso\").toUpperCase().trim();\r\n        Integer id_tipo = Integer.parseInt(request.getParameter(\"tipos_cursos\"));\r\n        List<Curso> cursos = new ArrayList<Curso>();\r\n        if (id_tipo == 0) {\r\n            cursos = curso.findByParams(nombre_curso, clave_curso);\r\n        } else {\r\n            cursos = curso.findByParams(nombre_curso, clave_curso, id_tipo);\r\n        }\r\n        if (!cursos.isEmpty() || cursos.size() > 0) {\r\n            model.put(\"cursos\", cursos);\r\n            return new ModelAndView(\"ConsultarCurso/muestraListaCurso\", model);\r\n        } else {\r\n            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r\n            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n        }\r\n    } catch (NullPointerException e) {\r\n        LOGGER.error(\"En la Tabla Curso se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r\n        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r\n        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "curso",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "findByParams",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": [
                    "ParseException"
                ]
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.text.Normalizer",
            "java.text.ParseException",
            "java.text.SimpleDateFormat",
            "java.util.ArrayList",
            "java.util.Date",
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.ui.ModelMap",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Grupo",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.repo.CursoRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "this",
                "methodName": "getClass",
                "targetClassName": "com.cocay.sicecd.controller.ConsultaCursoController"
            },
            {
                "scopeName": "curso",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            },
            {
                "scopeName": "curso",
                "methodName": "findByParams",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "normalizar",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cadena",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (cadena == null) {\r",
                    "        return \"\";\r",
                    "    }\r",
                    "    cadena = cadena.replace('\u00ef\u00bf\u00bd', '\\001');\r",
                    "    return Normalizer.normalize(cadena, Normalizer.Form.NFD).replaceAll(\"[^\\\\p{ASCII}]\", \"\").replace('\\001', '\u00ef\u00bf\u00bd');\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "consultaCurso",
                "annotations": [
                    "@RequestMapping(value = \"/consultaCurso\", method = RequestMethod.POST)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "ModelMap",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        String nombre_curso_acento = request.getParameter(\"nombre_curso\").toUpperCase().trim();\r",
                    "        String nombre_curso = normalizar(nombre_curso_acento);\r",
                    "        String clave_curso = request.getParameter(\"clave_curso\").toUpperCase().trim();\r",
                    "        Integer id_tipo = Integer.parseInt(request.getParameter(\"tipos_cursos\"));\r",
                    "        List<Curso> cursos = new ArrayList<Curso>();\r",
                    "        if (id_tipo == 0) {\r",
                    "            cursos = curso.findByParams(nombre_curso, clave_curso);\r",
                    "        } else {\r",
                    "            cursos = curso.findByParams(nombre_curso, clave_curso, id_tipo);\r",
                    "        }\r",
                    "        if (!cursos.isEmpty() || cursos.size() > 0) {\r",
                    "            model.put(\"cursos\", cursos);\r",
                    "            return new ModelAndView(\"ConsultarCurso/muestraListaCurso\", model);\r",
                    "        } else {\r",
                    "            model.addAttribute(\"mensaje\", \"Tu b\u00ef\u00bf\u00bdsqueda no arrojo ning\u00ef\u00bf\u00bdn resultado\");\r",
                    "            return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "        }\r",
                    "    } catch (NullPointerException e) {\r",
                    "        LOGGER.error(\"En la Tabla Curso se encuentra una columna con todos sus datos con valor \" + e.getMessage() + \" que provoca el error.\");\r",
                    "        model.addAttribute(\"mensaje\", \"\u00ef\u00bf\u00bdLo sentimos!\\nEn nuestra base de datos no tenemos datos con el cual comparar la informaci\u00ef\u00bf\u00bdn que ingresaste\");\r",
                    "        return new ModelAndView(\"/Avisos/ErrorBusqueda\");\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": [
                    "ParseException"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.CursosController": {
        "full_name": "com.cocay.sicecd.controller.CursosController",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 76,
        "short_name": "CursosController",
        "src": "com.cocay.sicecd.controller.CursosController",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"AdministracionRegistroManual\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "CursoRep",
                "variable": "cursoRep",
                "lineBegin": 28,
                "lineEnd": 29
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 31,
                "lineEnd": 32
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Tipo_cursoRep",
                "variable": "tpRep",
                "lineBegin": 34,
                "lineEnd": 35
            }
        ],
        "methods": {
            "registrarCur": {
                "name": "registrarCur",
                "lineBegin": 38,
                "lineEnd": 41,
                "annotations": [
                    "@RequestMapping(value = \"/registrarCursos2\")"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"CursosController/registrarCursos\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "agregarCurso": {
                "name": "agregarCurso",
                "lineBegin": 44,
                "lineEnd": 74,
                "annotations": [
                    "@RequestMapping(value = \"/registrarCursos\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "CursoDto",
                        "variable": "cr",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Curso",
                        "variable": "curso",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "horas",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Curso curso = new Curso();\r\n    String clave = cr.getClave();\r\n    String tipo = cr.getTipo();\r\n    String horas = cr.getHoras();\r\n    String nombre = cr.getNombre();\r\n    curso.setClave(clave);\r\n    List<Tipo_curso> cursos = tpRep.findByNombre(tipo);\r\n    if (!cursos.isEmpty()) {\r\n        curso.setFk_id_tipo_curso(cursos.get(0));\r\n    }\r\n    if (horas != \"\") {\r\n        curso.setHoras(Integer.valueOf(horas));\r\n    }\r\n    curso.setNombre(nombre);\r\n    log.setTrace(LogTypes.REGISTRAR_CURSO);\r\n    cursoRep.save(curso);\r\n    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdCurso agregado con exito!\\\"}\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "cr",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getTipo",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getHoras",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "cr",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "tpRep",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setFk_id_tipo_curso",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setHoras",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Curso"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    },
                    {
                        "scopeName": "cursoRep",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.CursoRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.http.MediaType",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.CursoDto",
            "com.cocay.sicecd.model.Curso",
            "com.cocay.sicecd.model.Tipo_curso",
            "com.cocay.sicecd.repo.CursoRep",
            "com.cocay.sicecd.repo.Tipo_cursoRep",
            "com.cocay.sicecd.service.Logging"
        ],
        "methodsInvocations": [
            {
                "scopeName": "cr",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "cr",
                "methodName": "getTipo",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "cr",
                "methodName": "getHoras",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "cr",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "curso",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "tpRep",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.Tipo_cursoRep"
            },
            {
                "scopeName": "curso",
                "methodName": "setFk_id_tipo_curso",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "setHoras",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "curso",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Curso"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "cursoRep",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.CursoRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "registrarCur",
                "annotations": [
                    "@RequestMapping(value = \"/registrarCursos2\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "HttpServletRequest",
                        "variable": "request",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"CursosController/registrarCursos\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "agregarCurso",
                "annotations": [
                    "@RequestMapping(value = \"/registrarCursos\", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "CursoDto",
                        "variable": "cr",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Curso curso = new Curso();\r",
                    "    String clave = cr.getClave();\r",
                    "    String tipo = cr.getTipo();\r",
                    "    String horas = cr.getHoras();\r",
                    "    String nombre = cr.getNombre();\r",
                    "    curso.setClave(clave);\r",
                    "    List<Tipo_curso> cursos = tpRep.findByNombre(tipo);\r",
                    "    if (!cursos.isEmpty()) {\r",
                    "        curso.setFk_id_tipo_curso(cursos.get(0));\r",
                    "    }\r",
                    "    if (horas != \"\") {\r",
                    "        curso.setHoras(Integer.valueOf(horas));\r",
                    "    }\r",
                    "    curso.setNombre(nombre);\r",
                    "    log.setTrace(LogTypes.REGISTRAR_CURSO);\r",
                    "    cursoRep.save(curso);\r",
                    "    return ResponseEntity.ok(\"{\\\"message\\\":\\\"\u00ef\u00bf\u00bdCurso agregado con exito!\\\"}\");\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.ReaderCurso": {
        "full_name": "com.cocay.sicecd.step.ReaderCurso",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 36,
        "short_name": "ReaderCurso",
        "src": "com.cocay.sicecd.step.ReaderCurso",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "reader": {
                "name": "reader",
                "lineBegin": 15,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "FlatFileItemReader<Curso>"
                ],
                "identifier": [
                    "FlatFileItemReader",
                    "Curso"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    FlatFileItemReader<Curso> reader = new FlatFileItemReader<Curso>();\r\n    reader.setResource(new ClassPathResource(path));\r\n    reader.setLinesToSkip(1);\r\n    reader.setLineMapper(new DefaultLineMapper<Curso>() {\r\n\r\n        {\r\n            setLineTokenizer(new DelimitedLineTokenizer() {\r\n\r\n                {\r\n                    setNames(new String[] { \"clave\", \"nombre\", \"horas\" });\r\n                }\r\n            });\r\n            setFieldSetMapper(new BeanWrapperFieldSetMapper<Curso>() {\r\n\r\n                {\r\n                    setTargetType(Curso.class);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.batch.item.file.FlatFileItemReader",
            "org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper",
            "org.springframework.batch.item.file.mapping.DefaultLineMapper",
            "org.springframework.batch.item.file.transform.DelimitedLineTokenizer",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.core.io.ClassPathResource",
            "com.cocay.sicecd.model.Curso"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "reader",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "FlatFileItemReader<Curso>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "path",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    FlatFileItemReader<Curso> reader = new FlatFileItemReader<Curso>();\r",
                    "    reader.setResource(new ClassPathResource(path));\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setLineMapper(new DefaultLineMapper<Curso>() {\r",
                    "\r",
                    "        {\r",
                    "            setLineTokenizer(new DelimitedLineTokenizer() {\r",
                    "\r",
                    "                {\r",
                    "                    setNames(new String[] { \"clave\", \"nombre\", \"horas\" });\r",
                    "                }\r",
                    "            });\r",
                    "            setFieldSetMapper(new BeanWrapperFieldSetMapper<Curso>() {\r",
                    "\r",
                    "                {\r",
                    "                    setTargetType(Curso.class);\r",
                    "                }\r",
                    "            });\r",
                    "        }\r",
                    "    });\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.CursoDto": {
        "full_name": "com.cocay.sicecd.dto.CursoDto",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 97,
        "short_name": "CursoDto",
        "src": "com.cocay.sicecd.dto.CursoDto",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tipo",
                "lineBegin": 7,
                "lineEnd": 7
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "horas",
                "lineBegin": 9,
                "lineEnd": 9
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 11,
                "lineEnd": 11
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "fInicio",
                "lineBegin": 13,
                "lineEnd": 13
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "fTermino",
                "lineBegin": 15,
                "lineEnd": 15
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "idCurso",
                "lineBegin": 17,
                "lineEnd": 17
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "tipoCurso",
                "lineBegin": 19,
                "lineEnd": 19
            },
            {
                "annotations": [],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "total",
                "lineBegin": 21,
                "lineEnd": 21
            }
        ],
        "methods": {
            "setTotal": {
                "name": "setTotal",
                "lineBegin": 83,
                "lineEnd": 85,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.total = total;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setHoras": {
                "name": "setHoras",
                "lineBegin": 43,
                "lineEnd": 45,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "horas",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.horas = horas;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 47,
                "lineEnd": 49,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTipoCurso": {
                "name": "getTipoCurso",
                "lineBegin": 87,
                "lineEnd": 89,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tipoCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTipo": {
                "name": "setTipo",
                "lineBegin": 35,
                "lineEnd": 37,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tipo = tipo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdCurso": {
                "name": "setIdCurso",
                "lineBegin": 75,
                "lineEnd": 77,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "idCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idCurso = idCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getHoras": {
                "name": "getHoras",
                "lineBegin": 39,
                "lineEnd": 41,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return horas;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdCurso": {
                "name": "getIdCurso",
                "lineBegin": 71,
                "lineEnd": 73,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTipo": {
                "name": "getTipo",
                "lineBegin": 31,
                "lineEnd": 33,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tipo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTipoCurso": {
                "name": "setTipoCurso",
                "lineBegin": 91,
                "lineEnd": 93,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tipoCurso",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tipoCurso = tipoCurso;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave": {
                "name": "getClave",
                "lineBegin": 23,
                "lineEnd": 25,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave": {
                "name": "setClave",
                "lineBegin": 27,
                "lineEnd": 29,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave = clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getfInicio": {
                "name": "getfInicio",
                "lineBegin": 55,
                "lineEnd": 57,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setfTermino": {
                "name": "setfTermino",
                "lineBegin": 67,
                "lineEnd": 69,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "fTermino",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fTermino = fTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getfTermino": {
                "name": "getfTermino",
                "lineBegin": 63,
                "lineEnd": 65,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTotal": {
                "name": "getTotal",
                "lineBegin": 79,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return total;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 51,
                "lineEnd": 53,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setfInicio": {
                "name": "setfInicio",
                "lineBegin": 59,
                "lineEnd": 61,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "fInicio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fInicio = fInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setTotal",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.total = total;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setHoras",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "horas",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.horas = horas;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTipoCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tipoCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTipo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tipo = tipo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "idCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idCurso = idCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getHoras",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return horas;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTipo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tipo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTipoCurso",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tipoCurso",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tipoCurso = tipoCurso;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave = clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getfInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fInicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setfTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "fTermino",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fTermino = fTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getfTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTotal",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setfInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "fInicio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fInicio = fInicio;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.config.ExcelConfig": {
        "full_name": "com.cocay.sicecd.config.ExcelConfig",
        "constructor": [],
        "package": "com.cocay.sicecd.config",
        "begin": 1,
        "end": 75,
        "short_name": "ExcelConfig",
        "src": "com.cocay.sicecd.config.ExcelConfig",
        "annotations": [
            "@Configuration"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "excelCursoReader": {
                "name": "excelCursoReader",
                "lineBegin": 26,
                "lineEnd": 33,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "ItemReader<CursoDto>"
                ],
                "identifier": [
                    "ItemReader",
                    "CursoDto"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    PoiItemReader<CursoDto> reader = new PoiItemReader<>();\r\n    reader.setLinesToSkip(1);\r\n    reader.setResource(new ClassPathResource(\"PruebaExcel.xls\"));\r\n    reader.setRowMapper(excelRowMapper());\r\n    return reader;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "excelCursoWriter": {
                "name": "excelCursoWriter",
                "lineBegin": 48,
                "lineEnd": 51,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "ItemWriter<CursoDto>"
                ],
                "identifier": [
                    "ItemWriter",
                    "CursoDto"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return new LoggingCursoWriter();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "excelFileToDatabaseJob": {
                "name": "excelFileToDatabaseJob",
                "lineBegin": 66,
                "lineEnd": 74,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Job"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "JobBuilderFactory",
                        "variable": "jobBuilderFactory",
                        "qualifedType": ""
                    },
                    {
                        "type": "Step",
                        "variable": "excelCursoStep",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return jobBuilderFactory.get(\"excelFileToDatabaseJob\").incrementer(new RunIdIncrementer()).flow(excelCursoStep).end().build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "excelFileToDatabaseStep": {
                "name": "excelFileToDatabaseStep",
                "lineBegin": 53,
                "lineEnd": 64,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "Step"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ItemReader<CursoDto>",
                        "variable": "excelCursoReader",
                        "qualifedType": ""
                    },
                    {
                        "type": "ItemProcessor<CursoDto,CursoDto>",
                        "variable": "excelCursoProcessor",
                        "qualifedType": ""
                    },
                    {
                        "type": "ItemWriter<CursoDto>",
                        "variable": "excelCursoWriter",
                        "qualifedType": ""
                    },
                    {
                        "type": "StepBuilderFactory",
                        "variable": "stepBuilderFactory",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return stepBuilderFactory.get(\"excelFileToDatabaseStep\").<CursoDto, CursoDto>chunk(1).reader(excelCursoReader).processor(excelCursoProcessor).writer(excelCursoWriter).build();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "excelCursoProcessor": {
                "name": "excelCursoProcessor",
                "lineBegin": 43,
                "lineEnd": 46,
                "annotations": [
                    "@Bean"
                ],
                "returnDataType": [
                    "ItemProcessor<CursoDto,CursoDto>"
                ],
                "identifier": [
                    "ItemProcessor",
                    "CursoDto",
                    "CursoDto"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return new LoggingCursoProcessor();\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "excelRowMapper": {
                "name": "excelRowMapper",
                "lineBegin": 35,
                "lineEnd": 37,
                "annotations": [],
                "returnDataType": [
                    "RowMapper<CursoDto>"
                ],
                "identifier": [
                    "RowMapper",
                    "CursoDto"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return new CursoExcelRowMapper();\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.batch.core.Job",
            "org.springframework.batch.core.Step",
            "org.springframework.batch.core.configuration.annotation.JobBuilderFactory",
            "org.springframework.batch.core.configuration.annotation.StepBuilderFactory",
            "org.springframework.batch.core.launch.support.RunIdIncrementer",
            "org.springframework.batch.item.ItemProcessor",
            "org.springframework.batch.item.ItemReader",
            "org.springframework.batch.item.ItemWriter",
            "org.springframework.batch.item.excel.RowMapper",
            "org.springframework.batch.item.excel.poi.PoiItemReader",
            "org.springframework.beans.factory.annotation.Qualifier",
            "org.springframework.context.annotation.Bean",
            "org.springframework.context.annotation.Configuration",
            "org.springframework.core.io.ClassPathResource",
            "com.cocay.sicecd.dto.CursoDto",
            "com.cocay.sicecd.step.CursoExcelRowMapper",
            "com.cocay.sicecd.step.LoggingCursoProcessor",
            "com.cocay.sicecd.step.LoggingCursoWriter"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "excelCursoReader",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ItemReader<CursoDto>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    PoiItemReader<CursoDto> reader = new PoiItemReader<>();\r",
                    "    reader.setLinesToSkip(1);\r",
                    "    reader.setResource(new ClassPathResource(\"PruebaExcel.xls\"));\r",
                    "    reader.setRowMapper(excelRowMapper());\r",
                    "    return reader;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "excelCursoWriter",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ItemWriter<CursoDto>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return new LoggingCursoWriter();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "excelFileToDatabaseJob",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Job",
                "parameters": [
                    {
                        "type": "JobBuilderFactory",
                        "variable": "jobBuilderFactory",
                        "qualifedType": ""
                    },
                    {
                        "type": "Step",
                        "variable": "excelCursoStep",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return jobBuilderFactory.get(\"excelFileToDatabaseJob\").incrementer(new RunIdIncrementer()).flow(excelCursoStep).end().build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "excelFileToDatabaseStep",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "Step",
                "parameters": [
                    {
                        "type": "ItemReader<CursoDto>",
                        "variable": "excelCursoReader",
                        "qualifedType": ""
                    },
                    {
                        "type": "ItemProcessor<CursoDto,CursoDto>",
                        "variable": "excelCursoProcessor",
                        "qualifedType": ""
                    },
                    {
                        "type": "ItemWriter<CursoDto>",
                        "variable": "excelCursoWriter",
                        "qualifedType": ""
                    },
                    {
                        "type": "StepBuilderFactory",
                        "variable": "stepBuilderFactory",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return stepBuilderFactory.get(\"excelFileToDatabaseStep\").<CursoDto, CursoDto>chunk(1).reader(excelCursoReader).processor(excelCursoProcessor).writer(excelCursoWriter).build();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "excelCursoProcessor",
                "annotations": [
                    "@Bean"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ItemProcessor<CursoDto,CursoDto>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return new LoggingCursoProcessor();\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "excelRowMapper",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "RowMapper<CursoDto>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return new CursoExcelRowMapper();\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.CursoExcelRowMapper": {
        "full_name": "com.cocay.sicecd.step.CursoExcelRowMapper",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 21,
        "short_name": "CursoExcelRowMapper",
        "src": "com.cocay.sicecd.step.CursoExcelRowMapper",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "mapRow": {
                "name": "mapRow",
                "lineBegin": 10,
                "lineEnd": 19,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "CursoDto"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "RowSet",
                        "variable": "rowSet",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "CursoDto",
                        "variable": "curso",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    CursoDto curso = new CursoDto();\r\n    curso.setClave(rowSet.getColumnValue(0));\r\n    curso.setNombre(rowSet.getColumnValue(1));\r\n    curso.setTipo(rowSet.getColumnValue(2));\r\n    curso.setHoras(rowSet.getColumnValue(3));\r\n    // TODO Auto-generated method stub\r\n    return null;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "curso",
                        "methodName": "setClave",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setTipo",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    },
                    {
                        "scopeName": "curso",
                        "methodName": "setHoras",
                        "targetClassName": "com.cocay.sicecd.dto.CursoDto"
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "RowMapper<CursoDto>"
        ],
        "extends": [],
        "imports": [
            "org.springframework.batch.item.excel.RowMapper",
            "org.springframework.batch.item.excel.support.rowset.RowSet",
            "com.cocay.sicecd.dto.CursoDto"
        ],
        "methodsInvocations": [
            {
                "scopeName": "curso",
                "methodName": "setClave",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "curso",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "curso",
                "methodName": "setTipo",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            },
            {
                "scopeName": "curso",
                "methodName": "setHoras",
                "targetClassName": "com.cocay.sicecd.dto.CursoDto"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "mapRow",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "CursoDto",
                "parameters": [
                    {
                        "type": "RowSet",
                        "variable": "rowSet",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    CursoDto curso = new CursoDto();\r",
                    "    curso.setClave(rowSet.getColumnValue(0));\r",
                    "    curso.setNombre(rowSet.getColumnValue(1));\r",
                    "    curso.setTipo(rowSet.getColumnValue(2));\r",
                    "    curso.setHoras(rowSet.getColumnValue(3));\r",
                    "    // TODO Auto-generated method stub\r",
                    "    return null;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.step.LoggingCursoProcessor": {
        "full_name": "com.cocay.sicecd.step.LoggingCursoProcessor",
        "constructor": [],
        "package": "com.cocay.sicecd.step",
        "begin": 1,
        "end": 21,
        "short_name": "LoggingCursoProcessor",
        "src": "com.cocay.sicecd.step.LoggingCursoProcessor",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Logger",
                "variable": "LOGGER",
                "lineBegin": 12,
                "lineEnd": 12
            }
        ],
        "methods": {
            "process": {
                "name": "process",
                "lineBegin": 14,
                "lineEnd": 18,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "CursoDto"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "CursoDto",
                        "variable": "item",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    LOGGER.info(\"Processing student information: {}\", item);\r\n    return item;\r\n}",
                "methodInvocations": [],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [
            "ItemProcessor<CursoDto, CursoDto>"
        ],
        "extends": [],
        "imports": [
            "org.slf4j.Logger",
            "org.slf4j.LoggerFactory",
            "org.springframework.batch.item.ItemProcessor",
            "com.cocay.sicecd.dto.CursoDto"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "process",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "CursoDto",
                "parameters": [
                    {
                        "type": "CursoDto",
                        "variable": "item",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    LOGGER.info(\"Processing student information: {}\", item);\r",
                    "    return item;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Usuario_sysRep": {
        "full_name": "com.cocay.sicecd.repo.Usuario_sysRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 23,
        "short_name": "Usuario_sysRep",
        "src": "com.cocay.sicecd.repo.Usuario_sysRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByRfc": {
                "name": "findByRfc",
                "lineBegin": 13,
                "lineEnd": 13,
                "annotations": [],
                "returnDataType": [
                    "List<Usuario_sys>"
                ],
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "existsByRfc": {
                "name": "existsByRfc",
                "lineBegin": 15,
                "lineEnd": 15,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "existsByCorreo": {
                "name": "existsByCorreo",
                "lineBegin": 16,
                "lineEnd": 16,
                "annotations": [],
                "returnDataType": [
                    "boolean"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "sinprecargado": {
                "name": "sinprecargado",
                "lineBegin": 19,
                "lineEnd": 20,
                "annotations": [
                    "@Query(value = \"SELECT * FROM Usuario_sys WHERE pk_id_usuario_sys != 1\", nativeQuery = true)"
                ],
                "returnDataType": [
                    "List<Usuario_sys>"
                ],
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Usuario_sys, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.jpa.repository.Query",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Usuario_sys"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Usuario_sys>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "existsByRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "existsByCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "boolean",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "sinprecargado",
                "annotations": [
                    "@Query(value = \"SELECT * FROM Usuario_sys WHERE pk_id_usuario_sys != 1\", nativeQuery = true)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<Usuario_sys>",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.AltaUsuarios": {
        "full_name": "com.cocay.sicecd.controller.AltaUsuarios",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 156,
        "short_name": "AltaUsuarios",
        "src": "com.cocay.sicecd.controller.AltaUsuarios",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "_usuarioSys",
                "lineBegin": 45,
                "lineEnd": 46
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Estatus_usuario_sysRep",
                "variable": "estatusSys",
                "lineBegin": 47,
                "lineEnd": 48
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Perfil_sysRep",
                "variable": "perfilSys",
                "lineBegin": 49,
                "lineEnd": 50
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "_email",
                "lineBegin": 51,
                "lineEnd": 52
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 53,
                "lineEnd": 54
            },
            {
                "annotations": [
                    "@Value(\"${path_dominio}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "dominio",
                "lineBegin": 57,
                "lineEnd": 58
            },
            {
                "annotations": [
                    "@Value(\"spring.mail.username\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "origen",
                "lineBegin": 60,
                "lineEnd": 61
            }
        ],
        "methods": {
            "darAltaUsuario": {
                "name": "darAltaUsuario",
                "lineBegin": 73,
                "lineEnd": 109,
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/altaUsuario\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "link",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    if (_usuarioSys.existsByRfc(consulta.getRfc())) {\r\n        return ResponseEntity.ok(\"El usuario con este rfc ya ha sido agregado\");\r\n    }\r\n    if (_usuarioSys.existsByCorreo(consulta.getCorreo())) {\r\n        return ResponseEntity.ok(\"El usuario con este correo ya ha sido agregado\");\r\n    }\r\n    consulta.setFk_id_estatus_usuario_sys(estatusSys.findByNombre(\"Inactivo\").get(0));\r\n    consulta.setConfirmacion(\"true\");\r\n    consulta.setConfirmacioncorreo(\"false\");\r\n    consulta.setConfirmarecupera(\"false\");\r\n    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r\n    consulta.setCodigo(codigo);\r\n    _usuarioSys.save(consulta);\r\n    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r\n    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r\n    String from = origen;\r\n    String to = consulta.getCorreo();\r\n    String subject = \"Activaci\u00ef\u00bf\u00bdn de cuenta\";\r\n    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara activar tu cuenta y configurar una nueva contrase&ntilde;a.\";\r\n    try {\r\n        _email.sendMail(from, to, subject, body);\r\n    } catch (Exception e) {\r\n        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica que la direccion sea valida, o tu conexion.\");\r\n    }\r\n    log.setTrace(LogTypes.ALTA_USUARIO);\r\n    return ResponseEntity.ok(\"Usuario Agregado con exito\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "existsByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "existsByCorreo",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "estatusSys",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
                    },
                    {
                        "scopeName": "estatusSys.findByNombre(\"Inactivo\")",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "setFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "setConfirmacion",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "setConfirmacioncorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "setConfirmarecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "setCodigo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "ActivacionAdministrador": {
                "name": "ActivacionAdministrador",
                "lineBegin": 122,
                "lineEnd": 147,
                "annotations": [
                    "@PostMapping(\"/activacion\")"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "contrasena",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "candidato",
                        "qualifedType": ""
                    },
                    {
                        "type": "BCryptPasswordEncoder",
                        "variable": "passwordEncoder",
                        "qualifedType": ""
                    },
                    {
                        "type": "BCryptPasswordEncoder",
                        "variable": "passwordEncoder",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    if (_usuarioSys.existsById(id)) {\r\n        Usuario_sys candidato = (_usuarioSys.findById(id)).get();\r\n        if (codigo.equals(candidato.getCodigo())) {\r\n            BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r\n            candidato.setPassword(passwordEncoder.encode(contrasena));\r\n            candidato.setFk_id_estatus_usuario_sys(estatusSys.findByNombre(\"Activo\").get(0));\r\n            candidato.setConfirmacion(\"false\");\r\n            _usuarioSys.save(candidato);\r\n        }\r\n        if (codigo.equals(candidato.getCodigorecupera())) {\r\n            BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r\n            candidato.setPassword(passwordEncoder.encode(contrasena));\r\n            candidato.setConfirmarecupera(\"false\");\r\n            _usuarioSys.save(candidato);\r\n        }\r\n    }\r\n    log.setTrace(LogTypes.ACTIVA_USUARIO);\r\n    return \"redirect:/login?mensaje=Ya puedes realizar login\";\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "existsById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "getCodigo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "passwordEncoder",
                        "methodName": "encode",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "setPassword",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "estatusSys",
                        "methodName": "findByNombre",
                        "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
                    },
                    {
                        "scopeName": "estatusSys.findByNombre(\"Activo\")",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "setFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "setConfirmacion",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "getCodigorecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "passwordEncoder",
                        "methodName": "encode",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "setPassword",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "candidato",
                        "methodName": "setConfirmarecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "formularioAltaUsuario": {
                "name": "formularioAltaUsuario",
                "lineBegin": 67,
                "lineEnd": 70,
                "annotations": [
                    "@RequestMapping(value = \"/AdministracionCursos/formAltaUsuario\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return \"altaUsuario/agregaUsuario\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "configuracionPass": {
                "name": "configuracionPass",
                "lineBegin": 112,
                "lineEnd": 120,
                "annotations": [
                    "@GetMapping(\"/configuracionPass\")"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    model.addAttribute(\"id\", id);\r\n    model.addAttribute(\"codigo\", codigo);\r\n    return \"altaUsuario/configuracionpass\";\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.servlet.http.HttpServletResponse",
            "com.cocay.sicecd.service.Logging",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.ResponseEntity",
            "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.bind.annotation.ResponseBody",
            "java.io.BufferedOutputStream",
            "java.io.File",
            "java.io.FileInputStream",
            "java.io.IOException",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Inscripcion",
            "com.cocay.sicecd.model.Profesor",
            "com.cocay.sicecd.model.Usuario_sys",
            "com.cocay.sicecd.repo.Estatus_usuario_sysRep",
            "com.cocay.sicecd.repo.InscripcionRep",
            "com.cocay.sicecd.repo.Perfil_sysRep",
            "com.cocay.sicecd.repo.ProfesorRep",
            "com.cocay.sicecd.repo.Usuario_sysRep",
            "com.cocay.sicecd.service.SendMailService"
        ],
        "methodsInvocations": [
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "existsByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "existsByCorreo",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "estatusSys",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
            },
            {
                "scopeName": "estatusSys.findByNombre(\"Inactivo\")",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "setFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "setConfirmacion",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "setConfirmacioncorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "setConfirmarecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "setCodigo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "existsById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "candidato",
                "methodName": "getCodigo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "candidato",
                "methodName": "setPassword",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "estatusSys",
                "methodName": "findByNombre",
                "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
            },
            {
                "scopeName": "estatusSys.findByNombre(\"Activo\")",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Estatus_usuario_sysRep"
            },
            {
                "scopeName": "candidato",
                "methodName": "setFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "candidato",
                "methodName": "setConfirmacion",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "candidato",
                "methodName": "getCodigorecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "candidato",
                "methodName": "setPassword",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "candidato",
                "methodName": "setConfirmarecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "darAltaUsuario",
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/altaUsuario\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (_usuarioSys.existsByRfc(consulta.getRfc())) {\r",
                    "        return ResponseEntity.ok(\"El usuario con este rfc ya ha sido agregado\");\r",
                    "    }\r",
                    "    if (_usuarioSys.existsByCorreo(consulta.getCorreo())) {\r",
                    "        return ResponseEntity.ok(\"El usuario con este correo ya ha sido agregado\");\r",
                    "    }\r",
                    "    consulta.setFk_id_estatus_usuario_sys(estatusSys.findByNombre(\"Inactivo\").get(0));\r",
                    "    consulta.setConfirmacion(\"true\");\r",
                    "    consulta.setConfirmacioncorreo(\"false\");\r",
                    "    consulta.setConfirmarecupera(\"false\");\r",
                    "    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r",
                    "    consulta.setCodigo(codigo);\r",
                    "    _usuarioSys.save(consulta);\r",
                    "    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r",
                    "    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r",
                    "    String from = origen;\r",
                    "    String to = consulta.getCorreo();\r",
                    "    String subject = \"Activaci\u00ef\u00bf\u00bdn de cuenta\";\r",
                    "    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara activar tu cuenta y configurar una nueva contrase&ntilde;a.\";\r",
                    "    try {\r",
                    "        _email.sendMail(from, to, subject, body);\r",
                    "    } catch (Exception e) {\r",
                    "        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica que la direccion sea valida, o tu conexion.\");\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.ALTA_USUARIO);\r",
                    "    return ResponseEntity.ok(\"Usuario Agregado con exito\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "ActivacionAdministrador",
                "annotations": [
                    "@PostMapping(\"/activacion\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "contrasena",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (_usuarioSys.existsById(id)) {\r",
                    "        Usuario_sys candidato = (_usuarioSys.findById(id)).get();\r",
                    "        if (codigo.equals(candidato.getCodigo())) {\r",
                    "            BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r",
                    "            candidato.setPassword(passwordEncoder.encode(contrasena));\r",
                    "            candidato.setFk_id_estatus_usuario_sys(estatusSys.findByNombre(\"Activo\").get(0));\r",
                    "            candidato.setConfirmacion(\"false\");\r",
                    "            _usuarioSys.save(candidato);\r",
                    "        }\r",
                    "        if (codigo.equals(candidato.getCodigorecupera())) {\r",
                    "            BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r",
                    "            candidato.setPassword(passwordEncoder.encode(contrasena));\r",
                    "            candidato.setConfirmarecupera(\"false\");\r",
                    "            _usuarioSys.save(candidato);\r",
                    "        }\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.ACTIVA_USUARIO);\r",
                    "    return \"redirect:/login?mensaje=Ya puedes realizar login\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formularioAltaUsuario",
                "annotations": [
                    "@RequestMapping(value = \"/AdministracionCursos/formAltaUsuario\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return \"altaUsuario/agregaUsuario\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "configuracionPass",
                "annotations": [
                    "@GetMapping(\"/configuracionPass\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    model.addAttribute(\"id\", id);\r",
                    "    model.addAttribute(\"codigo\", codigo);\r",
                    "    return \"altaUsuario/configuracionpass\";\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.RecuperaContrasena": {
        "full_name": "com.cocay.sicecd.controller.RecuperaContrasena",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 65,
        "short_name": "RecuperaContrasena",
        "src": "com.cocay.sicecd.controller.RecuperaContrasena",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "_usuarioSys",
                "lineBegin": 18,
                "lineEnd": 19
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "_email",
                "lineBegin": 20,
                "lineEnd": 21
            },
            {
                "annotations": [
                    "@Value(\"spring.mail.username\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "origen",
                "lineBegin": 22,
                "lineEnd": 23
            },
            {
                "annotations": [
                    "@Value(\"${path_dominio}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "dominio",
                "lineBegin": 25,
                "lineEnd": 26
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 28,
                "lineEnd": 29
            }
        ],
        "methods": {
            "enviarecupera": {
                "name": "enviarecupera",
                "lineBegin": 31,
                "lineEnd": 62,
                "annotations": [
                    "@PostMapping(\"/enviarecupera\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "mensaje",
                        "qualifedType": ""
                    },
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "link",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "correoo",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String mensaje = \"\";\r\n    if (!_usuarioSys.existsByRfc(consulta.getRfc())) {\r\n        mensaje = \"RFC no valido\";\r\n    } else {\r\n        Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r\n        String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r\n        String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r\n        String from = origen;\r\n        String to = guardado.getCorreo();\r\n        String subject = \"Recuperacion de contrase&ntilde;a\";\r\n        String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara confirmar tu correo.\";\r\n        try {\r\n            _email.sendMail(from, to, subject, body);\r\n        } catch (Exception e) {\r\n            return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r\n        }\r\n        guardado.setCodigorecupera(codigo);\r\n        guardado.setConfirmarecupera(\"true\");\r\n        _usuarioSys.save(guardado);\r\n        String correoo = guardado.getCorreo();\r\n        mensaje = \"Se ha enviado un link a \" + correoo.substring(0, 3) + \"*****\" + correoo.substring(correoo.length() - 3, correoo.length());\r\n    }\r\n    log.setTrace(LogTypes.RECUPERA_PASSWORD);\r\n    return ResponseEntity.ok(mensaje);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "existsByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setCodigorecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setConfirmarecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "correoo",
                        "methodName": "substring",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "correoo",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "correoo",
                        "methodName": "length",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "correoo",
                        "methodName": "substring",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Usuario_sys",
            "com.cocay.sicecd.repo.Usuario_sysRep",
            "com.cocay.sicecd.service.Logging",
            "com.cocay.sicecd.service.SendMailService"
        ],
        "methodsInvocations": [
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "existsByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "guardado",
                "methodName": "setCodigorecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setConfirmarecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "enviarecupera",
                "annotations": [
                    "@PostMapping(\"/enviarecupera\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String mensaje = \"\";\r",
                    "    if (!_usuarioSys.existsByRfc(consulta.getRfc())) {\r",
                    "        mensaje = \"RFC no valido\";\r",
                    "    } else {\r",
                    "        Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r",
                    "        String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r",
                    "        String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r",
                    "        String from = origen;\r",
                    "        String to = guardado.getCorreo();\r",
                    "        String subject = \"Recuperacion de contrase&ntilde;a\";\r",
                    "        String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara confirmar tu correo.\";\r",
                    "        try {\r",
                    "            _email.sendMail(from, to, subject, body);\r",
                    "        } catch (Exception e) {\r",
                    "            return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r",
                    "        }\r",
                    "        guardado.setCodigorecupera(codigo);\r",
                    "        guardado.setConfirmarecupera(\"true\");\r",
                    "        _usuarioSys.save(guardado);\r",
                    "        String correoo = guardado.getCorreo();\r",
                    "        mensaje = \"Se ha enviado un link a \" + correoo.substring(0, 3) + \"*****\" + correoo.substring(correoo.length() - 3, correoo.length());\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.RECUPERA_PASSWORD);\r",
                    "    return ResponseEntity.ok(mensaje);\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.EditarPerfil": {
        "full_name": "com.cocay.sicecd.controller.EditarPerfil",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 220,
        "short_name": "EditarPerfil",
        "src": "com.cocay.sicecd.controller.EditarPerfil",
        "annotations": [
            "@Controller"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "_usuarioSys",
                "lineBegin": 28,
                "lineEnd": 29
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "_email",
                "lineBegin": 30,
                "lineEnd": 31
            },
            {
                "annotations": [
                    "@Value(\"spring.mail.username\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "origen",
                "lineBegin": 33,
                "lineEnd": 34
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Logging",
                "variable": "log",
                "lineBegin": 36,
                "lineEnd": 37
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "HttpServletRequest",
                "variable": "request",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@Value(\"${path_dominio}\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "dominio",
                "lineBegin": 42,
                "lineEnd": 43
            }
        ],
        "methods": {
            "listaUsuarios": {
                "name": "listaUsuarios",
                "lineBegin": 62,
                "lineEnd": 68,
                "annotations": [
                    "@GetMapping(\"/AdministracionCursos/listaUsuarios\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ModelAndView model = new ModelAndView(\"editarPerfil/listausuarios\");\r\n    model.addObject(\"usuarios\", _usuarioSys.sinprecargado());\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "sinprecargado",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "renviarRecupera": {
                "name": "renviarRecupera",
                "lineBegin": 151,
                "lineEnd": 174,
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviarrecupera\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "link",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r\n    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r\n    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r\n    String from = origen;\r\n    String to = guardado.getCorreo();\r\n    String subject = \"Recupera Contrase\u00ef\u00bf\u00bda\";\r\n    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\nrecuperar tu contrase&ntilde;a.\";\r\n    try {\r\n        _email.sendMail(from, to, subject, body);\r\n    } catch (Exception e) {\r\n        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica que la direccion sea valida, o tu conexion.\");\r\n    }\r\n    guardado.setCodigorecupera(codigo);\r\n    guardado.setConfirmarecupera(\"true\");\r\n    _usuarioSys.save(guardado);\r\n    log.setTrace(LogTypes.RECUPERA_PASSWORD);\r\n    return ResponseEntity.ok(\"Correo reenviado\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setCodigorecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setConfirmarecupera",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "confirmaCorreo": {
                "name": "confirmaCorreo",
                "lineBegin": 204,
                "lineEnd": 218,
                "annotations": [
                    "@GetMapping(value = \"/confirmacorreo\")"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "u",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    if (_usuarioSys.existsById(id)) {\r\n        Usuario_sys u = _usuarioSys.findById(id).get();\r\n        if (u.getCodigoCorreo().equals(codigo)) {\r\n            u.setCorreo(u.getCorreocambio());\r\n            u.setCorreocambio(\"\");\r\n            u.setConfirmacioncorreo(\"false\");\r\n            _usuarioSys.save(u);\r\n        }\r\n    }\r\n    return \"redirect:/login?mensaje=CorreoActualizado\";\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "existsById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findById(id)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "getCodigoCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "u.getCodigoCorreo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "getCorreocambio",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "setCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "setCorreocambio",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "u",
                        "methodName": "setConfirmacioncorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    }
                ],
                "exception": []
            },
            "renviarCambioCorreo": {
                "name": "renviarCambioCorreo",
                "lineBegin": 140,
                "lineEnd": 149,
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviarcambiocorreo\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r\n    editarCorreo(guardado, consulta);\r\n    log.setTrace(LogTypes.RENVIA_CAMBIO_CORREO);\r\n    return ResponseEntity.ok(\"Correo reenviado\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "editarPerfilUsuario": {
                "name": "editarPerfilUsuario",
                "lineBegin": 79,
                "lineEnd": 137,
                "annotations": [
                    "@PostMapping(value = \"/AdministracionCursos/editarperfilusuario\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "cambios",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "frome",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "toe",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subjecte",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "bodye",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Usuario_sys guardado = _usuarioSys.findById(consulta.getPk_id_usuario_sys()).get();\r\n    String cambios = \"\";\r\n    if (!guardado.getRfc().equals(consulta.getRfc())) {\r\n        cambios += \"Rfc de \" + guardado.getRfc() + \" a \" + consulta.getRfc() + \"\\n\";\r\n        guardado.setRfc(consulta.getRfc());\r\n    }\r\n    if (!guardado.getNombre().equals(consulta.getNombre())) {\r\n        cambios += \"Nombre de \" + guardado.getNombre() + \" a \" + consulta.getNombre() + \"\\n\";\r\n        guardado.setNombre(consulta.getNombre());\r\n    }\r\n    if (!guardado.getApellido_paterno().equals(consulta.getApellido_paterno())) {\r\n        cambios += \"Apellido Paterno de \" + guardado.getApellido_paterno() + \" a \" + consulta.getApellido_paterno() + \"\\n\";\r\n        guardado.setApellido_paterno(consulta.getApellido_paterno());\r\n    }\r\n    if (!guardado.getApellido_materno().equals(consulta.getApellido_materno())) {\r\n        cambios += \"Apellido Materno de \" + guardado.getApellido_materno() + \" a \" + consulta.getApellido_materno() + \"\\n\";\r\n        guardado.setApellido_materno(consulta.getApellido_materno());\r\n    }\r\n    if (!guardado.getFk_id_perfil_sys().getNombre().equals(consulta.getFk_id_perfil_sys().getNombre())) {\r\n        cambios += \"Perfil \" + guardado.getFk_id_perfil_sys().getNombre() + \" a \" + consulta.getFk_id_perfil_sys().getNombre() + \"\\n\";\r\n        guardado.setFk_id_perfil_sys(consulta.getFk_id_perfil_sys());\r\n    }\r\n    if (!guardado.getFk_id_estatus_usuario_sys().getNombre().equals(consulta.getFk_id_estatus_usuario_sys().getNombre())) {\r\n        cambios += \"Estatus \" + guardado.getFk_id_estatus_usuario_sys().getNombre() + \" a \" + consulta.getFk_id_estatus_usuario_sys().getNombre() + \"\\n\";\r\n        guardado.setFk_id_estatus_usuario_sys(consulta.getFk_id_estatus_usuario_sys());\r\n    }\r\n    if (!consulta.getCorreo().equals(guardado.getCorreo())) {\r\n        editarCorreo(guardado, consulta);\r\n    }\r\n    String frome = origen;\r\n    String toe = guardado.getCorreo();\r\n    String subjecte = \"Edicion de Perfil\";\r\n    String bodye = \"Hola se han echo una serie de cambios en tu perfil\\n\" + cambios;\r\n    if (!cambios.equals(\"\")) {\r\n        try {\r\n            _email.sendMail(frome, toe, subjecte, bodye);\r\n        } catch (Exception e) {\r\n            return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r\n        }\r\n        _usuarioSys.save(guardado);\r\n    }\r\n    log.setTrace(LogTypes.EDITA_USUARIO, null, guardado.getRfc());\r\n    return ResponseEntity.ok(\"Usuario Editado con exito\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findById",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findById(consulta.getPk_id_usuario_sys())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getRfc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setNombre",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getApellido_paterno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setApellido_paterno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getApellido_materno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setApellido_materno",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta.getFk_id_perfil_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_perfil_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_perfil_sys().getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_perfil_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta.getFk_id_perfil_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta.getFk_id_estatus_usuario_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_estatus_usuario_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_estatus_usuario_sys().getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado.getFk_id_estatus_usuario_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta.getFk_id_estatus_usuario_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta.getCorreo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "cambios",
                        "methodName": "equals",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "formEditarPerfilUsuario": {
                "name": "formEditarPerfilUsuario",
                "lineBegin": 70,
                "lineEnd": 77,
                "annotations": [
                    "@GetMapping(value = \"/AdministracionCursos/formEditarPerfilUsuario\")"
                ],
                "returnDataType": [
                    "ModelAndView"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "cambio",
                        "qualifedType": ""
                    },
                    {
                        "type": "ModelAndView",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Usuario_sys cambio = (_usuarioSys.findByRfc(rfc.trim())).get(0);\r\n    ModelAndView model = new ModelAndView(\"editarPerfil/formEditarPerfilUsuario\");\r\n    model.addObject(\"usuario\", cambio);\r\n    return model;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "model",
                        "methodName": "addObject",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "renviarActivacion": {
                "name": "renviarActivacion",
                "lineBegin": 179,
                "lineEnd": 202,
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviaactiva\")"
                ],
                "returnDataType": [
                    "ResponseEntity<String>"
                ],
                "identifier": [
                    "ResponseEntity",
                    "String"
                ],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "link",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r\n    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r\n    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r\n    String from = origen;\r\n    String to = guardado.getCorreo();\r\n    String subject = \"Activaci\u00ef\u00bf\u00bdn de cuenta\";\r\n    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara activar tu cuenta y configurar una nueva contrase&ntilde;a.\";\r\n    try {\r\n        _email.sendMail(from, to, subject, body);\r\n    } catch (Exception e) {\r\n        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r\n    }\r\n    guardado.setConfirmacion(\"true\");\r\n    guardado.setCodigo(codigo);\r\n    _usuarioSys.save(guardado);\r\n    log.setTrace(LogTypes.RENVIA_CORREO_ACTIVACION);\r\n    return ResponseEntity.ok(\"Correo reenviado\");\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "consulta",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setConfirmacion",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setCodigo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "log",
                        "methodName": "setTrace",
                        "targetClassName": "com.cocay.sicecd.service.Logging"
                    }
                ],
                "exception": []
            },
            "editarCorreo": {
                "name": "editarCorreo",
                "lineBegin": 47,
                "lineEnd": 60,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "link",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r\n    String link = dominio + \"confirmacorreo?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r\n    String from = origen;\r\n    String to = consulta.getCorreo();\r\n    String subject = \"Cambio de correo\";\r\n    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara confirmar tu correo.\";\r\n    _email.sendMail(from, to, subject, body);\r\n    guardado.setCodigoCorreo(codigo);\r\n    guardado.setConfirmacioncorreo(\"true\");\r\n    guardado.setCorreocambio(consulta.getCorreo());\r\n    _usuarioSys.save(guardado);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "guardado",
                        "methodName": "getPk_id_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_email",
                        "methodName": "sendMail",
                        "targetClassName": "com.cocay.sicecd.service.SendMailService"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setCodigoCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setConfirmacioncorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "consulta",
                        "methodName": "getCorreo",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "guardado",
                        "methodName": "setCorreocambio",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "_usuarioSys",
                        "methodName": "save",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.security.Principal",
            "java.util.List",
            "javax.servlet.http.HttpServletRequest",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.context.annotation.PropertySource",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Controller",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.servlet.ModelAndView",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.model.Usuario_sys",
            "com.cocay.sicecd.repo.Usuario_sysRep",
            "com.cocay.sicecd.service.Logging",
            "com.cocay.sicecd.service.SendMailService"
        ],
        "methodsInvocations": [
            {
                "scopeName": "guardado",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "guardado",
                "methodName": "setCodigoCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setConfirmacioncorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setCorreocambio",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "sinprecargado",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findById(consulta.getPk_id_usuario_sys())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getRfc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setNombre",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getApellido_paterno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setApellido_paterno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getApellido_materno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setApellido_materno",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta.getFk_id_perfil_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getFk_id_perfil_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "guardado.getFk_id_perfil_sys().getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getFk_id_perfil_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta.getFk_id_perfil_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta.getFk_id_estatus_usuario_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getFk_id_estatus_usuario_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "guardado.getFk_id_estatus_usuario_sys().getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado.getFk_id_estatus_usuario_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta.getFk_id_estatus_usuario_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "consulta.getCorreo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "guardado",
                "methodName": "setCodigorecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setConfirmarecupera",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "consulta",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findByRfc(consulta.getRfc())",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "guardado",
                "methodName": "getPk_id_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "getCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_email",
                "methodName": "sendMail",
                "targetClassName": "com.cocay.sicecd.service.SendMailService"
            },
            {
                "scopeName": "guardado",
                "methodName": "setConfirmacion",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "guardado",
                "methodName": "setCodigo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "log",
                "methodName": "setTrace",
                "targetClassName": "com.cocay.sicecd.service.Logging"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "existsById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "findById",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "_usuarioSys.findById(id)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "u",
                "methodName": "getCodigoCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "u.getCodigoCorreo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "u",
                "methodName": "getCorreocambio",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "u",
                "methodName": "setCorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "u",
                "methodName": "setCorreocambio",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "u",
                "methodName": "setConfirmacioncorreo",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "_usuarioSys",
                "methodName": "save",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "listaUsuarios",
                "annotations": [
                    "@GetMapping(\"/AdministracionCursos/listaUsuarios\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [],
                "body": [
                    "{\r",
                    "    ModelAndView model = new ModelAndView(\"editarPerfil/listausuarios\");\r",
                    "    model.addObject(\"usuarios\", _usuarioSys.sinprecargado());\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "renviarRecupera",
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviarrecupera\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r",
                    "    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r",
                    "    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r",
                    "    String from = origen;\r",
                    "    String to = guardado.getCorreo();\r",
                    "    String subject = \"Recupera Contrase\u00ef\u00bf\u00bda\";\r",
                    "    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\nrecuperar tu contrase&ntilde;a.\";\r",
                    "    try {\r",
                    "        _email.sendMail(from, to, subject, body);\r",
                    "    } catch (Exception e) {\r",
                    "        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica que la direccion sea valida, o tu conexion.\");\r",
                    "    }\r",
                    "    guardado.setCodigorecupera(codigo);\r",
                    "    guardado.setConfirmarecupera(\"true\");\r",
                    "    _usuarioSys.save(guardado);\r",
                    "    log.setTrace(LogTypes.RECUPERA_PASSWORD);\r",
                    "    return ResponseEntity.ok(\"Correo reenviado\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "confirmaCorreo",
                "annotations": [
                    "@GetMapping(value = \"/confirmacorreo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "id",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    if (_usuarioSys.existsById(id)) {\r",
                    "        Usuario_sys u = _usuarioSys.findById(id).get();\r",
                    "        if (u.getCodigoCorreo().equals(codigo)) {\r",
                    "            u.setCorreo(u.getCorreocambio());\r",
                    "            u.setCorreocambio(\"\");\r",
                    "            u.setConfirmacioncorreo(\"false\");\r",
                    "            _usuarioSys.save(u);\r",
                    "        }\r",
                    "    }\r",
                    "    return \"redirect:/login?mensaje=CorreoActualizado\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "renviarCambioCorreo",
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviarcambiocorreo\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r",
                    "    editarCorreo(guardado, consulta);\r",
                    "    log.setTrace(LogTypes.RENVIA_CAMBIO_CORREO);\r",
                    "    return ResponseEntity.ok(\"Correo reenviado\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "editarPerfilUsuario",
                "annotations": [
                    "@PostMapping(value = \"/AdministracionCursos/editarperfilusuario\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Usuario_sys guardado = _usuarioSys.findById(consulta.getPk_id_usuario_sys()).get();\r",
                    "    String cambios = \"\";\r",
                    "    if (!guardado.getRfc().equals(consulta.getRfc())) {\r",
                    "        cambios += \"Rfc de \" + guardado.getRfc() + \" a \" + consulta.getRfc() + \"\\n\";\r",
                    "        guardado.setRfc(consulta.getRfc());\r",
                    "    }\r",
                    "    if (!guardado.getNombre().equals(consulta.getNombre())) {\r",
                    "        cambios += \"Nombre de \" + guardado.getNombre() + \" a \" + consulta.getNombre() + \"\\n\";\r",
                    "        guardado.setNombre(consulta.getNombre());\r",
                    "    }\r",
                    "    if (!guardado.getApellido_paterno().equals(consulta.getApellido_paterno())) {\r",
                    "        cambios += \"Apellido Paterno de \" + guardado.getApellido_paterno() + \" a \" + consulta.getApellido_paterno() + \"\\n\";\r",
                    "        guardado.setApellido_paterno(consulta.getApellido_paterno());\r",
                    "    }\r",
                    "    if (!guardado.getApellido_materno().equals(consulta.getApellido_materno())) {\r",
                    "        cambios += \"Apellido Materno de \" + guardado.getApellido_materno() + \" a \" + consulta.getApellido_materno() + \"\\n\";\r",
                    "        guardado.setApellido_materno(consulta.getApellido_materno());\r",
                    "    }\r",
                    "    if (!guardado.getFk_id_perfil_sys().getNombre().equals(consulta.getFk_id_perfil_sys().getNombre())) {\r",
                    "        cambios += \"Perfil \" + guardado.getFk_id_perfil_sys().getNombre() + \" a \" + consulta.getFk_id_perfil_sys().getNombre() + \"\\n\";\r",
                    "        guardado.setFk_id_perfil_sys(consulta.getFk_id_perfil_sys());\r",
                    "    }\r",
                    "    if (!guardado.getFk_id_estatus_usuario_sys().getNombre().equals(consulta.getFk_id_estatus_usuario_sys().getNombre())) {\r",
                    "        cambios += \"Estatus \" + guardado.getFk_id_estatus_usuario_sys().getNombre() + \" a \" + consulta.getFk_id_estatus_usuario_sys().getNombre() + \"\\n\";\r",
                    "        guardado.setFk_id_estatus_usuario_sys(consulta.getFk_id_estatus_usuario_sys());\r",
                    "    }\r",
                    "    if (!consulta.getCorreo().equals(guardado.getCorreo())) {\r",
                    "        editarCorreo(guardado, consulta);\r",
                    "    }\r",
                    "    String frome = origen;\r",
                    "    String toe = guardado.getCorreo();\r",
                    "    String subjecte = \"Edicion de Perfil\";\r",
                    "    String bodye = \"Hola se han echo una serie de cambios en tu perfil\\n\" + cambios;\r",
                    "    if (!cambios.equals(\"\")) {\r",
                    "        try {\r",
                    "            _email.sendMail(frome, toe, subjecte, bodye);\r",
                    "        } catch (Exception e) {\r",
                    "            return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r",
                    "        }\r",
                    "        _usuarioSys.save(guardado);\r",
                    "    }\r",
                    "    log.setTrace(LogTypes.EDITA_USUARIO, null, guardado.getRfc());\r",
                    "    return ResponseEntity.ok(\"Usuario Editado con exito\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "formEditarPerfilUsuario",
                "annotations": [
                    "@GetMapping(value = \"/AdministracionCursos/formEditarPerfilUsuario\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ModelAndView",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Usuario_sys cambio = (_usuarioSys.findByRfc(rfc.trim())).get(0);\r",
                    "    ModelAndView model = new ModelAndView(\"editarPerfil/formEditarPerfilUsuario\");\r",
                    "    model.addObject(\"usuario\", cambio);\r",
                    "    return model;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "renviarActivacion",
                "annotations": [
                    "@PostMapping(\"/AdministracionCursos/renviaactiva\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseEntity<String>",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r",
                    "    Usuario_sys guardado = _usuarioSys.findByRfc(consulta.getRfc()).get(0);\r",
                    "    String link = dominio + \"configuracionPass?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r",
                    "    String from = origen;\r",
                    "    String to = guardado.getCorreo();\r",
                    "    String subject = \"Activaci\u00ef\u00bf\u00bdn de cuenta\";\r",
                    "    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara activar tu cuenta y configurar una nueva contrase&ntilde;a.\";\r",
                    "    try {\r",
                    "        _email.sendMail(from, to, subject, body);\r",
                    "    } catch (Exception e) {\r",
                    "        return ResponseEntity.ok(\"Ha oucrrido un error al enviar el correo, verifica tu conexion.\");\r",
                    "    }\r",
                    "    guardado.setConfirmacion(\"true\");\r",
                    "    guardado.setCodigo(codigo);\r",
                    "    _usuarioSys.save(guardado);\r",
                    "    log.setTrace(LogTypes.RENVIA_CORREO_ACTIVACION);\r",
                    "    return ResponseEntity.ok(\"Correo reenviado\");\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "editarCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Usuario_sys",
                        "variable": "guardado",
                        "qualifedType": ""
                    },
                    {
                        "type": "Usuario_sys",
                        "variable": "consulta",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    String codigo = String.valueOf((int) (Math.random() * 1000) + 1);\r",
                    "    String link = dominio + \"confirmacorreo?codigo=\" + codigo + \"&usuario=\" + guardado.getPk_id_usuario_sys();\r",
                    "    String from = origen;\r",
                    "    String to = consulta.getCorreo();\r",
                    "    String subject = \"Cambio de correo\";\r",
                    "    String body = \"Hola da clic al siguiente  link \\n\" + link + \"\\npara confirmar tu correo.\";\r",
                    "    _email.sendMail(from, to, subject, body);\r",
                    "    guardado.setCodigoCorreo(codigo);\r",
                    "    guardado.setConfirmacioncorreo(\"true\");\r",
                    "    guardado.setCorreocambio(consulta.getCorreo());\r",
                    "    _usuarioSys.save(guardado);\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Usuario_sys": {
        "full_name": "com.cocay.sicecd.model.Usuario_sys",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 224,
        "short_name": "Usuario_sys",
        "src": "com.cocay.sicecd.model.Usuario_sys",
        "annotations": [
            "@Entity",
            "@Table(name = \"Usuario_sys\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_usuario_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_usuario_sys",
                "lineBegin": 24,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@Column(name = \"rfc\", nullable = false, length = 13, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "rfc",
                "lineBegin": 29,
                "lineEnd": 30
            },
            {
                "annotations": [
                    "@Column(name = \"password\", nullable = true, length = 60)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "password",
                "lineBegin": 32,
                "lineEnd": 33
            },
            {
                "annotations": [
                    "@Column(name = \"correo\", nullable = false, length = 200)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "correo",
                "lineBegin": 35,
                "lineEnd": 36
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 38,
                "lineEnd": 39
            },
            {
                "annotations": [
                    "@Column(name = \"apellido_paterno\", nullable = false, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "apellido_paterno",
                "lineBegin": 41,
                "lineEnd": 42
            },
            {
                "annotations": [
                    "@Column(name = \"apellido_materno\", nullable = true, length = 250)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "apellido_materno",
                "lineBegin": 44,
                "lineEnd": 45
            },
            {
                "annotations": [
                    "@Column(name = \"confirmacion\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "confirmacion",
                "lineBegin": 47,
                "lineEnd": 48
            },
            {
                "annotations": [
                    "@Column(name = \"codigo\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "codigo",
                "lineBegin": 50,
                "lineEnd": 51
            },
            {
                "annotations": [
                    "@Column(name = \"confirmacioncorreo\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "confirmacioncorreo",
                "lineBegin": 53,
                "lineEnd": 54
            },
            {
                "annotations": [
                    "@Column(name = \"codigoCorreo\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "codigoCorreo",
                "lineBegin": 56,
                "lineEnd": 57
            },
            {
                "annotations": [
                    "@Column(name = \"correocambio\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "correocambio",
                "lineBegin": 59,
                "lineEnd": 60
            },
            {
                "annotations": [
                    "@Column(name = \"codigorecupera\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "codigorecupera",
                "lineBegin": 62,
                "lineEnd": 63
            },
            {
                "annotations": [
                    "@Column(name = \"confirmarecupera\", nullable = true, length = 150)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "confirmarecupera",
                "lineBegin": 65,
                "lineEnd": 66
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Estatus_usuario_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_estatus_usuario_sys\", referencedColumnName = \"pk_estatus_usuario_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Estatus_usuario_sys",
                "variable": "fk_id_estatus_usuario_sys",
                "lineBegin": 68,
                "lineEnd": 71
            },
            {
                "annotations": [
                    "@ManyToOne(targetEntity = Perfil_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)",
                    "@JoinColumn(name = \"fk_id_perfil_sys\", referencedColumnName = \"pk_id_perfil_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Perfil_sys",
                "variable": "fk_id_perfil_sys",
                "lineBegin": 73,
                "lineEnd": 76
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_usuario_sys\", targetEntity = Log_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "type": "List<Log_sys>",
                "variable": "Log_sys_s",
                "lineBegin": 78,
                "lineEnd": 80
            }
        ],
        "methods": {
            "setPassword": {
                "name": "setPassword",
                "lineBegin": 102,
                "lineEnd": 104,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "password",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.password = password;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setApellido_materno": {
                "name": "setApellido_materno",
                "lineBegin": 134,
                "lineEnd": 136,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.apellido_materno = apellido_materno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCorreocambio": {
                "name": "getCorreocambio",
                "lineBegin": 176,
                "lineEnd": 178,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return correocambio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getApellido_paterno": {
                "name": "getApellido_paterno",
                "lineBegin": 122,
                "lineEnd": 124,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return apellido_paterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setLog_sys_s": {
                "name": "setLog_sys_s",
                "lineBegin": 162,
                "lineEnd": 164,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Log_sys>",
                        "variable": "log_sys_s",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    Log_sys_s = log_sys_s;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getApellido_materno": {
                "name": "getApellido_materno",
                "lineBegin": 130,
                "lineEnd": 132,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return apellido_materno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_perfil_sys": {
                "name": "getFk_id_perfil_sys",
                "lineBegin": 148,
                "lineEnd": 150,
                "annotations": [],
                "returnDataType": [
                    "Perfil_sys"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_perfil_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCorreo": {
                "name": "getCorreo",
                "lineBegin": 106,
                "lineEnd": 108,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCorreo": {
                "name": "setCorreo",
                "lineBegin": 110,
                "lineEnd": 112,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.correo = correo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getConfirmacion": {
                "name": "getConfirmacion",
                "lineBegin": 208,
                "lineEnd": 210,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return confirmacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setConfirmarecupera": {
                "name": "setConfirmarecupera",
                "lineBegin": 196,
                "lineEnd": 198,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "confirmarecupera",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.confirmarecupera = confirmarecupera;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getFk_id_estatus_usuario_sys": {
                "name": "getFk_id_estatus_usuario_sys",
                "lineBegin": 140,
                "lineEnd": 142,
                "annotations": [],
                "returnDataType": [
                    "Estatus_usuario_sys"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fk_id_estatus_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_estatus_usuario_sys": {
                "name": "setFk_id_estatus_usuario_sys",
                "lineBegin": 144,
                "lineEnd": 146,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Estatus_usuario_sys",
                        "variable": "fk_id_estatus_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_estatus_usuario_sys = fk_id_estatus_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCorreocambio": {
                "name": "setCorreocambio",
                "lineBegin": 180,
                "lineEnd": 182,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "correocambio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.correocambio = correocambio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCodigorecupera": {
                "name": "setCodigorecupera",
                "lineBegin": 188,
                "lineEnd": 190,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "codigorecupera",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.codigorecupera = codigorecupera;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 118,
                "lineEnd": 120,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCodigo": {
                "name": "setCodigo",
                "lineBegin": 220,
                "lineEnd": 222,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.codigo = codigo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getConfirmarecupera": {
                "name": "getConfirmarecupera",
                "lineBegin": 192,
                "lineEnd": 194,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return confirmarecupera;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCodigo": {
                "name": "getCodigo",
                "lineBegin": 216,
                "lineEnd": 218,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return codigo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCodigorecupera": {
                "name": "getCodigorecupera",
                "lineBegin": 184,
                "lineEnd": 186,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return codigorecupera;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getConfirmacioncorreo": {
                "name": "getConfirmacioncorreo",
                "lineBegin": 200,
                "lineEnd": 202,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return confirmacioncorreo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setFk_id_perfil_sys": {
                "name": "setFk_id_perfil_sys",
                "lineBegin": 152,
                "lineEnd": 154,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Perfil_sys",
                        "variable": "fk_id_perfil_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fk_id_perfil_sys = fk_id_perfil_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 114,
                "lineEnd": 116,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCodigoCorreo": {
                "name": "getCodigoCorreo",
                "lineBegin": 168,
                "lineEnd": 170,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return codigoCorreo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setConfirmacioncorreo": {
                "name": "setConfirmacioncorreo",
                "lineBegin": 204,
                "lineEnd": 206,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "confirmacioncorreo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.confirmacioncorreo = confirmacioncorreo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getLog_sys_s": {
                "name": "getLog_sys_s",
                "lineBegin": 158,
                "lineEnd": 160,
                "annotations": [],
                "returnDataType": [
                    "List<Log_sys>"
                ],
                "identifier": [
                    "List",
                    "Log_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return Log_sys_s;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc": {
                "name": "setRfc",
                "lineBegin": 94,
                "lineEnd": 96,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc = rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setApellido_paterno": {
                "name": "setApellido_paterno",
                "lineBegin": 126,
                "lineEnd": 128,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.apellido_paterno = apellido_paterno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_id_usuario_sys": {
                "name": "setPk_id_usuario_sys",
                "lineBegin": 86,
                "lineEnd": 88,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_usuario_sys = pk_id_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc": {
                "name": "getRfc",
                "lineBegin": 90,
                "lineEnd": 92,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPassword": {
                "name": "getPassword",
                "lineBegin": 98,
                "lineEnd": 100,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return password;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_usuario_sys": {
                "name": "getPk_id_usuario_sys",
                "lineBegin": 82,
                "lineEnd": 84,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setConfirmacion": {
                "name": "setConfirmacion",
                "lineBegin": 212,
                "lineEnd": 214,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "confirmacion",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.confirmacion = confirmacion;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCodigoCorreo": {
                "name": "setCodigoCorreo",
                "lineBegin": 172,
                "lineEnd": 174,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "codigoCorreo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.codigoCorreo = codigoCorreo;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.JoinColumn",
            "javax.persistence.ManyToOne",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setPassword",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "password",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.password = password;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setApellido_materno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "apellido_materno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.apellido_materno = apellido_materno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCorreocambio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return correocambio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getApellido_paterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return apellido_paterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setLog_sys_s",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Log_sys>",
                        "variable": "log_sys_s",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Log_sys_s = log_sys_s;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getApellido_materno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return apellido_materno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_perfil_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Perfil_sys",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_perfil_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.correo = correo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getConfirmacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return confirmacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setConfirmarecupera",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "confirmarecupera",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.confirmarecupera = confirmarecupera;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getFk_id_estatus_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Estatus_usuario_sys",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fk_id_estatus_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_estatus_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Estatus_usuario_sys",
                        "variable": "fk_id_estatus_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_estatus_usuario_sys = fk_id_estatus_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCorreocambio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "correocambio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.correocambio = correocambio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCodigorecupera",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "codigorecupera",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.codigorecupera = codigorecupera;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCodigo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "codigo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.codigo = codigo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getConfirmarecupera",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return confirmarecupera;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCodigo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return codigo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCodigorecupera",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return codigorecupera;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getConfirmacioncorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return confirmacioncorreo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setFk_id_perfil_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Perfil_sys",
                        "variable": "fk_id_perfil_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fk_id_perfil_sys = fk_id_perfil_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCodigoCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return codigoCorreo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setConfirmacioncorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "confirmacioncorreo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.confirmacioncorreo = confirmacioncorreo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getLog_sys_s",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Log_sys>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return Log_sys_s;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc = rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setApellido_paterno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "apellido_paterno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.apellido_paterno = apellido_paterno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_id_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_usuario_sys = pk_id_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPassword",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return password;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setConfirmacion",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "confirmacion",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.confirmacion = confirmacion;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCodigoCorreo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "codigoCorreo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.codigoCorreo = codigoCorreo;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Estatus_usuario_sys": {
        "full_name": "com.cocay.sicecd.model.Estatus_usuario_sys",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 57,
        "short_name": "Estatus_usuario_sys",
        "src": "com.cocay.sicecd.model.Estatus_usuario_sys",
        "annotations": [
            "@Entity",
            "@Table(name = \"Estatus_usuario_sys\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_estatus_usuario_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_estatus_usuario_sys",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 50, unique = true)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_estatus_usuario_sys\", targetEntity = Usuario_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "type": "List<Usuario_sys>",
                "variable": "usuarios",
                "lineBegin": 29,
                "lineEnd": 31
            }
        ],
        "methods": {
            "getPk_estatus_usuario_sys": {
                "name": "getPk_estatus_usuario_sys",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_estatus_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUsuarios": {
                "name": "getUsuarios",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "List<Usuario_sys>"
                ],
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return usuarios;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPk_estatus_usuario_sys": {
                "name": "setPk_estatus_usuario_sys",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_estatus_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_estatus_usuario_sys = pk_estatus_usuario_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUsuarios": {
                "name": "setUsuarios",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Usuario_sys>",
                        "variable": "usuarios",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.usuarios = usuarios;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getPk_estatus_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_estatus_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUsuarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Usuario_sys>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return usuarios;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPk_estatus_usuario_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_estatus_usuario_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_estatus_usuario_sys = pk_estatus_usuario_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUsuarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Usuario_sys>",
                        "variable": "usuarios",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.usuarios = usuarios;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.model.Perfil_sys": {
        "full_name": "com.cocay.sicecd.model.Perfil_sys",
        "constructor": [],
        "package": "com.cocay.sicecd.model",
        "begin": 1,
        "end": 57,
        "short_name": "Perfil_sys",
        "src": "com.cocay.sicecd.model.Perfil_sys",
        "annotations": [
            "@Entity",
            "@Table(name = \"Perfil_sys\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Id",
                    "@GeneratedValue(strategy = GenerationType.IDENTITY)",
                    "@Column(name = \"pk_id_perfil_sys\")"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "int",
                "variable": "pk_id_perfil_sys",
                "lineBegin": 21,
                "lineEnd": 24
            },
            {
                "annotations": [
                    "@Column(name = \"nombre\", nullable = false, length = 100)"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 26,
                "lineEnd": 27
            },
            {
                "annotations": [
                    "@OneToMany(mappedBy = \"fk_id_perfil_sys\", targetEntity = Usuario_sys.class)",
                    "@LazyCollection(LazyCollectionOption.FALSE)"
                ],
                "modifier": "private ",
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "type": "List<Usuario_sys>",
                "variable": "usuarios",
                "lineBegin": 29,
                "lineEnd": 31
            }
        ],
        "methods": {
            "setPk_id_perfil_sys": {
                "name": "setPk_id_perfil_sys",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "pk_id_perfil_sys",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.pk_id_perfil_sys = pk_id_perfil_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 41,
                "lineEnd": 43,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getUsuarios": {
                "name": "getUsuarios",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "List<Usuario_sys>"
                ],
                "identifier": [
                    "List",
                    "Usuario_sys"
                ],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return usuarios;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPk_id_perfil_sys": {
                "name": "getPk_id_perfil_sys",
                "lineBegin": 33,
                "lineEnd": 35,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return pk_id_perfil_sys;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 45,
                "lineEnd": 47,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setUsuarios": {
                "name": "setUsuarios",
                "lineBegin": 53,
                "lineEnd": 55,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<Usuario_sys>",
                        "variable": "usuarios",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.usuarios = usuarios;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.Column",
            "javax.persistence.Entity",
            "javax.persistence.GeneratedValue",
            "javax.persistence.GenerationType",
            "javax.persistence.Id",
            "javax.persistence.OneToMany",
            "javax.persistence.Table",
            "org.hibernate.annotations.LazyCollection",
            "org.hibernate.annotations.LazyCollectionOption"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setPk_id_perfil_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "pk_id_perfil_sys",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.pk_id_perfil_sys = pk_id_perfil_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getUsuarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Usuario_sys>",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return usuarios;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPk_id_perfil_sys",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return pk_id_perfil_sys;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setUsuarios",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "List<Usuario_sys>",
                        "variable": "usuarios",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.usuarios = usuarios;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.MyAppUserDetailsService": {
        "full_name": "com.cocay.sicecd.service.MyAppUserDetailsService",
        "constructor": [],
        "package": "com.cocay.sicecd.service",
        "begin": 1,
        "end": 41,
        "short_name": "MyAppUserDetailsService",
        "src": "com.cocay.sicecd.service.MyAppUserDetailsService",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "usuarioSys",
                "lineBegin": 18,
                "lineEnd": 19
            }
        ],
        "methods": {
            "loadUserByUsername": {
                "name": "loadUserByUsername",
                "lineBegin": 21,
                "lineEnd": 40,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "UserDetails"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "userName",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Usuario_sys",
                        "variable": "activeUserInfo",
                        "qualifedType": ""
                    },
                    {
                        "type": "UserDetails",
                        "variable": "userDetails",
                        "qualifedType": ""
                    },
                    {
                        "type": "GrantedAuthority",
                        "variable": "authority",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Usuario_sys activeUserInfo = usuarioSys.findByRfc(userName).get(0);\r\n    if (activeUserInfo != null) {\r\n        if (activeUserInfo.getFk_id_estatus_usuario_sys().getNombre().equals(\"Inactivo\")) {\r\n            activeUserInfo = null;\r\n        }\r\n    }\r\n    UserDetails userDetails;\r\n    GrantedAuthority authority = new SimpleGrantedAuthority(activeUserInfo.getFk_id_perfil_sys().getNombre());\r\n    userDetails = (UserDetails) new User(activeUserInfo.getRfc(), activeUserInfo.getPassword(), Arrays.asList(authority));\r\n    return userDetails;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "usuarioSys",
                        "methodName": "findByRfc",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "usuarioSys.findByRfc(userName)",
                        "methodName": "get",
                        "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
                    },
                    {
                        "scopeName": "activeUserInfo",
                        "methodName": "getFk_id_estatus_usuario_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "activeUserInfo.getFk_id_estatus_usuario_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "activeUserInfo.getFk_id_estatus_usuario_sys().getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
                    },
                    {
                        "scopeName": "activeUserInfo",
                        "methodName": "getFk_id_perfil_sys",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "activeUserInfo.getFk_id_perfil_sys()",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
                    },
                    {
                        "scopeName": "activeUserInfo",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    },
                    {
                        "scopeName": "activeUserInfo",
                        "methodName": "getPassword",
                        "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
                    }
                ],
                "exception": [
                    "UsernameNotFoundException"
                ]
            }
        },
        "implements": [
            "UserDetailsService"
        ],
        "extends": [],
        "imports": [
            "java.util.Arrays",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.security.core.GrantedAuthority",
            "org.springframework.security.core.authority.SimpleGrantedAuthority",
            "org.springframework.security.core.userdetails.User",
            "org.springframework.security.core.userdetails.UserDetails",
            "org.springframework.security.core.userdetails.UserDetailsService",
            "org.springframework.security.core.userdetails.UsernameNotFoundException",
            "org.springframework.stereotype.Service",
            "com.cocay.sicecd.model.Usuario_sys",
            "com.cocay.sicecd.repo.Usuario_sysRep"
        ],
        "methodsInvocations": [
            {
                "scopeName": "usuarioSys",
                "methodName": "findByRfc",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "usuarioSys.findByRfc(userName)",
                "methodName": "get",
                "targetClassName": "com.cocay.sicecd.repo.Usuario_sysRep"
            },
            {
                "scopeName": "activeUserInfo",
                "methodName": "getFk_id_estatus_usuario_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "activeUserInfo.getFk_id_estatus_usuario_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "activeUserInfo.getFk_id_estatus_usuario_sys().getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.model.Estatus_usuario_sys"
            },
            {
                "scopeName": "activeUserInfo",
                "methodName": "getFk_id_perfil_sys",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "activeUserInfo.getFk_id_perfil_sys()",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.model.Perfil_sys"
            },
            {
                "scopeName": "activeUserInfo",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            },
            {
                "scopeName": "activeUserInfo",
                "methodName": "getPassword",
                "targetClassName": "com.cocay.sicecd.model.Usuario_sys"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "loadUserByUsername",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "UserDetails",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "userName",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Usuario_sys activeUserInfo = usuarioSys.findByRfc(userName).get(0);\r",
                    "    if (activeUserInfo != null) {\r",
                    "        if (activeUserInfo.getFk_id_estatus_usuario_sys().getNombre().equals(\"Inactivo\")) {\r",
                    "            activeUserInfo = null;\r",
                    "        }\r",
                    "    }\r",
                    "    UserDetails userDetails;\r",
                    "    GrantedAuthority authority = new SimpleGrantedAuthority(activeUserInfo.getFk_id_perfil_sys().getNombre());\r",
                    "    userDetails = (UserDetails) new User(activeUserInfo.getRfc(), activeUserInfo.getPassword(), Arrays.asList(authority));\r",
                    "    return userDetails;\r",
                    "}"
                ],
                "exceptions": [
                    "UsernameNotFoundException"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.service.SendMailService": {
        "full_name": "com.cocay.sicecd.service.SendMailService",
        "constructor": [],
        "package": "com.cocay.sicecd.service",
        "begin": 1,
        "end": 49,
        "short_name": "SendMailService",
        "src": "com.cocay.sicecd.service.SendMailService",
        "annotations": [
            "@Service"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "JavaMailSender",
                "variable": "javaMailSender",
                "lineBegin": 15,
                "lineEnd": 16
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "JavaMailSender",
                "variable": "mailSender",
                "lineBegin": 17,
                "lineEnd": 18
            }
        ],
        "methods": {
            "sendMailSender": {
                "name": "sendMailSender",
                "lineBegin": 33,
                "lineEnd": 48,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "msg",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "MimeMessage",
                        "variable": "message",
                        "qualifedType": ""
                    },
                    {
                        "type": "MimeMessageHelper",
                        "variable": "helper",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    try {\r\n        MimeMessage message = mailSender.createMimeMessage();\r\n        message.setSubject(subject);\r\n        MimeMessageHelper helper;\r\n        helper = new MimeMessageHelper(message, true);\r\n        helper.setFrom(from);\r\n        helper.setTo(to);\r\n        helper.setText(msg, true);\r\n        mailSender.send(message);\r\n    } catch (MessagingException ex) {\r\n        Logger.getLogger(SendMailService.class.getName()).log(Level.SEVERE, null, ex);\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "message",
                        "methodName": "setSubject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "helper",
                        "methodName": "setFrom",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "helper",
                        "methodName": "setTo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "helper",
                        "methodName": "setText",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "setMailSender": {
                "name": "setMailSender",
                "lineBegin": 20,
                "lineEnd": 22,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "JavaMailSender",
                        "variable": "mailSender",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.mailSender = mailSender;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "sendMail": {
                "name": "sendMail",
                "lineBegin": 24,
                "lineEnd": 31,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "SimpleMailMessage",
                        "variable": "mailMessage",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    SimpleMailMessage mailMessage = new SimpleMailMessage();\r\n    mailMessage.setFrom(from);\r\n    mailMessage.setTo(to);\r\n    mailMessage.setSubject(subject);\r\n    mailMessage.setText(body);\r\n    javaMailSender.send(mailMessage);\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "mailMessage",
                        "methodName": "setFrom",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mailMessage",
                        "methodName": "setTo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mailMessage",
                        "methodName": "setSubject",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "mailMessage",
                        "methodName": "setText",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.mail.SimpleMailMessage",
            "org.springframework.mail.javamail.JavaMailSender",
            "org.springframework.stereotype.Service",
            "java.util.logging.Level",
            "java.util.logging.Logger",
            "javax.mail.MessagingException",
            "javax.mail.internet.MimeMessage",
            "org.springframework.mail.javamail.MimeMessageHelper"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "sendMailSender",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "msg",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    try {\r",
                    "        MimeMessage message = mailSender.createMimeMessage();\r",
                    "        message.setSubject(subject);\r",
                    "        MimeMessageHelper helper;\r",
                    "        helper = new MimeMessageHelper(message, true);\r",
                    "        helper.setFrom(from);\r",
                    "        helper.setTo(to);\r",
                    "        helper.setText(msg, true);\r",
                    "        mailSender.send(message);\r",
                    "    } catch (MessagingException ex) {\r",
                    "        Logger.getLogger(SendMailService.class.getName()).log(Level.SEVERE, null, ex);\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setMailSender",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "JavaMailSender",
                        "variable": "mailSender",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.mailSender = mailSender;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "sendMail",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    SimpleMailMessage mailMessage = new SimpleMailMessage();\r",
                    "    mailMessage.setFrom(from);\r",
                    "    mailMessage.setTo(to);\r",
                    "    mailMessage.setSubject(subject);\r",
                    "    mailMessage.setText(body);\r",
                    "    javaMailSender.send(mailMessage);\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ExampleContoller": {
        "full_name": "com.cocay.sicecd.controller.ExampleContoller",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 54,
        "short_name": "ExampleContoller",
        "src": "com.cocay.sicecd.controller.ExampleContoller",
        "annotations": [
            "@Controller",
            "@RequestMapping(\"example\")"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "Usuario_sysRep",
                "variable": "_usuarioSys",
                "lineBegin": 17,
                "lineEnd": 18
            }
        ],
        "methods": {
            "exampleTableBasic": {
                "name": "exampleTableBasic",
                "lineBegin": 25,
                "lineEnd": 28,
                "annotations": [
                    "@RequestMapping(value = \"/table-basic\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "Principal",
                        "variable": "principal",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/table-basic\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleFormValidation": {
                "name": "exampleFormValidation",
                "lineBegin": 44,
                "lineEnd": 47,
                "annotations": [
                    "@RequestMapping(value = \"/form-validation\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/form-validation\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleTableRowSelect": {
                "name": "exampleTableRowSelect",
                "lineBegin": 20,
                "lineEnd": 23,
                "annotations": [
                    "@RequestMapping(value = \"/table-row-select\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/table-row-select\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleFormBasic": {
                "name": "exampleFormBasic",
                "lineBegin": 39,
                "lineEnd": 42,
                "annotations": [
                    "@RequestMapping(value = \"/form-basic\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/form-basic\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleExport": {
                "name": "exampleExport",
                "lineBegin": 30,
                "lineEnd": 33,
                "annotations": [
                    "@RequestMapping(value = \"/table-export\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return \"example/table-export\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleBlank": {
                "name": "exampleBlank",
                "lineBegin": 49,
                "lineEnd": 52,
                "annotations": [
                    "@RequestMapping(value = \"/blank\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/blank\";\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "exampleJsgrid": {
                "name": "exampleJsgrid",
                "lineBegin": 34,
                "lineEnd": 37,
                "annotations": [
                    "@RequestMapping(value = \"/table-jsgrid\", method = RequestMethod.GET)"
                ],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    return \"example/table-jsgrid\";\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.security.Principal",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Controller",
            "org.springframework.ui.Model",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "com.cocay.sicecd.repo.Usuario_sysRep"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "exampleTableBasic",
                "annotations": [
                    "@RequestMapping(value = \"/table-basic\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    },
                    {
                        "type": "Principal",
                        "variable": "principal",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/table-basic\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleFormValidation",
                "annotations": [
                    "@RequestMapping(value = \"/form-validation\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/form-validation\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleTableRowSelect",
                "annotations": [
                    "@RequestMapping(value = \"/table-row-select\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/table-row-select\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleFormBasic",
                "annotations": [
                    "@RequestMapping(value = \"/form-basic\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/form-basic\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleExport",
                "annotations": [
                    "@RequestMapping(value = \"/table-export\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return \"example/table-export\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleBlank",
                "annotations": [
                    "@RequestMapping(value = \"/blank\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/blank\";\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "exampleJsgrid",
                "annotations": [
                    "@RequestMapping(value = \"/table-jsgrid\", method = RequestMethod.GET)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [
                    {
                        "type": "Model",
                        "variable": "model",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    return \"example/table-jsgrid\";\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Estatus_usuario_sysRep": {
        "full_name": "com.cocay.sicecd.repo.Estatus_usuario_sysRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 14,
        "short_name": "Estatus_usuario_sysRep",
        "src": "com.cocay.sicecd.repo.Estatus_usuario_sysRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 12,
                "lineEnd": 12,
                "annotations": [],
                "returnDataType": [
                    "List<Estatus_usuario_sys>"
                ],
                "identifier": [
                    "List",
                    "Estatus_usuario_sys"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Estatus_usuario_sys, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Estatus_usuario_sys"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Estatus_usuario_sys>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.repo.Perfil_sysRep": {
        "full_name": "com.cocay.sicecd.repo.Perfil_sysRep",
        "constructor": [],
        "package": "com.cocay.sicecd.repo",
        "begin": 1,
        "end": 14,
        "short_name": "Perfil_sysRep",
        "src": "com.cocay.sicecd.repo.Perfil_sysRep",
        "annotations": [
            "@Repository"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "findByNombre": {
                "name": "findByNombre",
                "lineBegin": 12,
                "lineEnd": 12,
                "annotations": [],
                "returnDataType": [
                    "List<Perfil_sys>"
                ],
                "identifier": [
                    "List",
                    "Perfil_sys"
                ],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [
            "PagingAndSortingRepository<Perfil_sys, Integer>"
        ],
        "imports": [
            "java.util.List",
            "org.springframework.data.repository.PagingAndSortingRepository",
            "org.springframework.stereotype.Repository",
            "com.cocay.sicecd.model.Perfil_sys"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "findByNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<Perfil_sys>",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.SecurityConfig": {
        "full_name": "com.cocay.sicecd.SecurityConfig",
        "constructor": [],
        "package": "com.cocay.sicecd",
        "begin": 1,
        "end": 55,
        "short_name": "SecurityConfig",
        "src": "com.cocay.sicecd.SecurityConfig",
        "annotations": [
            "@Configuration",
            "@EnableWebSecurity"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "MyAppUserDetailsService",
                "variable": "myAppUserDetailsService",
                "lineBegin": 17,
                "lineEnd": 18
            }
        ],
        "methods": {
            "configureGlobal": {
                "name": "configureGlobal",
                "lineBegin": 46,
                "lineEnd": 52,
                "annotations": [
                    "@Autowired"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "AuthenticationManagerBuilder",
                        "variable": "auth",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "BCryptPasswordEncoder",
                        "variable": "passwordEncoder",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r\n    auth.userDetailsService(myAppUserDetailsService).passwordEncoder(passwordEncoder);\r\n}",
                "methodInvocations": [],
                "exception": [
                    "Exception"
                ]
            },
            "configure": {
                "name": "configure",
                "lineBegin": 20,
                "lineEnd": 43,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "HttpSecurity",
                        "variable": "http",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    http.csrf().disable().authorizeRequests().antMatchers(\"/\", \"/login\", \"/logout\", \"/css/**\", \"/fonts/**\", \"/img/**\", \"/js/**\", \"/favicon.ico\", \"/activacion\", \"/configuracionPass\", \"/confirmacorreo\", \"/enviarecupera\", \"/prueba\", \"/certificado\", \"/certificadoRes\").permitAll().antMatchers(\"/AdministracionModificaciones/**\").hasAuthority(\"Administrador\").antMatchers(\"/AdministracionRegistroManual/**\").hasAuthority(\"Administrador\").antMatchers(\"/descargas\").authenticated().anyRequest().authenticated().and().formLogin().loginPage(\"/login\").loginProcessingUrl(\"/login\").usernameParameter(\"username\").passwordParameter(\"password\").defaultSuccessUrl(\"/start\").permitAll().and().//logout configuration\r\n    logout().logoutUrl(\"/logout\").deleteCookies(\"JSESSIONID\").invalidateHttpSession(true).logoutSuccessUrl(\"/login\").permitAll();\r\n}",
                "methodInvocations": [],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [],
        "extends": [
            "WebSecurityConfigurerAdapter"
        ],
        "imports": [
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.context.annotation.Configuration",
            "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
            "org.springframework.security.config.annotation.web.builders.HttpSecurity",
            "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity",
            "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter",
            "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder",
            "com.cocay.sicecd.service.MyAppUserDetailsService"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "configureGlobal",
                "annotations": [
                    "@Autowired"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "AuthenticationManagerBuilder",
                        "variable": "auth",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\r",
                    "    auth.userDetailsService(myAppUserDetailsService).passwordEncoder(passwordEncoder);\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "configure",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "HttpSecurity",
                        "variable": "http",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    http.csrf().disable().authorizeRequests().antMatchers(\"/\", \"/login\", \"/logout\", \"/css/**\", \"/fonts/**\", \"/img/**\", \"/js/**\", \"/favicon.ico\", \"/activacion\", \"/configuracionPass\", \"/confirmacorreo\", \"/enviarecupera\", \"/prueba\", \"/certificado\", \"/certificadoRes\").permitAll().antMatchers(\"/AdministracionModificaciones/**\").hasAuthority(\"Administrador\").antMatchers(\"/AdministracionRegistroManual/**\").hasAuthority(\"Administrador\").antMatchers(\"/descargas\").authenticated().anyRequest().authenticated().and().formLogin().loginPage(\"/login\").loginProcessingUrl(\"/login\").usernameParameter(\"username\").passwordParameter(\"password\").defaultSuccessUrl(\"/start\").permitAll().and().//logout configuration\r",
                    "    logout().logoutUrl(\"/logout\").deleteCookies(\"JSESSIONID\").invalidateHttpSession(true).logoutSuccessUrl(\"/login\").permitAll();\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.webService.CargaBatchService": {
        "full_name": "com.cocay.sicecd.webService.CargaBatchService",
        "constructor": [],
        "package": "com.cocay.sicecd.webService",
        "begin": 1,
        "end": 91,
        "short_name": "CargaBatchService",
        "src": "com.cocay.sicecd.webService.CargaBatchService",
        "annotations": [
            "@Path(\"/CargaBatchService\")"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "lstLimpiar": {
                "name": "lstLimpiar",
                "lineBegin": 72,
                "lineEnd": 77,
                "annotations": [
                    "@POST",
                    "@Path(\"/lstLimpiar/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstInscripciones": {
                "name": "lstInscripciones",
                "lineBegin": 50,
                "lineEnd": 59,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstInscripciones/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "limpiarTabla": {
                "name": "limpiarTabla",
                "lineBegin": 85,
                "lineEnd": 90,
                "annotations": [
                    "@GET",
                    "@Path(\"/limpiarTabla/{tabla}\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstProfesores": {
                "name": "lstProfesores",
                "lineBegin": 17,
                "lineEnd": 26,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstProfesores/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstCursos": {
                "name": "lstCursos",
                "lineBegin": 28,
                "lineEnd": 37,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstCursos/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstGrupo": {
                "name": "lstGrupo",
                "lineBegin": 39,
                "lineEnd": 48,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstGrupo/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstErrores": {
                "name": "lstErrores",
                "lineBegin": 61,
                "lineEnd": 70,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstErrores/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "ultimoValor": {
                "name": "ultimoValor",
                "lineBegin": 79,
                "lineEnd": 83,
                "annotations": [
                    "@GET",
                    "@Path(\"/ultimoValor/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "javax.ws.rs.Consumes",
            "javax.ws.rs.GET",
            "javax.ws.rs.POST",
            "javax.ws.rs.Path",
            "javax.ws.rs.PathParam",
            "javax.ws.rs.Produces",
            "javax.ws.rs.QueryParam",
            "javax.ws.rs.core.MediaType",
            "com.cocay.sicecd.dto.ResponseGeneric"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "lstLimpiar",
                "annotations": [
                    "@POST",
                    "@Path(\"/lstLimpiar/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstInscripciones",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstInscripciones/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "limpiarTabla",
                "annotations": [
                    "@GET",
                    "@Path(\"/limpiarTabla/{tabla}\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstProfesores",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstProfesores/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstCursos",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstCursos/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstGrupo",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstGrupo/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstErrores",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstErrores/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "ultimoValor",
                "annotations": [
                    "@GET",
                    "@Path(\"/ultimoValor/\")",
                    "@Produces(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.ResponseGeneric": {
        "full_name": "com.cocay.sicecd.dto.ResponseGeneric",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 28,
        "short_name": "ResponseGeneric",
        "src": "com.cocay.sicecd.dto.ResponseGeneric",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "cdMensaje",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nbMensaje",
                "lineBegin": 6,
                "lineEnd": 6
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Object",
                "variable": "response",
                "lineBegin": 7,
                "lineEnd": 7
            }
        ],
        "methods": {
            "getNbMensaje": {
                "name": "getNbMensaje",
                "lineBegin": 15,
                "lineEnd": 17,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nbMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNbMensaje": {
                "name": "setNbMensaje",
                "lineBegin": 18,
                "lineEnd": 20,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nbMensaje",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nbMensaje = nbMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCdMensaje": {
                "name": "setCdMensaje",
                "lineBegin": 12,
                "lineEnd": 14,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cdMensaje = cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getResponse": {
                "name": "getResponse",
                "lineBegin": 21,
                "lineEnd": 23,
                "annotations": [],
                "returnDataType": [
                    "Object"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return response;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setResponse": {
                "name": "setResponse",
                "lineBegin": 24,
                "lineEnd": 26,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Object",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.response = response;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCdMensaje": {
                "name": "getCdMensaje",
                "lineBegin": 9,
                "lineEnd": 11,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getNbMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nbMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNbMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nbMensaje",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nbMensaje = nbMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cdMensaje = cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getResponse",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Object",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setResponse",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Object",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.response = response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.webService.CargaBatchServiceImpl": {
        "full_name": "com.cocay.sicecd.webService.CargaBatchServiceImpl",
        "constructor": [],
        "package": "com.cocay.sicecd.webService",
        "begin": 1,
        "end": 143,
        "short_name": "CargaBatchServiceImpl",
        "src": "com.cocay.sicecd.webService.CargaBatchServiceImpl",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "CargaBatchServiceDAO",
                "variable": "cargaBatchServiceDAO",
                "lineBegin": 11,
                "lineEnd": 12
            }
        ],
        "methods": {
            "lstLimpiar": {
                "name": "lstLimpiar",
                "lineBegin": 99,
                "lineEnd": 111,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        cargaBatchServiceDAO.lstLimpiar();\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstLimpiar",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstInscripciones": {
                "name": "lstInscripciones",
                "lineBegin": 65,
                "lineEnd": 80,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "ResponseGenericPagination",
                        "variable": "pagination",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    ResponseGenericPagination pagination = new ResponseGenericPagination();\r\n    try {\r\n        pagination.setRows(cargaBatchServiceDAO.lstInscripciones(limit, offset, search, name, order));\r\n        pagination.setTotal(cargaBatchServiceDAO.totalLstInscripciones(search));\r\n        response.setResponse(pagination);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstInscripciones",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setRows",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "totalLstInscripciones",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setTotal",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "limpiarTabla": {
                "name": "limpiarTabla",
                "lineBegin": 127,
                "lineEnd": 139,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        cargaBatchServiceDAO.limpiarTabla(tabla);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "limpiarTabla",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstProfesores": {
                "name": "lstProfesores",
                "lineBegin": 14,
                "lineEnd": 29,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "ResponseGenericPagination",
                        "variable": "pagination",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    ResponseGenericPagination pagination = new ResponseGenericPagination();\r\n    try {\r\n        pagination.setRows(cargaBatchServiceDAO.lstProfesores(limit, offset, search, name, order));\r\n        pagination.setTotal(cargaBatchServiceDAO.totalLstProfesores(search));\r\n        response.setResponse(pagination);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstProfesores",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setRows",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "totalLstProfesores",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setTotal",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstCursos": {
                "name": "lstCursos",
                "lineBegin": 31,
                "lineEnd": 46,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "ResponseGenericPagination",
                        "variable": "pagination",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    ResponseGenericPagination pagination = new ResponseGenericPagination();\r\n    try {\r\n        pagination.setRows(cargaBatchServiceDAO.lstCursos(limit, offset, search, name, order));\r\n        pagination.setTotal(cargaBatchServiceDAO.totalLstCursos(search));\r\n        response.setResponse(pagination);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstCursos",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setRows",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "totalLstCursos",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setTotal",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstGrupo": {
                "name": "lstGrupo",
                "lineBegin": 48,
                "lineEnd": 63,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "ResponseGenericPagination",
                        "variable": "pagination",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    ResponseGenericPagination pagination = new ResponseGenericPagination();\r\n    try {\r\n        pagination.setRows(cargaBatchServiceDAO.lstGrupo(limit, offset, search, name, order));\r\n        pagination.setTotal(cargaBatchServiceDAO.totalLstGrupo(search));\r\n        response.setResponse(pagination);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstGrupo",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setRows",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "totalLstGrupo",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setTotal",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstErrores": {
                "name": "lstErrores",
                "lineBegin": 82,
                "lineEnd": 97,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    },
                    {
                        "type": "ResponseGenericPagination",
                        "variable": "pagination",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    ResponseGenericPagination pagination = new ResponseGenericPagination();\r\n    try {\r\n        pagination.setRows(cargaBatchServiceDAO.lstErrores(limit, offset, search, name, order));\r\n        pagination.setTotal(cargaBatchServiceDAO.totalLstErrores(search));\r\n        response.setResponse(pagination);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "lstErrores",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setRows",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "totalLstErrores",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "pagination",
                        "methodName": "setTotal",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "ultimoValor": {
                "name": "ultimoValor",
                "lineBegin": 113,
                "lineEnd": 125,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        response.setResponse(cargaBatchServiceDAO.ultimoValor());\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "cargaBatchServiceDAO",
                        "methodName": "ultimoValor",
                        "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            }
        },
        "implements": [
            "com.cocay.sicecd.webService.CargaBatchService",
            "CargaBatchService"
        ],
        "extends": [],
        "imports": [
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.dao.CargaBatchServiceDAO",
            "com.cocay.sicecd.dto.ResponseGeneric",
            "com.cocay.sicecd.dto.ResponseGenericPagination"
        ],
        "methodsInvocations": [
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstProfesores",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setRows",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "totalLstProfesores",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setTotal",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstCursos",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setRows",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "totalLstCursos",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setTotal",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstGrupo",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setRows",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "totalLstGrupo",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setTotal",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstInscripciones",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setRows",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "totalLstInscripciones",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setTotal",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstErrores",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setRows",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "totalLstErrores",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "pagination",
                "methodName": "setTotal",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGenericPagination"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "lstLimpiar",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "ultimoValor",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "cargaBatchServiceDAO",
                "methodName": "limpiarTabla",
                "targetClassName": "com.cocay.sicecd.dao.CargaBatchServiceDAO"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "lstLimpiar",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        cargaBatchServiceDAO.lstLimpiar();\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstInscripciones",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    ResponseGenericPagination pagination = new ResponseGenericPagination();\r",
                    "    try {\r",
                    "        pagination.setRows(cargaBatchServiceDAO.lstInscripciones(limit, offset, search, name, order));\r",
                    "        pagination.setTotal(cargaBatchServiceDAO.totalLstInscripciones(search));\r",
                    "        response.setResponse(pagination);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "limpiarTabla",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        cargaBatchServiceDAO.limpiarTabla(tabla);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstProfesores",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    ResponseGenericPagination pagination = new ResponseGenericPagination();\r",
                    "    try {\r",
                    "        pagination.setRows(cargaBatchServiceDAO.lstProfesores(limit, offset, search, name, order));\r",
                    "        pagination.setTotal(cargaBatchServiceDAO.totalLstProfesores(search));\r",
                    "        response.setResponse(pagination);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstCursos",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    ResponseGenericPagination pagination = new ResponseGenericPagination();\r",
                    "    try {\r",
                    "        pagination.setRows(cargaBatchServiceDAO.lstCursos(limit, offset, search, name, order));\r",
                    "        pagination.setTotal(cargaBatchServiceDAO.totalLstCursos(search));\r",
                    "        response.setResponse(pagination);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstGrupo",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    ResponseGenericPagination pagination = new ResponseGenericPagination();\r",
                    "    try {\r",
                    "        pagination.setRows(cargaBatchServiceDAO.lstGrupo(limit, offset, search, name, order));\r",
                    "        pagination.setTotal(cargaBatchServiceDAO.totalLstGrupo(search));\r",
                    "        response.setResponse(pagination);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstErrores",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    ResponseGenericPagination pagination = new ResponseGenericPagination();\r",
                    "    try {\r",
                    "        pagination.setRows(cargaBatchServiceDAO.lstErrores(limit, offset, search, name, order));\r",
                    "        pagination.setTotal(cargaBatchServiceDAO.totalLstErrores(search));\r",
                    "        response.setResponse(pagination);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "ultimoValor",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        response.setResponse(cargaBatchServiceDAO.ultimoValor());\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ejemploServiceImpl": {
        "full_name": "com.cocay.sicecd.controller.ejemploServiceImpl",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 93,
        "short_name": "ejemploServiceImpl",
        "src": "com.cocay.sicecd.controller.ejemploServiceImpl",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "lstDameTuCosita": {
                "name": "lstDameTuCosita",
                "lineBegin": 29,
                "lineEnd": 50,
                "annotations": [
                    "@GetMapping(value = \"/dametucosita\", produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    Map<String, String> lstDameTuCosita = new HashMap<String, String>();\r\n    lstDameTuCosita.put(\"dame\", \"ah ah\");\r\n    lstDameTuCosita.put(\"tu\", \"ah ah\");\r\n    lstDameTuCosita.put(\"cosita\", \"ah ah\");\r\n    response.setCdMensaje(\"A huevo\");\r\n    response.setNbMensaje(\"Correct\");\r\n    response.setResponse(lstDameTuCosita);\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "leerExcel": {
                "name": "leerExcel",
                "lineBegin": 53,
                "lineEnd": 76,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "InputStream",
                        "variable": "inputstream",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        //\t\t\tif (file == null) {\r\n        //\t\t\t\tthrow new RuntimeException(\"You must select the a file for uploading\");\r\n        //\t\t\t} else {\r\n        //\t\t\t\tSystem.out.println(\"PROBANDO LEER ARCHIVO \");\r\n        //\t\t\t\tWorkbook hssfWorkBook = WorkbookFactory.create(file.getInputStream());\r\n        //\t\t\t}\r\n        System.out.println(inputstream);\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"leyo el pinche excel\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(e.getMessage());\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "lstCorreos": {
                "name": "lstCorreos",
                "lineBegin": 79,
                "lineEnd": 91,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    // TODO Auto-generated method stub\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"ok\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(e.getMessage());\r\n    }\r\n    return null;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            }
        },
        "implements": [
            "com.cocay.sicecd.controller.ejemploService",
            "ejemploService"
        ],
        "extends": [],
        "imports": [
            "java.io.InputStream",
            "java.util.HashMap",
            "java.util.Map",
            "javax.servlet.annotation.MultipartConfig",
            "javax.ws.rs.ApplicationPath",
            "javax.ws.rs.Consumes",
            "javax.ws.rs.POST",
            "javax.ws.rs.Path",
            "javax.ws.rs.PathParam",
            "javax.ws.rs.Produces",
            "org.springframework.http.MediaType",
            "org.springframework.web.bind.annotation.GetMapping",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestMapping",
            "org.springframework.web.bind.annotation.RequestMethod",
            "org.springframework.web.bind.annotation.RequestParam",
            "org.springframework.web.bind.annotation.RestController",
            "org.springframework.web.multipart.MultipartFile",
            "com.cocay.sicecd.dto.ResponseGeneric"
        ],
        "methodsInvocations": [
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "lstDameTuCosita",
                "annotations": [
                    "@GetMapping(value = \"/dametucosita\", produces = MediaType.APPLICATION_JSON_VALUE)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    Map<String, String> lstDameTuCosita = new HashMap<String, String>();\r",
                    "    lstDameTuCosita.put(\"dame\", \"ah ah\");\r",
                    "    lstDameTuCosita.put(\"tu\", \"ah ah\");\r",
                    "    lstDameTuCosita.put(\"cosita\", \"ah ah\");\r",
                    "    response.setCdMensaje(\"A huevo\");\r",
                    "    response.setNbMensaje(\"Correct\");\r",
                    "    response.setResponse(lstDameTuCosita);\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "leerExcel",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "InputStream",
                        "variable": "inputstream",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        //\t\t\tif (file == null) {\r",
                    "        //\t\t\t\tthrow new RuntimeException(\"You must select the a file for uploading\");\r",
                    "        //\t\t\t} else {\r",
                    "        //\t\t\t\tSystem.out.println(\"PROBANDO LEER ARCHIVO \");\r",
                    "        //\t\t\t\tWorkbook hssfWorkBook = WorkbookFactory.create(file.getInputStream());\r",
                    "        //\t\t\t}\r",
                    "        System.out.println(inputstream);\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"leyo el pinche excel\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(e.getMessage());\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "lstCorreos",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    "{\r",
                    "    // TODO Auto-generated method stub\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"ok\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(e.getMessage());\r",
                    "    }\r",
                    "    return null;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.controller.ejemploService": {
        "full_name": "com.cocay.sicecd.controller.ejemploService",
        "constructor": [],
        "package": "com.cocay.sicecd.controller",
        "begin": 1,
        "end": 32,
        "short_name": "ejemploService",
        "src": "com.cocay.sicecd.controller.ejemploService",
        "annotations": [
            "@Path(\"/ejemploService\")"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "leerExcel": {
                "name": "leerExcel",
                "lineBegin": 19,
                "lineEnd": 25,
                "annotations": [
                    "@POST",
                    "@Path(\"/leerExcel\")",
                    "@Consumes({ MediaType.MULTIPART_FORM_DATA_VALUE })",
                    "@Produces({ MediaType.APPLICATION_JSON_VALUE })"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "InputStream",
                        "variable": "inputstream",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "lstCorreos": {
                "name": "lstCorreos",
                "lineBegin": 27,
                "lineEnd": 31,
                "annotations": [
                    "@GET",
                    "@Path(\"/lstCorreos\")",
                    "@Produces({ MediaType.APPLICATION_JSON_VALUE })"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.io.InputStream",
            "javax.ws.rs.ApplicationPath",
            "javax.ws.rs.Consumes",
            "javax.ws.rs.GET",
            "javax.ws.rs.POST",
            "javax.ws.rs.Path",
            "javax.ws.rs.Produces",
            "org.springframework.http.MediaType",
            "com.cocay.sicecd.dto.ResponseGeneric"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "leerExcel",
                "annotations": [
                    "@POST",
                    "@Path(\"/leerExcel\")",
                    "@Consumes({ MediaType.MULTIPART_FORM_DATA_VALUE })",
                    "@Produces({ MediaType.APPLICATION_JSON_VALUE })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "InputStream",
                        "variable": "inputstream",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "lstCorreos",
                "annotations": [
                    "@GET",
                    "@Path(\"/lstCorreos\")",
                    "@Produces({ MediaType.APPLICATION_JSON_VALUE })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.webService.CorreoServiceImpl": {
        "full_name": "com.cocay.sicecd.webService.CorreoServiceImpl",
        "constructor": [],
        "package": "com.cocay.sicecd.webService",
        "begin": 1,
        "end": 45,
        "short_name": "CorreoServiceImpl",
        "src": "com.cocay.sicecd.webService.CorreoServiceImpl",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "AvisosCorreoDAO",
                "variable": "avisosCorreoDAO",
                "lineBegin": 14,
                "lineEnd": 15
            }
        ],
        "methods": {
            "enviarCorreosSeleccionados": {
                "name": "enviarCorreosSeleccionados",
                "lineBegin": 31,
                "lineEnd": 43,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        response.setResponse(avisosCorreoDAO.envioCorreos(profesorDto));\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "avisosCorreoDAO",
                        "methodName": "envioCorreos",
                        "targetClassName": "com.cocay.sicecd.dao.AvisosCorreoDAO"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            },
            "filtrosCorreos": {
                "name": "filtrosCorreos",
                "lineBegin": 17,
                "lineEnd": 29,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ResponseGeneric",
                        "variable": "response",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ResponseGeneric response = new ResponseGeneric();\r\n    try {\r\n        response.setResponse(avisosCorreoDAO.filtrosCorreos(filtroCorreoDTO));\r\n        response.setCdMensaje(\"1\");\r\n        response.setNbMensaje(\"OK\");\r\n    } catch (Exception e) {\r\n        response.setCdMensaje(\"0\");\r\n        response.setNbMensaje(\"ERROR\");\r\n    }\r\n    return response;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "avisosCorreoDAO",
                        "methodName": "filtrosCorreos",
                        "targetClassName": "com.cocay.sicecd.dao.AvisosCorreoDAO"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setResponse",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setCdMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    },
                    {
                        "scopeName": "response",
                        "methodName": "setNbMensaje",
                        "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
                    }
                ],
                "exception": []
            }
        },
        "implements": [
            "CorreoService",
            "com.cocay.sicecd.webService.CorreoService"
        ],
        "extends": [],
        "imports": [
            "java.util.List",
            "org.springframework.beans.factory.annotation.Autowired",
            "com.cocay.sicecd.dao.AvisosCorreoDAO",
            "com.cocay.sicecd.dto.FiltroCorreoDTO",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.dto.ResponseGeneric"
        ],
        "methodsInvocations": [
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "avisosCorreoDAO",
                "methodName": "filtrosCorreos",
                "targetClassName": "com.cocay.sicecd.dao.AvisosCorreoDAO"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "avisosCorreoDAO",
                "methodName": "envioCorreos",
                "targetClassName": "com.cocay.sicecd.dao.AvisosCorreoDAO"
            },
            {
                "scopeName": "response",
                "methodName": "setResponse",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setCdMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            },
            {
                "scopeName": "response",
                "methodName": "setNbMensaje",
                "targetClassName": "com.cocay.sicecd.dto.ResponseGeneric"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "enviarCorreosSeleccionados",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        response.setResponse(avisosCorreoDAO.envioCorreos(profesorDto));\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "filtrosCorreos",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ResponseGeneric response = new ResponseGeneric();\r",
                    "    try {\r",
                    "        response.setResponse(avisosCorreoDAO.filtrosCorreos(filtroCorreoDTO));\r",
                    "        response.setCdMensaje(\"1\");\r",
                    "        response.setNbMensaje(\"OK\");\r",
                    "    } catch (Exception e) {\r",
                    "        response.setCdMensaje(\"0\");\r",
                    "        response.setNbMensaje(\"ERROR\");\r",
                    "    }\r",
                    "    return response;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.webService.CorreoService": {
        "full_name": "com.cocay.sicecd.webService.CorreoService",
        "constructor": [],
        "package": "com.cocay.sicecd.webService",
        "begin": 1,
        "end": 37,
        "short_name": "CorreoService",
        "src": "com.cocay.sicecd.webService.CorreoService",
        "annotations": [
            "@Path(\"/CorreoService\")"
        ],
        "dependencies": [],
        "instance_variables": [],
        "methods": {
            "enviarCorreosSeleccionados": {
                "name": "enviarCorreosSeleccionados",
                "lineBegin": 30,
                "lineEnd": 36,
                "annotations": [
                    "@POST",
                    "@Path(\"/enviarCorreosSeleccionados/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            },
            "filtrosCorreos": {
                "name": "filtrosCorreos",
                "lineBegin": 22,
                "lineEnd": 28,
                "annotations": [
                    "@POST",
                    "@Path(\"/filtrosCorreos/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "returnDataType": [
                    "ResponseGeneric"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.List",
            "javax.ws.rs.Consumes",
            "javax.ws.rs.POST",
            "javax.ws.rs.Path",
            "javax.ws.rs.PathParam",
            "javax.ws.rs.Produces",
            "javax.ws.rs.core.MediaType",
            "org.hibernate.annotations.Parameter",
            "org.springframework.data.repository.query.Param",
            "com.cocay.sicecd.dto.FiltroCorreoDTO",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.dto.ResponseGeneric"
        ],
        "methodsInvocations": [],
        "isInterface": true,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "enviarCorreosSeleccionados",
                "annotations": [
                    "@POST",
                    "@Path(\"/enviarCorreosSeleccionados/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            },
            {
                "name": "filtrosCorreos",
                "annotations": [
                    "@POST",
                    "@Path(\"/filtrosCorreos/\")",
                    "@Produces(MediaType.APPLICATION_JSON)",
                    "@Consumes(MediaType.APPLICATION_JSON)"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "ResponseGeneric",
                "parameters": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    ""
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dao.AvisosCorreoDAO": {
        "full_name": "com.cocay.sicecd.dao.AvisosCorreoDAO",
        "constructor": [],
        "package": "com.cocay.sicecd.dao",
        "begin": 1,
        "end": 162,
        "short_name": "AvisosCorreoDAO",
        "src": "com.cocay.sicecd.dao.AvisosCorreoDAO",
        "annotations": [
            "@SuppressWarnings(\"deprecation\")",
            "@Component"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 39,
                "lineEnd": 40
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "_email",
                "lineBegin": 42,
                "lineEnd": 43
            },
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private",
                "identifier": [],
                "type": "SendMailService",
                "variable": "emailSender",
                "lineBegin": 45,
                "lineEnd": 46
            }
        ],
        "methods": {
            "envioCorreos": {
                "name": "envioCorreos",
                "lineBegin": 49,
                "lineEnd": 70,
                "annotations": [],
                "returnDataType": [
                    "List<ProfesorDto>"
                ],
                "identifier": [
                    "List",
                    "ProfesorDto"
                ],
                "parametersDataType": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDTO",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "ThreadPoolExecutor",
                        "variable": "executor",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    ThreadPoolExecutor executor = new ThreadPoolExecutor(10, 10, 1, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>());\r\n    // inside your getSalesUserData() method\r\n    executor.execute(new Runnable() {\r\n\r\n        @Override\r\n        public void run() {\r\n            for (ProfesorDto p : profesorDTO) {\r\n                System.out.print(p.getCorreo());\r\n                String from = \"cocayprueba@gmail.com\";\r\n                String to = p.getCorreo();\r\n                String subject = p.getCdAsunto();\r\n                String body = p.getCdMensaje();\r\n                emailSender.sendMailSender(from, to, subject, body);\r\n                System.out.println(Thread.currentThread().getName());\r\n            }\r\n        }\r\n    });\r\n    return profesorDTO;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCdAsunto",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCdMensaje",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "executor",
                        "methodName": "execute",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "run": {
                "name": "run",
                "lineBegin": 53,
                "lineEnd": 65,
                "annotations": [
                    "@Override"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "String",
                        "variable": "from",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "to",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "subject",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "body",
                        "qualifedType": ""
                    },
                    {
                        "type": "ProfesorDto",
                        "variable": "p",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    for (ProfesorDto p : profesorDTO) {\r\n        System.out.print(p.getCorreo());\r\n        String from = \"cocayprueba@gmail.com\";\r\n        String to = p.getCorreo();\r\n        String subject = p.getCdAsunto();\r\n        String body = p.getCdMensaje();\r\n        emailSender.sendMailSender(from, to, subject, body);\r\n        System.out.println(Thread.currentThread().getName());\r\n    }\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCorreo",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCdAsunto",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "p",
                        "methodName": "getCdMensaje",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            },
            "filtrosCorreos": {
                "name": "filtrosCorreos",
                "lineBegin": 73,
                "lineEnd": 160,
                "annotations": [
                    "@SuppressWarnings(\"unchecked\")"
                ],
                "returnDataType": [
                    "List<ProfesorDto>"
                ],
                "identifier": [
                    "List",
                    "ProfesorDto"
                ],
                "parametersDataType": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "boolean",
                        "variable": "bool",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<ProfesorDto> lstProfesores = new ArrayList<ProfesorDto>();\r\n    boolean bool = false;\r\n    String consulta = \"SELECT DISTINCT nombres, correo FROM (SELECT \\n\" + \"   PROF.pk_id_profesor idProfesor,\\n\" + \"\tPROF.NOMBRE ||' '|| PROF.apellido_paterno ||' '|| PROF.apellido_materno nombres,\\n\" + \"\tPROF.CORREO correo,\\n\" + \"\tCUR.CLAVE CLAVE,\\n\" + \"\tCUR.NOMBRE NOMBRE,\\n\" + \"\tCUR.FK_ID_TIPO_CURSO FK_ID_TIPO_CURSO,\\n\" + \"\tGRP.FECHA_INICIO F_INICIO,\\n\" + \"\tGRP.fecha_fin,\\n\" + \"\tPROF.rfc rfc,\\n\" + \"\tPROF.fk_id_estado fk_id_estado,\\n\" + \"\tPROF.fk_id_turno fk_id_turno,\\n\" + \"\tINS.fk_id_grupo fk_id_grupo\\n\" + \"FROM INSCRIPCION INS \\n\" + \"\tFULL OUTER JOIN PROFESOR PROF ON PROF.pk_id_profesor = INS.fk_id_profesor\\n\" + \"\tFULL OUTER JOIN GRUPO GRP ON INS.fk_id_grupo = GRP.pk_id_grupo\\n\" + \"\tFULL OUTER JOIN CURSO CUR ON GRP.fk_id_curso = CUR.pk_id_curso) PROFESORES\";\r\n    System.out.println(\"filtros \" + filtroCorreoDTO);\r\n    if (filtroCorreoDTO != null) {\r\n        consulta += \" WHERE \";\r\n        if (filtroCorreoDTO.getNombre() != null && !filtroCorreoDTO.getNombre().equals(\"\")) {\r\n            consulta += \" NOMBRE ILIKE '%\" + filtroCorreoDTO.getNombre() + \"%'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getClave() != null && !filtroCorreoDTO.getClave().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \"CLAVE ILIKE '%\" + filtroCorreoDTO.getClave() + \"%'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getTipo() != null && !filtroCorreoDTO.getTipo().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" FK_ID_TIPO_CURSO = \" + filtroCorreoDTO.getTipo() + \"\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getfInicio() != null && !filtroCorreoDTO.getfInicio().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" TO_CHAR( FECHA_INICIO, 'YYYY-MM-DD') = '\" + filtroCorreoDTO.getfInicio() + \"'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getfTermino() != null && !filtroCorreoDTO.getfTermino().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" TO_CHAR( fecha_fin, 'YYYY-MM-DD') = '\" + filtroCorreoDTO.getfTermino() + \"'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getNombres() != null && !filtroCorreoDTO.getNombres().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" NOMBRES ILIKE '%\" + filtroCorreoDTO.getNombres() + \"%'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getRfc() != null && !filtroCorreoDTO.getRfc().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" rfc = '\" + filtroCorreoDTO.getRfc() + \"'\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getEstado() != null && !filtroCorreoDTO.getEstado().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" fk_id_estado = \" + filtroCorreoDTO.getEstado() + \"\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getTurno() != null && !filtroCorreoDTO.getTurno().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" fk_id_turno = \" + filtroCorreoDTO.getTurno() + \"\";\r\n            bool = true;\r\n        }\r\n        if (filtroCorreoDTO.getIdGrupo() != null && !filtroCorreoDTO.getIdGrupo().equals(\"\")) {\r\n            consulta += (bool ? \" OR \" : \" \") + \" fk_id_grupo = \" + filtroCorreoDTO.getIdGrupo() + \"\";\r\n            bool = true;\r\n        }\r\n    }\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ProfesorDto.class));\r\n    lstProfesores = (List<ProfesorDto>) query.getResultList();\r\n    return lstProfesores;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getNombre()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombre",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getClave()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getClave",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTipo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTipo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getTipo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTipo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfInicio",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfInicio",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getfInicio()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfInicio",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfTermino",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfTermino",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getfTermino()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getfTermino",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getNombres()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getNombres",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getRfc()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getRfc",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getEstado()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getEstado",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getTurno()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getTurno",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO.getIdGrupo()",
                        "methodName": "equals",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "filtroCorreoDTO",
                        "methodName": "getIdGrupo",
                        "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
                    },
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"nombres\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.awt.EventQueue",
            "java.io.IOException",
            "java.util.ArrayList",
            "java.util.List",
            "java.util.Properties",
            "java.util.concurrent.LinkedBlockingQueue",
            "java.util.concurrent.ThreadPoolExecutor",
            "java.util.concurrent.TimeUnit",
            "javax.mail",
            "javax.mail.internet",
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.hibernate.SQLQuery",
            "org.hibernate.transform.Transformers",
            "org.hibernate.type.StringType",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.beans.factory.annotation.Value",
            "org.springframework.http.ResponseEntity",
            "org.springframework.stereotype.Component",
            "org.springframework.web.bind.annotation.PostMapping",
            "org.springframework.web.bind.annotation.RequestBody",
            "com.cocay.sicecd.LogTypes",
            "com.cocay.sicecd.dto.FiltroCorreoDTO",
            "com.cocay.sicecd.dto.ProfesorDto",
            "com.cocay.sicecd.model.Usuario_sys",
            "com.cocay.sicecd.repo.Usuario_sysRep",
            "com.cocay.sicecd.service.Logging",
            "com.cocay.sicecd.service.SendMailService"
        ],
        "methodsInvocations": [
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getNombre()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombre",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getClave()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getClave",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTipo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTipo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getTipo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTipo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfInicio",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfInicio",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getfInicio()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfInicio",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfTermino",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfTermino",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getfTermino()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getfTermino",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getNombres()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getNombres",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getRfc()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getRfc",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getEstado()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getEstado",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getTurno()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getTurno",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO.getIdGrupo()",
                "methodName": "equals",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            },
            {
                "scopeName": "filtroCorreoDTO",
                "methodName": "getIdGrupo",
                "targetClassName": "com.cocay.sicecd.dto.FiltroCorreoDTO"
            }
        ],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "envioCorreos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "List<ProfesorDto>",
                "parameters": [
                    {
                        "type": "List<ProfesorDto>",
                        "variable": "profesorDTO",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    ThreadPoolExecutor executor = new ThreadPoolExecutor(10, 10, 1, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>());\r",
                    "    // inside your getSalesUserData() method\r",
                    "    executor.execute(new Runnable() {\r",
                    "\r",
                    "        @Override\r",
                    "        public void run() {\r",
                    "            for (ProfesorDto p : profesorDTO) {\r",
                    "                System.out.print(p.getCorreo());\r",
                    "                String from = \"cocayprueba@gmail.com\";\r",
                    "                String to = p.getCorreo();\r",
                    "                String subject = p.getCdAsunto();\r",
                    "                String body = p.getCdMensaje();\r",
                    "                emailSender.sendMailSender(from, to, subject, body);\r",
                    "                System.out.println(Thread.currentThread().getName());\r",
                    "            }\r",
                    "        }\r",
                    "    });\r",
                    "    return profesorDTO;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "run",
                "annotations": [
                    "@Override"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    for (ProfesorDto p : profesorDTO) {\r",
                    "        System.out.print(p.getCorreo());\r",
                    "        String from = \"cocayprueba@gmail.com\";\r",
                    "        String to = p.getCorreo();\r",
                    "        String subject = p.getCdAsunto();\r",
                    "        String body = p.getCdMensaje();\r",
                    "        emailSender.sendMailSender(from, to, subject, body);\r",
                    "        System.out.println(Thread.currentThread().getName());\r",
                    "    }\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "filtrosCorreos",
                "annotations": [
                    "@SuppressWarnings(\"unchecked\")"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<ProfesorDto>",
                "parameters": [
                    {
                        "type": "FiltroCorreoDTO",
                        "variable": "filtroCorreoDTO",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<ProfesorDto> lstProfesores = new ArrayList<ProfesorDto>();\r",
                    "    boolean bool = false;\r",
                    "    String consulta = \"SELECT DISTINCT nombres, correo FROM (SELECT \\n\" + \"   PROF.pk_id_profesor idProfesor,\\n\" + \"\tPROF.NOMBRE ||' '|| PROF.apellido_paterno ||' '|| PROF.apellido_materno nombres,\\n\" + \"\tPROF.CORREO correo,\\n\" + \"\tCUR.CLAVE CLAVE,\\n\" + \"\tCUR.NOMBRE NOMBRE,\\n\" + \"\tCUR.FK_ID_TIPO_CURSO FK_ID_TIPO_CURSO,\\n\" + \"\tGRP.FECHA_INICIO F_INICIO,\\n\" + \"\tGRP.fecha_fin,\\n\" + \"\tPROF.rfc rfc,\\n\" + \"\tPROF.fk_id_estado fk_id_estado,\\n\" + \"\tPROF.fk_id_turno fk_id_turno,\\n\" + \"\tINS.fk_id_grupo fk_id_grupo\\n\" + \"FROM INSCRIPCION INS \\n\" + \"\tFULL OUTER JOIN PROFESOR PROF ON PROF.pk_id_profesor = INS.fk_id_profesor\\n\" + \"\tFULL OUTER JOIN GRUPO GRP ON INS.fk_id_grupo = GRP.pk_id_grupo\\n\" + \"\tFULL OUTER JOIN CURSO CUR ON GRP.fk_id_curso = CUR.pk_id_curso) PROFESORES\";\r",
                    "    System.out.println(\"filtros \" + filtroCorreoDTO);\r",
                    "    if (filtroCorreoDTO != null) {\r",
                    "        consulta += \" WHERE \";\r",
                    "        if (filtroCorreoDTO.getNombre() != null && !filtroCorreoDTO.getNombre().equals(\"\")) {\r",
                    "            consulta += \" NOMBRE ILIKE '%\" + filtroCorreoDTO.getNombre() + \"%'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getClave() != null && !filtroCorreoDTO.getClave().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \"CLAVE ILIKE '%\" + filtroCorreoDTO.getClave() + \"%'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getTipo() != null && !filtroCorreoDTO.getTipo().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" FK_ID_TIPO_CURSO = \" + filtroCorreoDTO.getTipo() + \"\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getfInicio() != null && !filtroCorreoDTO.getfInicio().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" TO_CHAR( FECHA_INICIO, 'YYYY-MM-DD') = '\" + filtroCorreoDTO.getfInicio() + \"'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getfTermino() != null && !filtroCorreoDTO.getfTermino().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" TO_CHAR( fecha_fin, 'YYYY-MM-DD') = '\" + filtroCorreoDTO.getfTermino() + \"'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getNombres() != null && !filtroCorreoDTO.getNombres().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" NOMBRES ILIKE '%\" + filtroCorreoDTO.getNombres() + \"%'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getRfc() != null && !filtroCorreoDTO.getRfc().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" rfc = '\" + filtroCorreoDTO.getRfc() + \"'\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getEstado() != null && !filtroCorreoDTO.getEstado().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" fk_id_estado = \" + filtroCorreoDTO.getEstado() + \"\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getTurno() != null && !filtroCorreoDTO.getTurno().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" fk_id_turno = \" + filtroCorreoDTO.getTurno() + \"\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "        if (filtroCorreoDTO.getIdGrupo() != null && !filtroCorreoDTO.getIdGrupo().equals(\"\")) {\r",
                    "            consulta += (bool ? \" OR \" : \" \") + \" fk_id_grupo = \" + filtroCorreoDTO.getIdGrupo() + \"\";\r",
                    "            bool = true;\r",
                    "        }\r",
                    "    }\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ProfesorDto.class));\r",
                    "    lstProfesores = (List<ProfesorDto>) query.getResultList();\r",
                    "    return lstProfesores;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dao.CargaBatchServiceDAO": {
        "full_name": "com.cocay.sicecd.dao.CargaBatchServiceDAO",
        "constructor": [],
        "package": "com.cocay.sicecd.dao",
        "begin": 1,
        "end": 281,
        "short_name": "CargaBatchServiceDAO",
        "src": "com.cocay.sicecd.dao.CargaBatchServiceDAO",
        "annotations": [
            "@SuppressWarnings(\"deprecation\")",
            "@Component"
        ],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [
                    "@Autowired"
                ],
                "modifier": "private ",
                "identifier": [],
                "type": "EntityManager",
                "variable": "em",
                "lineBegin": 27,
                "lineEnd": 28
            }
        ],
        "methods": {
            "lstInscripciones": {
                "name": "lstInscripciones",
                "lineBegin": 175,
                "lineEnd": 209,
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "returnDataType": [
                    "List<InscripcionDto>"
                ],
                "identifier": [
                    "List",
                    "InscripcionDto"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<InscripcionDto> lstInscr = new ArrayList<InscripcionDto>();\r\n    String consulta = \"SELECT pk_id_inscripcion, idGrupo, idProfesor, calif, temp_curso FROM (\\n\" + \"\tSELECT pk_id_inscripcion,\\n\" + \"\t\t\t\ttemp_grupo idGrupo,\\n\" + \"\t\t\t\ttemp_profesor idProfesor,\\n\" + \"\t\t\t\tcalif, \\n\" + \"\t\t\t\ttemp_curso\" + \"\t\t\t\tFROM inscripcion \\n\" + \"               WHERE st_Tabla = 1) foo\";\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" pk_id_inscripcion\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"idProfesor\", StringType.INSTANCE).addScalar(\"calif\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(InscripcionDto.class));\r\n    query.setFirstResult(offset);\r\n    query.setMaxResults(limit);\r\n    lstInscr = (List<InscripcionDto>) query.getResultList();\r\n    return lstInscr;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"idProfesor\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"idProfesor\", StringType.INSTANCE).addScalar(\"calif\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"idProfesor\", StringType.INSTANCE).addScalar(\"calif\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setFirstResult",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setMaxResults",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "totalLstInscripciones": {
                "name": "totalLstInscripciones",
                "lineBegin": 211,
                "lineEnd": 218,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"SELECT count(1) FROM inscripcion WHERE st_Tabla = 1\");\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "lstProfesores": {
                "name": "lstProfesores",
                "lineBegin": 30,
                "lineEnd": 72,
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "returnDataType": [
                    "List<ProfesorDto>"
                ],
                "identifier": [
                    "List",
                    "ProfesorDto"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<ProfesorDto> lstProfesores = new ArrayList<ProfesorDto>();\r\n    //\t\tQuery queryMax = em.createNativeQuery(\"select max(pk_id_profesor) from profesor\");\r\n    //\r\n    //\t\tint total = ((Number) queryMax.getSingleResult()).intValue();\r\n    String consulta = \"SELECT idProfesor, nombres, aPaterno, aMaterno, rfc, curp, correo, telefono FROM (SELECT pk_id_profesor idProfesor, \\n\" + \"\t\tnombre nombres, \\n\" + \"\t\tapellido_paterno aPaterno, \\n\" + \"\t\tapellido_materno aMaterno,\\n\" + \"\t\trfc,\\n\" + \"\t\tcurp,\\n\" + \"\t\tcorreo,\\n\" + \"\t\ttelefono\\n\" + \"FROM Profesor\\n \" + \"WHERE st_Tabla = 1) foo\";\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idProfesor\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE).addScalar(\"curp\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE).addScalar(\"telefono\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ProfesorDto.class));\r\n    query.setFirstResult(offset);\r\n    query.setMaxResults(limit);\r\n    lstProfesores = (List<ProfesorDto>) query.getResultList();\r\n    return lstProfesores;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE).addScalar(\"curp\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE).addScalar(\"curp\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE).addScalar(\"curp\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE).addScalar(\"telefono\", StringType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setFirstResult",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setMaxResults",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "lstGrupo": {
                "name": "lstGrupo",
                "lineBegin": 129,
                "lineEnd": 164,
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "returnDataType": [
                    "List<GrupoDto>"
                ],
                "identifier": [
                    "List",
                    "GrupoDto"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<GrupoDto> lstGrupo = new ArrayList<GrupoDto>();\r\n    String consulta = \"SELECT idGrupo, clave, inicio, termino, temp_curso FROM (\\n\" + \"\tSELECT pk_id_grupo idGrupo,\\n\" + \"\t\t\t\tclave,\\n\" + \"\t\t\t\tfecha_inicio inicio,\\n\" + \"\t\t\t\tfecha_fin termino, \\n\" + \"\t\t\t\ttemp_curso \" + \"\t\t\t\tFROM Grupo\\n \" + \"\t\t\tWHERE st_Tabla = 1) foo\";\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idGrupo\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"inicio\", StringType.INSTANCE).addScalar(\"termino\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(GrupoDto.class));\r\n    query.setFirstResult(offset);\r\n    query.setMaxResults(limit);\r\n    lstGrupo = (List<GrupoDto>) query.getResultList();\r\n    return lstGrupo;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"inicio\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"inicio\", StringType.INSTANCE).addScalar(\"termino\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"inicio\", StringType.INSTANCE).addScalar(\"termino\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setFirstResult",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setMaxResults",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "totalLstErrores": {
                "name": "totalLstErrores",
                "lineBegin": 258,
                "lineEnd": 265,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"SELECT count(1) FROM errores\");\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "totalLstProfesores": {
                "name": "totalLstProfesores",
                "lineBegin": 74,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"SELECT count(1) FROM Profesor WHERE st_Tabla = 1\");\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "totalLstGrupo": {
                "name": "totalLstGrupo",
                "lineBegin": 166,
                "lineEnd": 173,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"SELECT count(1) FROM Grupo WHERE st_Tabla = 1\");\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "ultimoValor": {
                "name": "ultimoValor",
                "lineBegin": 220,
                "lineEnd": 225,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"select max(pk_id_curso) total from curso\");\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    System.out.println(total);\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "lstLimpiar": {
                "name": "lstLimpiar",
                "lineBegin": 267,
                "lineEnd": 272,
                "annotations": [
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"DELETE FROM errores WHERE estado = 1\");\r\n    query.executeUpdate();\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "limpiarTabla": {
                "name": "limpiarTabla",
                "lineBegin": 274,
                "lineEnd": 279,
                "annotations": [
                    "@Transactional"
                ],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"UPDATE \" + tabla + \" set st_tabla = 2 WHERE st_tabla = 1\");\r\n    query.executeUpdate();\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "executeUpdate",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "lstCursos": {
                "name": "lstCursos",
                "lineBegin": 83,
                "lineEnd": 118,
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "returnDataType": [
                    "List<CursoDto>"
                ],
                "identifier": [
                    "List",
                    "CursoDto"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<CursoDto> lstCursos = new ArrayList<CursoDto>();\r\n    String consulta = \"SELECT idCurso, clave, nombre, horas, tipoCurso FROM (\\n\" + \"\tSELECT pk_id_curso idCurso,\\n\" + \"\t\t\t\tclave,\\n\" + \"\t\t\t\tnombre,\\n\" + \"\t\t\t\thoras, \\n\" + \"\t\t\t\t(SELECT nombre FROM tipo_curso WHERE pk_id_tipo_curso = fk_id_tipo_curso) tipoCurso\" + \"\t\t\t\tFROM Curso \\n\" + \"\t\t\t\tWHERE st_Tabla = 1) foo\";\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idCurso\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"nombre\", StringType.INSTANCE).addScalar(\"horas\", StringType.INSTANCE).addScalar(\"tipoCurso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(CursoDto.class));\r\n    query.setFirstResult(offset);\r\n    query.setMaxResults(limit);\r\n    lstCursos = (List<CursoDto>) query.getResultList();\r\n    return lstCursos;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"nombre\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"nombre\", StringType.INSTANCE).addScalar(\"horas\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"nombre\", StringType.INSTANCE).addScalar(\"horas\", StringType.INSTANCE).addScalar(\"tipoCurso\", StringType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setFirstResult",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setMaxResults",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "totalLstCursos": {
                "name": "totalLstCursos",
                "lineBegin": 120,
                "lineEnd": 127,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    },
                    {
                        "type": "int",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    Query query = em.createNativeQuery(\"SELECT count(1) FROM Curso WHERE st_Tabla = 1\");\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    int total = ((Number) query.getSingleResult()).intValue();\r\n    return total;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "getSingleResult",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            },
            "lstErrores": {
                "name": "lstErrores",
                "lineBegin": 227,
                "lineEnd": 256,
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "returnDataType": [
                    "List<ErroresDTO>"
                ],
                "identifier": [
                    "List",
                    "ErroresDTO"
                ],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "variables": [
                    {
                        "type": "String",
                        "variable": "consulta",
                        "qualifedType": ""
                    },
                    {
                        "type": "Query",
                        "variable": "query",
                        "qualifedType": ""
                    }
                ],
                "body": "{\r\n    List<ErroresDTO> lstErr = new ArrayList<ErroresDTO>();\r\n    String consulta = \"SELECT cdMensaje, stEstado FROM (\\n\" + \"\tSELECT mensaje cdMensaje,\\n\" + \"\t\t\t\testado stEstado \\n\" + \"\t\t\t\tFROM errores \\n\" + \"\t\t\t\tWHERE estado = 1 ) foo\";\r\n    if (search != null && !search.equals(\"\")) {\r\n    }\r\n    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" cdMensaje\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r\n    Query query = em.createNativeQuery(consulta);\r\n    query.unwrap(SQLQuery.class).addScalar(\"cdMensaje\", StringType.INSTANCE).addScalar(\"stEstado\", IntegerType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ErroresDTO.class));\r\n    query.setFirstResult(offset);\r\n    query.setMaxResults(limit);\r\n    lstErr = (List<ErroresDTO>) query.getResultList();\r\n    return lstErr;\r\n}",
                "methodInvocations": [
                    {
                        "scopeName": "query",
                        "methodName": "unwrap",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"cdMensaje\", StringType.INSTANCE)",
                        "methodName": "addScalar",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query.unwrap(SQLQuery.class).addScalar(\"cdMensaje\", StringType.INSTANCE).addScalar(\"stEstado\", IntegerType.INSTANCE)",
                        "methodName": "setResultTransformer",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setFirstResult",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "setMaxResults",
                        "targetClassName": ""
                    },
                    {
                        "scopeName": "query",
                        "methodName": "getResultList",
                        "targetClassName": ""
                    }
                ],
                "exception": [
                    "Exception"
                ]
            }
        },
        "implements": [],
        "extends": [],
        "imports": [
            "java.util.ArrayList",
            "java.util.List",
            "javax.persistence.EntityManager",
            "javax.persistence.Query",
            "org.hibernate.SQLQuery",
            "org.hibernate.transform.Transformers",
            "org.hibernate.type.IntegerType",
            "org.hibernate.type.StringType",
            "org.springframework.beans.factory.annotation.Autowired",
            "org.springframework.stereotype.Component",
            "org.springframework.transaction.annotation.Transactional",
            "com.cocay.sicecd.dto.CursoDto",
            "com.cocay.sicecd.dto.ErroresDTO",
            "com.cocay.sicecd.dto.GrupoDto",
            "com.cocay.sicecd.dto.InscripcionDto",
            "com.cocay.sicecd.dto.ProfesorDto"
        ],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "lstInscripciones",
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<InscripcionDto>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<InscripcionDto> lstInscr = new ArrayList<InscripcionDto>();\r",
                    "    String consulta = \"SELECT pk_id_inscripcion, idGrupo, idProfesor, calif, temp_curso FROM (\\n\" + \"\tSELECT pk_id_inscripcion,\\n\" + \"\t\t\t\ttemp_grupo idGrupo,\\n\" + \"\t\t\t\ttemp_profesor idProfesor,\\n\" + \"\t\t\t\tcalif, \\n\" + \"\t\t\t\ttemp_curso\" + \"\t\t\t\tFROM inscripcion \\n\" + \"               WHERE st_Tabla = 1) foo\";\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" pk_id_inscripcion\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"idProfesor\", StringType.INSTANCE).addScalar(\"calif\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(InscripcionDto.class));\r",
                    "    query.setFirstResult(offset);\r",
                    "    query.setMaxResults(limit);\r",
                    "    lstInscr = (List<InscripcionDto>) query.getResultList();\r",
                    "    return lstInscr;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "totalLstInscripciones",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"SELECT count(1) FROM inscripcion WHERE st_Tabla = 1\");\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "lstProfesores",
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<ProfesorDto>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<ProfesorDto> lstProfesores = new ArrayList<ProfesorDto>();\r",
                    "    //\t\tQuery queryMax = em.createNativeQuery(\"select max(pk_id_profesor) from profesor\");\r",
                    "    //\r",
                    "    //\t\tint total = ((Number) queryMax.getSingleResult()).intValue();\r",
                    "    String consulta = \"SELECT idProfesor, nombres, aPaterno, aMaterno, rfc, curp, correo, telefono FROM (SELECT pk_id_profesor idProfesor, \\n\" + \"\t\tnombre nombres, \\n\" + \"\t\tapellido_paterno aPaterno, \\n\" + \"\t\tapellido_materno aMaterno,\\n\" + \"\t\trfc,\\n\" + \"\t\tcurp,\\n\" + \"\t\tcorreo,\\n\" + \"\t\ttelefono\\n\" + \"FROM Profesor\\n \" + \"WHERE st_Tabla = 1) foo\";\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idProfesor\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"idProfesor\", IntegerType.INSTANCE).addScalar(\"nombres\", StringType.INSTANCE).addScalar(\"aPaterno\", StringType.INSTANCE).addScalar(\"aMaterno\", StringType.INSTANCE).addScalar(\"rfc\", StringType.INSTANCE).addScalar(\"curp\", StringType.INSTANCE).addScalar(\"correo\", StringType.INSTANCE).addScalar(\"telefono\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ProfesorDto.class));\r",
                    "    query.setFirstResult(offset);\r",
                    "    query.setMaxResults(limit);\r",
                    "    lstProfesores = (List<ProfesorDto>) query.getResultList();\r",
                    "    return lstProfesores;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "lstGrupo",
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<GrupoDto>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<GrupoDto> lstGrupo = new ArrayList<GrupoDto>();\r",
                    "    String consulta = \"SELECT idGrupo, clave, inicio, termino, temp_curso FROM (\\n\" + \"\tSELECT pk_id_grupo idGrupo,\\n\" + \"\t\t\t\tclave,\\n\" + \"\t\t\t\tfecha_inicio inicio,\\n\" + \"\t\t\t\tfecha_fin termino, \\n\" + \"\t\t\t\ttemp_curso \" + \"\t\t\t\tFROM Grupo\\n \" + \"\t\t\tWHERE st_Tabla = 1) foo\";\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idGrupo\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"idGrupo\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"inicio\", StringType.INSTANCE).addScalar(\"termino\", StringType.INSTANCE).addScalar(\"temp_curso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(GrupoDto.class));\r",
                    "    query.setFirstResult(offset);\r",
                    "    query.setMaxResults(limit);\r",
                    "    lstGrupo = (List<GrupoDto>) query.getResultList();\r",
                    "    return lstGrupo;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "totalLstErrores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"SELECT count(1) FROM errores\");\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "totalLstProfesores",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"SELECT count(1) FROM Profesor WHERE st_Tabla = 1\");\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "totalLstGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"SELECT count(1) FROM Grupo WHERE st_Tabla = 1\");\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "ultimoValor",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"select max(pk_id_curso) total from curso\");\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    System.out.println(total);\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "lstLimpiar",
                "annotations": [
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"DELETE FROM errores WHERE estado = 1\");\r",
                    "    query.executeUpdate();\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "limpiarTabla",
                "annotations": [
                    "@Transactional"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tabla",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"UPDATE \" + tabla + \" set st_tabla = 2 WHERE st_tabla = 1\");\r",
                    "    query.executeUpdate();\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "lstCursos",
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<CursoDto>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<CursoDto> lstCursos = new ArrayList<CursoDto>();\r",
                    "    String consulta = \"SELECT idCurso, clave, nombre, horas, tipoCurso FROM (\\n\" + \"\tSELECT pk_id_curso idCurso,\\n\" + \"\t\t\t\tclave,\\n\" + \"\t\t\t\tnombre,\\n\" + \"\t\t\t\thoras, \\n\" + \"\t\t\t\t(SELECT nombre FROM tipo_curso WHERE pk_id_tipo_curso = fk_id_tipo_curso) tipoCurso\" + \"\t\t\t\tFROM Curso \\n\" + \"\t\t\t\tWHERE st_Tabla = 1) foo\";\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" idCurso\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"idCurso\", StringType.INSTANCE).addScalar(\"clave\", StringType.INSTANCE).addScalar(\"nombre\", StringType.INSTANCE).addScalar(\"horas\", StringType.INSTANCE).addScalar(\"tipoCurso\", StringType.INSTANCE).setResultTransformer(Transformers.aliasToBean(CursoDto.class));\r",
                    "    query.setFirstResult(offset);\r",
                    "    query.setMaxResults(limit);\r",
                    "    lstCursos = (List<CursoDto>) query.getResultList();\r",
                    "    return lstCursos;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "totalLstCursos",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    Query query = em.createNativeQuery(\"SELECT count(1) FROM Curso WHERE st_Tabla = 1\");\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    int total = ((Number) query.getSingleResult()).intValue();\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            },
            {
                "name": "lstErrores",
                "annotations": [
                    "@SuppressWarnings({ \"unchecked\" })"
                ],
                "route": "",
                "modifier": "public",
                "returnType": "List<ErroresDTO>",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "limit",
                        "qualifedType": ""
                    },
                    {
                        "type": "Integer",
                        "variable": "offset",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "search",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "name",
                        "qualifedType": ""
                    },
                    {
                        "type": "String",
                        "variable": "order",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    List<ErroresDTO> lstErr = new ArrayList<ErroresDTO>();\r",
                    "    String consulta = \"SELECT cdMensaje, stEstado FROM (\\n\" + \"\tSELECT mensaje cdMensaje,\\n\" + \"\t\t\t\testado stEstado \\n\" + \"\t\t\t\tFROM errores \\n\" + \"\t\t\t\tWHERE estado = 1 ) foo\";\r",
                    "    if (search != null && !search.equals(\"\")) {\r",
                    "    }\r",
                    "    consulta += \" ORDER BY\" + (name != null && !\"\".equals(name) ? \" \" + name + \" \" : \" cdMensaje\") + (order != null && !order.equals(\"\") ? \" \" + order : \" DESC\");\r",
                    "    Query query = em.createNativeQuery(consulta);\r",
                    "    query.unwrap(SQLQuery.class).addScalar(\"cdMensaje\", StringType.INSTANCE).addScalar(\"stEstado\", IntegerType.INSTANCE).setResultTransformer(Transformers.aliasToBean(ErroresDTO.class));\r",
                    "    query.setFirstResult(offset);\r",
                    "    query.setMaxResults(limit);\r",
                    "    lstErr = (List<ErroresDTO>) query.getResultList();\r",
                    "    return lstErr;\r",
                    "}"
                ],
                "exceptions": [
                    "Exception"
                ]
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.ErroresDTO": {
        "full_name": "com.cocay.sicecd.dto.ErroresDTO",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 27,
        "short_name": "ErroresDTO",
        "src": "com.cocay.sicecd.dto.ErroresDTO",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "cdMensaje",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "int",
                "variable": "stEstado",
                "lineBegin": 7,
                "lineEnd": 7
            }
        ],
        "methods": {
            "getStEstado": {
                "name": "getStEstado",
                "lineBegin": 17,
                "lineEnd": 19,
                "annotations": [],
                "returnDataType": [
                    "int"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return stEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCdMensaje": {
                "name": "setCdMensaje",
                "lineBegin": 13,
                "lineEnd": 15,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cdMensaje = cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setStEstado": {
                "name": "setStEstado",
                "lineBegin": 21,
                "lineEnd": 23,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "int",
                        "variable": "stEstado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.stEstado = stEstado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCdMensaje": {
                "name": "getCdMensaje",
                "lineBegin": 9,
                "lineEnd": 11,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cdMensaje;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getStEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "int",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return stEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "cdMensaje",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cdMensaje = cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setStEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "int",
                        "variable": "stEstado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.stEstado = stEstado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCdMensaje",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cdMensaje;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.FiltroCorreoDTO": {
        "full_name": "com.cocay.sicecd.dto.FiltroCorreoDTO",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 101,
        "short_name": "FiltroCorreoDTO",
        "src": "com.cocay.sicecd.dto.FiltroCorreoDTO",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "CursoDto",
                "variable": "cursoDto",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "ProfesorDto",
                "variable": "profesorDto",
                "lineBegin": 6,
                "lineEnd": 6
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "InscripcionDto",
                "variable": "inscripcionDto",
                "lineBegin": 7,
                "lineEnd": 7
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nombre",
                "lineBegin": 8,
                "lineEnd": 8
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "clave",
                "lineBegin": 9,
                "lineEnd": 9
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "tipo",
                "lineBegin": 10,
                "lineEnd": 10
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "fInicio",
                "lineBegin": 11,
                "lineEnd": 11
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "fTermino",
                "lineBegin": 12,
                "lineEnd": 12
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "nombres",
                "lineBegin": 13,
                "lineEnd": 13
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "rfc",
                "lineBegin": 14,
                "lineEnd": 14
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "estado",
                "lineBegin": 15,
                "lineEnd": 15
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "turno",
                "lineBegin": 16,
                "lineEnd": 16
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "idGrupo",
                "lineBegin": 17,
                "lineEnd": 17
            }
        ],
        "methods": {
            "getNombres": {
                "name": "getNombres",
                "lineBegin": 67,
                "lineEnd": 69,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setInscripcionDto": {
                "name": "setInscripcionDto",
                "lineBegin": 34,
                "lineEnd": 36,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "InscripcionDto",
                        "variable": "inscripcionDto",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.inscripcionDto = inscripcionDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombres": {
                "name": "setNombres",
                "lineBegin": 70,
                "lineEnd": 72,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombres = nombres;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getClave": {
                "name": "getClave",
                "lineBegin": 43,
                "lineEnd": 45,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setClave": {
                "name": "setClave",
                "lineBegin": 46,
                "lineEnd": 48,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.clave = clave;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setfTermino": {
                "name": "setfTermino",
                "lineBegin": 64,
                "lineEnd": 66,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "fTermino",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fTermino = fTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setCursoDto": {
                "name": "setCursoDto",
                "lineBegin": 22,
                "lineEnd": 24,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "CursoDto",
                        "variable": "cursoDto",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.cursoDto = cursoDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setProfesorDto": {
                "name": "setProfesorDto",
                "lineBegin": 28,
                "lineEnd": 30,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "ProfesorDto",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.profesorDto = profesorDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTurno": {
                "name": "setTurno",
                "lineBegin": 88,
                "lineEnd": 90,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "turno",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.turno = turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getfTermino": {
                "name": "getfTermino",
                "lineBegin": 61,
                "lineEnd": 63,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fTermino;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setEstado": {
                "name": "setEstado",
                "lineBegin": 82,
                "lineEnd": 84,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.estado = estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setNombre": {
                "name": "setNombre",
                "lineBegin": 40,
                "lineEnd": 42,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.nombre = nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setfInicio": {
                "name": "setfInicio",
                "lineBegin": 58,
                "lineEnd": 60,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "fInicio",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.fInicio = fInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getCursoDto": {
                "name": "getCursoDto",
                "lineBegin": 19,
                "lineEnd": 21,
                "annotations": [],
                "returnDataType": [
                    "CursoDto"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return cursoDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setIdGrupo": {
                "name": "setIdGrupo",
                "lineBegin": 94,
                "lineEnd": 96,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.idGrupo = idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getNombre": {
                "name": "getNombre",
                "lineBegin": 37,
                "lineEnd": 39,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return nombre;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getInscripcionDto": {
                "name": "getInscripcionDto",
                "lineBegin": 31,
                "lineEnd": 33,
                "annotations": [],
                "returnDataType": [
                    "InscripcionDto"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return inscripcionDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setTipo": {
                "name": "setTipo",
                "lineBegin": 52,
                "lineEnd": 54,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.tipo = tipo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getIdGrupo": {
                "name": "getIdGrupo",
                "lineBegin": 91,
                "lineEnd": 93,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return idGrupo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getEstado": {
                "name": "getEstado",
                "lineBegin": 79,
                "lineEnd": 81,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return estado;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTurno": {
                "name": "getTurno",
                "lineBegin": 85,
                "lineEnd": 87,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return turno;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTipo": {
                "name": "getTipo",
                "lineBegin": 49,
                "lineEnd": 51,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return tipo;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRfc": {
                "name": "setRfc",
                "lineBegin": 76,
                "lineEnd": 78,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rfc = rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRfc": {
                "name": "getRfc",
                "lineBegin": 73,
                "lineEnd": 75,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rfc;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getfInicio": {
                "name": "getfInicio",
                "lineBegin": 55,
                "lineEnd": 57,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return fInicio;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getProfesorDto": {
                "name": "getProfesorDto",
                "lineBegin": 25,
                "lineEnd": 27,
                "annotations": [],
                "returnDataType": [
                    "ProfesorDto"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return profesorDto;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "getNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setInscripcionDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "InscripcionDto",
                        "variable": "inscripcionDto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.inscripcionDto = inscripcionDto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombres",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombres",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombres = nombres;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setClave",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "clave",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.clave = clave;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setfTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "fTermino",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fTermino = fTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setCursoDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "CursoDto",
                        "variable": "cursoDto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.cursoDto = cursoDto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setProfesorDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "ProfesorDto",
                        "variable": "profesorDto",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.profesorDto = profesorDto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "turno",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.turno = turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getfTermino",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fTermino;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "estado",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.estado = estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "nombre",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.nombre = nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setfInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "fInicio",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.fInicio = fInicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getCursoDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "CursoDto",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return cursoDto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "idGrupo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.idGrupo = idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getNombre",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return nombre;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getInscripcionDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "InscripcionDto",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return inscripcionDto;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setTipo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "tipo",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.tipo = tipo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getIdGrupo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return idGrupo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getEstado",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return estado;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTurno",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return turno;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTipo",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return tipo;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "rfc",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rfc = rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRfc",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rfc;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getfInicio",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return fInicio;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getProfesorDto",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "ProfesorDto",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return profesorDto;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    },
    "com.cocay.sicecd.dto.ResponseGenericPagination": {
        "full_name": "com.cocay.sicecd.dto.ResponseGenericPagination",
        "constructor": [],
        "package": "com.cocay.sicecd.dto",
        "begin": 1,
        "end": 33,
        "short_name": "ResponseGenericPagination",
        "src": "com.cocay.sicecd.dto.ResponseGenericPagination",
        "annotations": [],
        "dependencies": [],
        "instance_variables": [
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Integer",
                "variable": "total",
                "lineBegin": 4,
                "lineEnd": 4
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "Object",
                "variable": "rows",
                "lineBegin": 5,
                "lineEnd": 5
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "paginaSig",
                "lineBegin": 6,
                "lineEnd": 6
            },
            {
                "annotations": [],
                "modifier": "private ",
                "identifier": [],
                "type": "String",
                "variable": "paginaAnt",
                "lineBegin": 7,
                "lineEnd": 7
            }
        ],
        "methods": {
            "setTotal": {
                "name": "setTotal",
                "lineBegin": 12,
                "lineEnd": 14,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Integer",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.total = total;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPaginaAnt": {
                "name": "getPaginaAnt",
                "lineBegin": 27,
                "lineEnd": 29,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return paginaAnt;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPaginaAnt": {
                "name": "setPaginaAnt",
                "lineBegin": 30,
                "lineEnd": 32,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "paginaAnt",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.paginaAnt = paginaAnt;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setRows": {
                "name": "setRows",
                "lineBegin": 18,
                "lineEnd": 20,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "Object",
                        "variable": "rows",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.rows = rows;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "setPaginaSig": {
                "name": "setPaginaSig",
                "lineBegin": 24,
                "lineEnd": 26,
                "annotations": [],
                "returnDataType": [
                    "void"
                ],
                "identifier": [],
                "parametersDataType": [
                    {
                        "type": "String",
                        "variable": "paginaSig",
                        "qualifedType": ""
                    }
                ],
                "variables": [],
                "body": "{\r\n    this.paginaSig = paginaSig;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getTotal": {
                "name": "getTotal",
                "lineBegin": 9,
                "lineEnd": 11,
                "annotations": [],
                "returnDataType": [
                    "Integer"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return total;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getRows": {
                "name": "getRows",
                "lineBegin": 15,
                "lineEnd": 17,
                "annotations": [],
                "returnDataType": [
                    "Object"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return rows;\r\n}",
                "methodInvocations": [],
                "exception": []
            },
            "getPaginaSig": {
                "name": "getPaginaSig",
                "lineBegin": 21,
                "lineEnd": 23,
                "annotations": [],
                "returnDataType": [
                    "String"
                ],
                "identifier": [],
                "parametersDataType": [],
                "variables": [],
                "body": "{\r\n    return paginaSig;\r\n}",
                "methodInvocations": [],
                "exception": []
            }
        },
        "implements": [],
        "extends": [],
        "imports": [],
        "methodsInvocations": [],
        "isInterface": false,
        "myInterfaces": [],
        "myMethods": [
            {
                "name": "setTotal",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Integer",
                        "variable": "total",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.total = total;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPaginaAnt",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return paginaAnt;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPaginaAnt",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "paginaAnt",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.paginaAnt = paginaAnt;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setRows",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "Object",
                        "variable": "rows",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.rows = rows;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "setPaginaSig",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "void",
                "parameters": [
                    {
                        "type": "String",
                        "variable": "paginaSig",
                        "qualifedType": ""
                    }
                ],
                "body": [
                    "{\r",
                    "    this.paginaSig = paginaSig;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getTotal",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Integer",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return total;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getRows",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "Object",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return rows;\r",
                    "}"
                ],
                "exceptions": []
            },
            {
                "name": "getPaginaSig",
                "annotations": [],
                "route": "",
                "modifier": "public",
                "returnType": "String",
                "parameters": [],
                "body": [
                    "{\r",
                    "    return paginaSig;\r",
                    "}"
                ],
                "exceptions": []
            }
        ],
        "classGlue": [],
        "classDrag": [],
        "isOriginal": true
    }
}